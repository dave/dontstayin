<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ScriptCoreLibJava</name>
    </assembly>
    <members>
        <member name="P:javax.common.runtime.Helper.BuildDateString">
            <summary>
            gets the hard coded build date
            </summary>
        </member>
        <member name="P:javax.common.runtime.Helper.CompilerBuildDateString">
            <summary>
            gets the hard coded compiler build date
            </summary>
        </member>
        <member name="T:javax.common.runtime.types.VariantValue">
            <summary>
            allows to convert seamlessly between long and a hex string
            </summary>
        </member>
        <member name="M:java.awt.Component.repaint">
            <summary>
            Repaints this component.
            </summary>
        </member>
        <member name="M:java.awt.Container.paint(java.awt.Graphics)">
            <summary>
            Paints the container.
            </summary>
        </member>
        <member name="M:java.awt.Container.invalidate">
            <summary>
            Invalidates the container.
            </summary>
        </member>
        <member name="M:java.awt.Container.validate">
            <summary>
            Validates this container and all of its subcomponents.
            </summary>
        </member>
        <member name="M:java.applet.Applet.getParameter(System.String)">
            <summary>
            Returns the value of the named parameter in the HTML tag.
            </summary>
        </member>
        <member name="P:java.applet.Applet.DocumentBase">
            <summary>
            Gets the URL of the document in which this applet is embedded.
            </summary>
        </member>
        <member name="T:java.io.BufferedReader">
            <summary>
            http://java.sun.com/j2se/1.4.2/docs/api/java/io/BufferedReader.html
            </summary>
        </member>
        <member name="M:java.io.Reader.close">
            <summary>
            Close the stream.
            </summary>
        </member>
        <member name="M:java.io.Reader.mark(System.Int32)">
            <summary>
            Mark the present position in the stream.
            </summary>
        </member>
        <member name="M:java.io.Reader.markSupported">
            <summary>
            Tell whether this stream supports the mark() operation.
            </summary>
        </member>
        <member name="M:java.io.Reader.read">
            <summary>
            Read a single character.
            </summary>
        </member>
        <member name="M:java.io.Reader.read(System.Char[])">
            <summary>
            Read characters into an array.
            </summary>
        </member>
        <member name="M:java.io.Reader.read(System.Char[],System.Int32,System.Int32)">
            <summary>
            Read characters into a portion of an array.
            </summary>
        </member>
        <member name="M:java.io.Reader.ready">
            <summary>
            Tell whether this stream is ready to be read.
            </summary>
        </member>
        <member name="M:java.io.Reader.reset">
            <summary>
            Reset the stream.
            </summary>
        </member>
        <member name="M:java.io.Reader.skip(System.Int64)">
            <summary>
            Skip characters.
            </summary>
        </member>
        <member name="M:java.io.BufferedReader.close">
            <summary>
            Close the stream.
            </summary>
        </member>
        <member name="M:java.io.BufferedReader.read(System.Char[],System.Int32,System.Int32)">
            <summary>
            Read characters into a portion of an array.
            </summary>
        </member>
        <member name="M:java.io.BufferedReader.readLine">
            <summary>
            Read a line of text.
            </summary>
        </member>
        <member name="M:java.io.ByteArrayOutputStream.#ctor">
            <summary>
            Creates a new byte array output stream.
            </summary>
        </member>
        <member name="M:java.io.ByteArrayOutputStream.#ctor(System.Int32)">
            <summary>
            Creates a new byte array output stream, with a buffer capacity of the specified size, in bytes.
            </summary>
        </member>
        <member name="M:java.io.ByteArrayOutputStream.close">
            <summary>
            Closing a
            </summary>
        </member>
        <member name="M:java.io.ByteArrayOutputStream.reset">
            <summary>
            Resets the
            </summary>
        </member>
        <member name="M:java.io.ByteArrayOutputStream.size">
            <summary>
            Returns the current size of the buffer.
            </summary>
        </member>
        <member name="M:java.io.ByteArrayOutputStream.toByteArray">
            <summary>
            Creates a newly allocated byte array.
            </summary>
        </member>
        <member name="M:java.io.ByteArrayOutputStream.toString">
            <summary>
            Converts the buffer's contents into a string, translating bytes into characters according to the platform's default character encoding.
            </summary>
        </member>
        <member name="M:java.io.ByteArrayOutputStream.toString(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:java.io.ByteArrayOutputStream.toString(System.String)">
            <summary>
            Converts the buffer's contents into a string, translating bytes into characters according to the specified character encoding.
            </summary>
        </member>
        <member name="M:java.io.ByteArrayOutputStream.write(System.SByte[],System.Int32,System.Int32)">
            <summary>
            Writes
            </summary>
        </member>
        <member name="M:java.io.ByteArrayOutputStream.write(System.Int32)">
            <summary>
            Writes the specified byte to this byte array output stream.
            </summary>
        </member>
        <member name="M:java.io.ByteArrayOutputStream.writeTo(java.io.OutputStream)">
            <summary>
            Writes the complete contents of this byte array output stream to the specified output stream argument, as if by calling the output stream's write method using
            </summary>
        </member>
        <member name="T:java.io.Writer">
            <summary>
            public abstract class Writer
            </summary>
        </member>
        <member name="M:java.io.Writer.close">
            <summary>
            Close the stream, flushing it first.
            </summary>
        </member>
        <member name="M:java.io.Writer.flush">
            <summary>
            Flush the stream.
            </summary>
        </member>
        <member name="M:java.io.Writer.write(System.Char[])">
            <summary>
            Write an array of characters.
            </summary>
        </member>
        <member name="M:java.io.Writer.write(System.Char[],System.Int32,System.Int32)">
            <summary>
            Write a portion of an array of characters.
            </summary>
        </member>
        <member name="M:java.io.Writer.write(System.Int32)">
            <summary>
            Write a single character.
            </summary>
        </member>
        <member name="M:java.io.Writer.write(System.String)">
            <summary>
            Write a string.
            </summary>
        </member>
        <member name="M:java.io.Writer.write(System.String,System.Int32,System.Int32)">
            <summary>
            Write a portion of a string.
            </summary>
        </member>
        <member name="T:java.io.OutputStreamWriter">
            <summary>
            public class OutputStreamWriter
            </summary>
        </member>
        <member name="M:java.io.OutputStreamWriter.#ctor(java.io.OutputStream)">
            <summary>
            Create an OutputStreamWriter that uses the default character encoding.
            </summary>
        </member>
        <member name="M:java.io.OutputStreamWriter.close">
            <summary>
            Close the stream.
            </summary>
        </member>
        <member name="M:java.io.OutputStreamWriter.flush">
            <summary>
            Flush the stream.
            </summary>
        </member>
        <member name="M:java.io.OutputStreamWriter.getEncoding">
            <summary>
            Return the name of the character encoding being used by this stream.
            </summary>
        </member>
        <member name="M:java.io.OutputStreamWriter.write(System.Char[],System.Int32,System.Int32)">
            <summary>
            Write a portion of an array of characters.
            </summary>
        </member>
        <member name="M:java.io.OutputStreamWriter.write(System.Int32)">
            <summary>
            Write a single character.
            </summary>
        </member>
        <member name="M:java.io.OutputStreamWriter.write(System.String,System.Int32,System.Int32)">
            <summary>
            Write a portion of a string.
            </summary>
        </member>
        <member name="T:java.io.FileWriter">
            <summary>
            Convenience class for writing character files. The constructors of this class assume that the default character encoding and the default byte-buffer size are acceptable. To specify these values yourself, construct an OutputStreamWriter on a FileOutputStream. 
            </summary>
        </member>
        <member name="M:java.io.FileWriter.#ctor(java.io.File)">
            <summary>
            Constructs a FileWriter object given a File object.
            </summary>
        </member>
        <member name="M:java.io.FileWriter.#ctor(java.io.File,System.Boolean)">
            <summary>
            Constructs a FileWriter object given a File object.
            </summary>
        </member>
        <member name="M:java.io.FileWriter.#ctor(java.io.FileDescriptor)">
            <summary>
            Constructs a FileWriter object associated with a file descriptor.
            </summary>
        </member>
        <member name="M:java.io.FileWriter.#ctor(System.String)">
            <summary>
            Constructs a FileWriter object given a file name.
            </summary>
        </member>
        <member name="M:java.io.FileWriter.#ctor(System.String,System.Boolean)">
            <summary>
            Constructs a FileWriter object given a file name with a boolean indicating whether or not to append the data written.
            </summary>
        </member>
        <member name="M:java.io.InputStreamReader.close">
            <summary>
            Close the stream.
            </summary>
        </member>
        <member name="M:java.io.InputStreamReader.getEncoding">
            <summary>
            Return the name of the character encoding being used by this stream.
            </summary>
        </member>
        <member name="M:java.io.InputStreamReader.read(System.Char[],System.Int32,System.Int32)">
            <summary>
            Read characters into a portion of an array.
            </summary>
        </member>
        <member name="M:java.io.OutputStream.close">
            <summary>
            Closes this output stream and releases any system resources  associated with this stream.
            </summary>
        </member>
        <member name="M:java.io.OutputStream.flush">
            <summary>
            Flushes this output stream and forces any buffered output bytes  to be written out.
            </summary>
        </member>
        <member name="M:java.io.OutputStream.write(System.SByte[])">
            <summary>
            Writes <code>b.length</code> bytes from the specified byte array  to this output stream.
            </summary>
        </member>
        <member name="M:java.io.OutputStream.write(System.SByte[],System.Int32,System.Int32)">
            <summary>
            Writes <code>len</code> bytes from the specified byte array  starting at offset <code>off</code> to this output stream.
            </summary>
        </member>
        <member name="M:java.io.OutputStream.write(System.Int32)">
            <summary>
            Writes the specified byte to this output stream.
            </summary>
        </member>
        <member name="M:java.io.PipedOutputStream.connect(java.io.PipedInputStream)">
            <summary>
            Connects this piped output stream to a receiver.
            </summary>
        </member>
        <member name="T:java.io.DataInput">
            <summary>
            http://java.sun.com/j2se/1.4.2/docs/api/java/io/DataInput.html
            </summary>
        </member>
        <member name="T:java.io.FileFilter">
            <summary>
            http://java.sun.com/j2se/1.4.2/docs/api/java/io/FileFilter.html
            </summary>
        </member>
        <member name="T:java.io.FilenameFilter">
            <summary>
            http://java.sun.com/j2se/1.4.2/docs/api/java/io/FilenameFilter.html
            </summary>
        </member>
        <member name="T:java.io.FileInputStream">
            <summary>
            http://java.sun.com/j2se/1.4.2/docs/api/java/io/FileInputStream.html
            </summary>
        </member>
        <member name="M:java.io.InputStream.available">
            <summary>
            Returns the number of bytes that can be read (or skipped over) from this input stream without blocking by the next caller of a method for this input stream.
            </summary>
        </member>
        <member name="M:java.io.InputStream.close">
            <summary>
            Closes this input stream and releases any system resources associated with the stream.
            </summary>
        </member>
        <member name="M:java.io.InputStream.mark(System.Int32)">
            <summary>
            Marks the current position in this input stream.
            </summary>
        </member>
        <member name="M:java.io.InputStream.markSupported">
            <summary>
            Tests if this input stream supports the <code>mark</code> and <code>reset</code> methods.
            </summary>
        </member>
        <member name="M:java.io.InputStream.read">
            <summary>
            Reads the next byte of data from the input stream.
            </summary>
        </member>
        <member name="M:java.io.InputStream.read(System.SByte[])">
            <summary>
            Reads some number of bytes from the input stream and stores them into the buffer array <code>b</code>.
            </summary>
        </member>
        <member name="M:java.io.InputStream.read(System.SByte[],System.Int32,System.Int32)">
            <summary>
            Reads up to <code>len</code> bytes of data from the input stream into an array of bytes.
            </summary>
        </member>
        <member name="M:java.io.InputStream.reset">
            <summary>
            Repositions this stream to the position at the time the <code>mark</code> method was last called on this input stream.
            </summary>
        </member>
        <member name="M:java.io.InputStream.skip(System.Int64)">
            <summary>
            Skips over and discards <code>n</code> bytes of data from this input stream.
            </summary>
        </member>
        <member name="M:java.io.DataInputStream.readBoolean">
            <summary>
            See the general contract of the <code>readBoolean</code> method of <code>DataInput</code>.
            </summary>
        </member>
        <member name="M:java.io.DataInputStream.readByte">
            <summary>
            See the general contract of the <code>readByte</code> method of <code>DataInput</code>.
            </summary>
        </member>
        <member name="M:java.io.DataInputStream.readChar">
            <summary>
            See the general contract of the <code>readChar</code> method of <code>DataInput</code>.
            </summary>
        </member>
        <member name="M:java.io.DataInputStream.readDouble">
            <summary>
            See the general contract of the <code>readDouble</code> method of <code>DataInput</code>.
            </summary>
        </member>
        <member name="M:java.io.DataInputStream.readFloat">
            <summary>
            See the general contract of the <code>readFloat</code> method of <code>DataInput</code>.
            </summary>
        </member>
        <member name="M:java.io.DataInputStream.readFully(System.SByte[])">
            <summary>
            See the general contract of the <code>readFully</code> method of <code>DataInput</code>.
            </summary>
        </member>
        <member name="M:java.io.DataInputStream.readFully(System.SByte[],System.Int32,System.Int32)">
            <summary>
            See the general contract of the <code>readFully</code> method of <code>DataInput</code>.
            </summary>
        </member>
        <member name="M:java.io.DataInputStream.readInt">
            <summary>
            See the general contract of the <code>readInt</code> method of <code>DataInput</code>.
            </summary>
        </member>
        <member name="M:java.io.DataInputStream.readLine">
            <summary>
            <B>Deprecated.</B> <I>This method does not properly convert bytes to characters. As of JDK 1.1, the preferred way to read lines of text is via the <code>BufferedReader.readLine()</code> method.  Programs that use the <code>DataInputStream</code> class to read lines can be converted to use the <code>BufferedReader</code> class by replacing code of the form: <blockquote><pre>     DataInputStream d = new DataInputStream(in); </pre></blockquote> with: <blockquote><pre>     BufferedReader d          = new BufferedReader(new InputStreamReader(in)); </pre></blockquote></I>
            </summary>
        </member>
        <member name="M:java.io.DataInputStream.readLong">
            <summary>
            See the general contract of the <code>readLong</code> method of <code>DataInput</code>.
            </summary>
        </member>
        <member name="M:java.io.DataInputStream.readShort">
            <summary>
            See the general contract of the <code>readShort</code> method of <code>DataInput</code>.
            </summary>
        </member>
        <member name="M:java.io.DataInputStream.readUnsignedByte">
            <summary>
            See the general contract of the <code>readUnsignedByte</code> method of <code>DataInput</code>.
            </summary>
        </member>
        <member name="M:java.io.DataInputStream.readUnsignedShort">
            <summary>
            See the general contract of the <code>readUnsignedShort</code> method of <code>DataInput</code>.
            </summary>
        </member>
        <member name="M:java.io.DataInputStream.readUTF">
            <summary>
            See the general contract of the <code>readUTF</code> method of <code>DataInput</code>.
            </summary>
        </member>
        <member name="M:java.io.DataInputStream.readUTF(java.io.DataInput)">
            <summary>
            Reads from the stream <code>in</code> a representation of a Unicode  character string encoded in Java modified UTF-8 format; this string of characters  is then returned as a <code>String</code>.
            </summary>
        </member>
        <member name="M:java.io.DataInputStream.skipBytes(System.Int32)">
            <summary>
            See the general contract of the <code>skipBytes</code> method of <code>DataInput</code>.
            </summary>
        </member>
        <member name="T:java.io.File">
            <summary>
            http://java.sun.com/j2se/1.4.2/docs/api/java/io/File.html
            </summary>
        </member>
        <member name="M:java.io.File.canRead">
            <summary>
            Tests whether the application can read the file denoted by this abstract pathname.
            </summary>
        </member>
        <member name="M:java.io.File.canWrite">
            <summary>
            Tests whether the application can modify to the file denoted by this abstract pathname.
            </summary>
        </member>
        <member name="M:java.io.File.compareTo(java.io.File)">
            <summary>
            Compares two abstract pathnames lexicographically.
            </summary>
        </member>
        <member name="M:java.io.File.compareTo(System.Object)">
            <summary>
            Compares this abstract pathname to another object.
            </summary>
        </member>
        <member name="M:java.io.File.createNewFile">
            <summary>
            Atomically creates a new, empty file named by this abstract pathname if and only if a file with this name does not yet exist.
            </summary>
        </member>
        <member name="M:java.io.File.createTempFile(System.String,System.String)">
            <summary>
            Creates an empty file in the default temporary-file directory, using the given prefix and suffix to generate its name.
            </summary>
        </member>
        <member name="M:java.io.File.createTempFile(System.String,System.String,java.io.File)">
            <summary>
            Creates a new empty file in the specified directory, using the given prefix and suffix strings to generate its name.
            </summary>
        </member>
        <member name="M:java.io.File.delete">
            <summary>
            Deletes the file or directory denoted by this abstract pathname.
            </summary>
        </member>
        <member name="M:java.io.File.deleteOnExit">
            <summary>
            Requests that the file or directory denoted by this abstract  pathname be deleted when the virtual machine terminates.
            </summary>
        </member>
        <member name="M:java.io.File.exists">
            <summary>
            Tests whether the file or directory denoted by this abstract pathname exists.
            </summary>
        </member>
        <member name="M:java.io.File.getAbsoluteFile">
            <summary>
            Returns the absolute form of this abstract pathname.
            </summary>
        </member>
        <member name="M:java.io.File.getAbsolutePath">
            <summary>
            Returns the absolute pathname string of this abstract pathname.
            </summary>
        </member>
        <member name="M:java.io.File.getCanonicalFile">
            <summary>
            Returns the canonical form of this abstract pathname.
            </summary>
        </member>
        <member name="M:java.io.File.getCanonicalPath">
            <summary>
            Returns the canonical pathname string of this abstract pathname.
            </summary>
        </member>
        <member name="M:java.io.File.getName">
            <summary>
            Returns the name of the file or directory denoted by this abstract pathname.
            </summary>
        </member>
        <member name="M:java.io.File.getParent">
            <summary>
            Returns the pathname string of this abstract pathname's parent, or <code>null</code> if this pathname does not name a parent directory.
            </summary>
        </member>
        <member name="M:java.io.File.getParentFile">
            <summary>
            Returns the abstract pathname of this abstract pathname's parent, or <code>null</code> if this pathname does not name a parent directory.
            </summary>
        </member>
        <member name="M:java.io.File.getPath">
            <summary>
            Converts this abstract pathname into a pathname string.
            </summary>
        </member>
        <member name="M:java.io.File.isAbsolute">
            <summary>
            Tests whether this abstract pathname is absolute.
            </summary>
        </member>
        <member name="M:java.io.File.isDirectory">
            <summary>
            Tests whether the file denoted by this abstract pathname is a directory.
            </summary>
        </member>
        <member name="M:java.io.File.isFile">
            <summary>
            Tests whether the file denoted by this abstract pathname is a normal file.
            </summary>
        </member>
        <member name="M:java.io.File.isHidden">
            <summary>
            Tests whether the file named by this abstract pathname is a hidden file.
            </summary>
        </member>
        <member name="M:java.io.File.lastModified">
            <summary>
            Returns the time that the file denoted by this abstract pathname was last modified.
            </summary>
        </member>
        <member name="M:java.io.File.length">
            <summary>
            Returns the length of the file denoted by this abstract pathname.
            </summary>
        </member>
        <member name="M:java.io.File.list">
            <summary>
            Returns an array of strings naming the files and directories in the directory denoted by this abstract pathname.
            </summary>
        </member>
        <member name="M:java.io.File.list(java.io.FilenameFilter)">
            <summary>
            Returns an array of strings naming the files and directories in the directory denoted by this abstract pathname that satisfy the specified filter.
            </summary>
        </member>
        <member name="M:java.io.File.listFiles">
            <summary>
            Returns an array of abstract pathnames denoting the files in the directory denoted by this abstract pathname.
            </summary>
        </member>
        <member name="M:java.io.File.listFiles(java.io.FileFilter)">
            <summary>
            Returns an array of abstract pathnames denoting the files and directories in the directory denoted by this abstract pathname that satisfy the specified filter.
            </summary>
        </member>
        <member name="M:java.io.File.listFiles(java.io.FilenameFilter)">
            <summary>
            Returns an array of abstract pathnames denoting the files and directories in the directory denoted by this abstract pathname that satisfy the specified filter.
            </summary>
        </member>
        <member name="M:java.io.File.listRoots">
            <summary>
            List the available filesystem roots.
            </summary>
        </member>
        <member name="M:java.io.File.mkdir">
            <summary>
            Creates the directory named by this abstract pathname.
            </summary>
        </member>
        <member name="M:java.io.File.mkdirs">
            <summary>
            Creates the directory named by this abstract pathname, including any necessary but nonexistent parent directories.
            </summary>
        </member>
        <member name="M:java.io.File.renameTo(java.io.File)">
            <summary>
            Renames the file denoted by this abstract pathname.
            </summary>
        </member>
        <member name="M:java.io.File.setLastModified(System.Int64)">
            <summary>
            Sets the last-modified time of the file or directory named by this abstract pathname.
            </summary>
        </member>
        <member name="M:java.io.File.setReadOnly">
            <summary>
            Marks the file or directory named by this abstract pathname so that only read operations are allowed.
            </summary>
        </member>
        <member name="M:java.io.File.toURI">
            <summary>
            Constructs a <tt>file:</tt> URI that represents this abstract pathname.
            </summary>
        </member>
        <member name="M:java.io.File.toURL">
            <summary>
            Converts this abstract pathname into a <code>file:</code> URL.
            </summary>
        </member>
        <member name="M:java.io.PipedInputStream.connect(java.io.PipedOutputStream)">
            <summary>
            Causes this piped input stream to be connected to the piped  output stream <code>src</code>.
            </summary>
        </member>
        <member name="M:java.io.PipedInputStream.read">
            <summary>
            Reads the next byte of data from this piped input stream.
            </summary>
        </member>
        <member name="M:java.io.PipedInputStream.receive(System.Int32)">
            <summary>
            Receives a byte of data.
            </summary>
        </member>
        <member name="T:java.io.PrintStream">
            <summary>
            http://java.sun.com/j2se/1.3/docs/api/java/io/PrintStream.html
            </summary>
        </member>
        <member name="M:java.io.PrintStream.checkError">
            <summary>
            Flush the stream and check its error state.
            </summary>
        </member>
        <member name="M:java.io.PrintStream.print(System.Boolean)">
            <summary>
            Print a boolean value.
            </summary>
        </member>
        <member name="M:java.io.PrintStream.print(System.Char)">
            <summary>
            Print a character.
            </summary>
        </member>
        <member name="M:java.io.PrintStream.print(System.Char[])">
            <summary>
            Print an array of characters.
            </summary>
        </member>
        <member name="M:java.io.PrintStream.print(System.Double)">
            <summary>
            Print a double-precision floating-point number.
            </summary>
        </member>
        <member name="M:java.io.PrintStream.print(System.Single)">
            <summary>
            Print a floating-point number.
            </summary>
        </member>
        <member name="M:java.io.PrintStream.print(System.Int32)">
            <summary>
            Print an integer.
            </summary>
        </member>
        <member name="M:java.io.PrintStream.print(System.Int64)">
            <summary>
            Print a long integer.
            </summary>
        </member>
        <member name="M:java.io.PrintStream.print(System.Object)">
            <summary>
            Print an object.
            </summary>
        </member>
        <member name="M:java.io.PrintStream.print(System.String)">
            <summary>
            Print a string.
            </summary>
        </member>
        <member name="M:java.io.PrintStream.println">
            <summary>
            Terminate the current line by writing the line separator string.
            </summary>
        </member>
        <member name="M:java.io.PrintStream.println(System.Boolean)">
            <summary>
            Print a boolean and then terminate the line.
            </summary>
        </member>
        <member name="M:java.io.PrintStream.println(System.Char)">
            <summary>
            Print a character and then terminate the line.
            </summary>
        </member>
        <member name="M:java.io.PrintStream.println(System.Char[])">
            <summary>
            Print an array of characters and then terminate the line.
            </summary>
        </member>
        <member name="M:java.io.PrintStream.println(System.Double)">
            <summary>
            Print a double and then terminate the line.
            </summary>
        </member>
        <member name="M:java.io.PrintStream.println(System.Single)">
            <summary>
            Print a float and then terminate the line.
            </summary>
        </member>
        <member name="M:java.io.PrintStream.println(System.Int32)">
            <summary>
            Print an integer and then terminate the line.
            </summary>
        </member>
        <member name="M:java.io.PrintStream.println(System.Int64)">
            <summary>
            Print a long and then terminate the line.
            </summary>
        </member>
        <member name="M:java.io.PrintStream.println(System.Object)">
            <summary>
            Print an Object and then terminate the line.
            </summary>
        </member>
        <member name="M:java.io.PrintStream.println(System.String)">
            <summary>
            Print a String and then terminate the line.
            </summary>
        </member>
        <member name="M:java.io.PrintStream.setError">
            <summary>
            Set the error state of the stream to <code>true</code>.
            </summary>
        </member>
        <member name="T:java.io.RandomAccessFile">
            <summary>
            http://java.sun.com/j2se/1.4.2/docs/api/java/io/RandomAccessFile.html
            </summary>
        </member>
        <member name="M:java.io.RandomAccessFile.close">
            <summary>
            Closes this random access file stream and releases any system  resources associated with the stream.
            </summary>
        </member>
        <member name="M:java.io.RandomAccessFile.getChannel">
            <summary>
            Returns the unique <A HREF="../../java/nio/channels/FileChannel.html" title="class in java.nio.channels"><CODE>FileChannel</CODE></A> object associated with this file.
            </summary>
        </member>
        <member name="M:java.io.RandomAccessFile.getFD">
            <summary>
            Returns the opaque file descriptor object associated with this stream.
            </summary>
        </member>
        <member name="M:java.io.RandomAccessFile.getFilePointer">
            <summary>
            Returns the current offset in this file.
            </summary>
        </member>
        <member name="M:java.io.RandomAccessFile.length">
            <summary>
            Returns the length of this file.
            </summary>
        </member>
        <member name="M:java.io.RandomAccessFile.read">
            <summary>
            Reads a byte of data from this file.
            </summary>
        </member>
        <member name="M:java.io.RandomAccessFile.read(System.SByte[])">
            <summary>
            Reads up to <code>b.length</code> bytes of data from this file  into an array of bytes.
            </summary>
        </member>
        <member name="M:java.io.RandomAccessFile.read(System.SByte[],System.Int32,System.Int32)">
            <summary>
            Reads up to <code>len</code> bytes of data from this file into an  array of bytes.
            </summary>
        </member>
        <member name="M:java.io.RandomAccessFile.readBoolean">
            <summary>
            Reads a <code>boolean</code> from this file.
            </summary>
        </member>
        <member name="M:java.io.RandomAccessFile.readByte">
            <summary>
            Reads a signed eight-bit value from this file.
            </summary>
        </member>
        <member name="M:java.io.RandomAccessFile.readChar">
            <summary>
            Reads a Unicode character from this file.
            </summary>
        </member>
        <member name="M:java.io.RandomAccessFile.readDouble">
            <summary>
            Reads a <code>double</code> from this file.
            </summary>
        </member>
        <member name="M:java.io.RandomAccessFile.readFloat">
            <summary>
            Reads a <code>float</code> from this file.
            </summary>
        </member>
        <member name="M:java.io.RandomAccessFile.readFully(System.SByte[])">
            <summary>
            Reads <code>b.length</code> bytes from this file into the byte  array, starting at the current file pointer.
            </summary>
        </member>
        <member name="M:java.io.RandomAccessFile.readFully(System.SByte[],System.Int32,System.Int32)">
            <summary>
            Reads exactly <code>len</code> bytes from this file into the byte  array, starting at the current file pointer.
            </summary>
        </member>
        <member name="M:java.io.RandomAccessFile.readInt">
            <summary>
            Reads a signed 32-bit integer from this file.
            </summary>
        </member>
        <member name="M:java.io.RandomAccessFile.readLine">
            <summary>
            Reads the next line of text from this file.
            </summary>
        </member>
        <member name="M:java.io.RandomAccessFile.readLong">
            <summary>
            Reads a signed 64-bit integer from this file.
            </summary>
        </member>
        <member name="M:java.io.RandomAccessFile.readShort">
            <summary>
            Reads a signed 16-bit number from this file.
            </summary>
        </member>
        <member name="M:java.io.RandomAccessFile.readUnsignedByte">
            <summary>
            Reads an unsigned eight-bit number from this file.
            </summary>
        </member>
        <member name="M:java.io.RandomAccessFile.readUnsignedShort">
            <summary>
            Reads an unsigned 16-bit number from this file.
            </summary>
        </member>
        <member name="M:java.io.RandomAccessFile.readUTF">
            <summary>
            Reads in a string from this file.
            </summary>
        </member>
        <member name="M:java.io.RandomAccessFile.seek(System.Int64)">
            <summary>
            Sets the file-pointer offset, measured from the beginning of this  file, at which the next read or write occurs.
            </summary>
        </member>
        <member name="M:java.io.RandomAccessFile.setLength(System.Int64)">
            <summary>
            Sets the length of this file.
            </summary>
        </member>
        <member name="M:java.io.RandomAccessFile.skipBytes(System.Int32)">
            <summary>
            Attempts to skip over <code>n</code> bytes of input discarding the  skipped bytes.
            </summary>
        </member>
        <member name="M:java.io.RandomAccessFile.write(System.SByte[])">
            <summary>
            Writes <code>b.length</code> bytes from the specified byte array  to this file, starting at the current file pointer.
            </summary>
        </member>
        <member name="M:java.io.RandomAccessFile.write(System.SByte[],System.Int32,System.Int32)">
            <summary>
            Writes <code>len</code> bytes from the specified byte array  starting at offset <code>off</code> to this file.
            </summary>
        </member>
        <member name="M:java.io.RandomAccessFile.write(System.Int32)">
            <summary>
            Writes the specified byte to this file.
            </summary>
        </member>
        <member name="M:java.io.RandomAccessFile.writeBoolean(System.Boolean)">
            <summary>
            Writes a <code>boolean</code> to the file as a one-byte value.
            </summary>
        </member>
        <member name="M:java.io.RandomAccessFile.writeByte(System.Int32)">
            <summary>
            Writes a <code>byte</code> to the file as a one-byte value.
            </summary>
        </member>
        <member name="M:java.io.RandomAccessFile.writeBytes(System.String)">
            <summary>
            Writes the string to the file as a sequence of bytes.
            </summary>
        </member>
        <member name="M:java.io.RandomAccessFile.writeChar(System.Int32)">
            <summary>
            Writes a <code>char</code> to the file as a two-byte value, high byte first.
            </summary>
        </member>
        <member name="M:java.io.RandomAccessFile.writeChars(System.String)">
            <summary>
            Writes a string to the file as a sequence of characters.
            </summary>
        </member>
        <member name="M:java.io.RandomAccessFile.writeDouble(System.Double)">
            <summary>
            Converts the double argument to a <code>long</code> using the  <code>doubleToLongBits</code> method in class <code>Double</code>,  and then writes that <code>long</code> value to the file as an  eight-byte quantity, high byte first.
            </summary>
        </member>
        <member name="M:java.io.RandomAccessFile.writeFloat(System.Single)">
            <summary>
            Converts the float argument to an <code>int</code> using the  <code>floatToIntBits</code> method in class <code>Float</code>,  and then writes that <code>int</code> value to the file as a  four-byte quantity, high byte first.
            </summary>
        </member>
        <member name="M:java.io.RandomAccessFile.writeInt(System.Int32)">
            <summary>
            Writes an <code>int</code> to the file as four bytes, high byte first.
            </summary>
        </member>
        <member name="M:java.io.RandomAccessFile.writeLong(System.Int64)">
            <summary>
            Writes a <code>long</code> to the file as eight bytes, high byte first.
            </summary>
        </member>
        <member name="M:java.io.RandomAccessFile.writeShort(System.Int32)">
            <summary>
            Writes a <code>short</code> to the file as two bytes, high byte first.
            </summary>
        </member>
        <member name="M:java.io.RandomAccessFile.writeUTF(System.String)">
            <summary>
            Writes a string to the file using UTF-8 encoding in a  machine-independent manner.
            </summary>
        </member>
        <member name="M:java.lang.ClassLoader.clearAssertionStatus">
            <summary>
            Sets the default assertion status for this class loader to <tt>false</tt> and discards any package defaults or class assertion status settings associated with the class loader.
            </summary>
        </member>
        <member name="M:java.lang.ClassLoader.defineClass(System.SByte[],System.Int32,System.Int32)">
            <summary>
            <B>Deprecated.</B> <I>Replaced by <A HREF="../../java/lang/ClassLoader.html#defineClass(java.lang.String, byte[], int, int)"><CODE>defineClass(String, byte[], int, int)</CODE></A></I>
            </summary>
        </member>
        <member name="M:java.lang.ClassLoader.defineClass(System.String,System.SByte[],System.Int32,System.Int32)">
            <summary>
            Converts an array of bytes into an instance of class <tt>Class</tt>.
            </summary>
        </member>
        <member name="M:java.lang.ClassLoader.defineClass(System.String,System.SByte[],System.Int32,System.Int32,java.security.ProtectionDomain)">
            <summary>
            Converts an array of bytes into an instance of class <tt>Class</tt>, with an optional <tt>ProtectionDomain</tt>.
            </summary>
        </member>
        <member name="M:java.lang.ClassLoader.definePackage(System.String,System.String,System.String,System.String,System.String,System.String,System.String,java.net.URL)">
            <summary>
            Defines a package by name in this <tt>ClassLoader</tt>.
            </summary>
        </member>
        <member name="M:java.lang.ClassLoader.findClass(System.String)">
            <summary>
            Finds the specified class.
            </summary>
        </member>
        <member name="M:java.lang.ClassLoader.findLibrary(System.String)">
            <summary>
            Returns the absolute path name of a native library.
            </summary>
        </member>
        <member name="M:java.lang.ClassLoader.findLoadedClass(System.String)">
            <summary>
            Returns the class with the given name if this loader has been recorded by the Java virtual machine as an initiating loader of a class with that name.
            </summary>
        </member>
        <member name="M:java.lang.ClassLoader.findResource(System.String)">
            <summary>
            Finds the resource with the given name.
            </summary>
        </member>
        <member name="M:java.lang.ClassLoader.findResources(System.String)">
            <summary>
            Returns an enumeration of <A HREF="../../java/net/URL.html" title="class in java.net"><CODE><tt>URL</tt></CODE></A> objects representing all the resources with the given name.
            </summary>
        </member>
        <member name="M:java.lang.ClassLoader.findSystemClass(System.String)">
            <summary>
            Finds a class with the specified name, loading it if necessary.
            </summary>
        </member>
        <member name="M:java.lang.ClassLoader.getPackage(System.String)">
            <summary>
            Returns a <tt>Package</tt> that has been defined by this class loader or any of its ancestors.
            </summary>
        </member>
        <member name="M:java.lang.ClassLoader.getPackages">
            <summary>
            Returns all of the <tt>Packages</tt> defined by this class loader and its ancestors.
            </summary>
        </member>
        <member name="M:java.lang.ClassLoader.getParent">
            <summary>
            Returns the parent class loader for delegation.
            </summary>
        </member>
        <member name="M:java.lang.ClassLoader.getResource(System.String)">
            <summary>
            Finds the resource with the given name.
            </summary>
        </member>
        <member name="M:java.lang.ClassLoader.getResourceAsStream(System.String)">
            <summary>
            Returns an input stream for reading the specified resource.
            </summary>
        </member>
        <member name="M:java.lang.ClassLoader.getResources(System.String)">
            <summary>
            Finds all the resources with the given name.
            </summary>
        </member>
        <member name="M:java.lang.ClassLoader.getSystemClassLoader">
            <summary>
            Returns the system class loader for delegation.
            </summary>
        </member>
        <member name="M:java.lang.ClassLoader.getSystemResource(System.String)">
            <summary>
            Find a resource of the specified name from the search path used to load classes.
            </summary>
        </member>
        <member name="M:java.lang.ClassLoader.getSystemResourceAsStream(System.String)">
            <summary>
            Open for reading, a resource of the specified name from the search path used to load classes.
            </summary>
        </member>
        <member name="M:java.lang.ClassLoader.getSystemResources(System.String)">
            <summary>
            Finds all resources of the specified name from the search path used to load classes.
            </summary>
        </member>
        <member name="M:java.lang.ClassLoader.loadClass(System.String)">
            <summary>
            Loads the class with the specified name.
            </summary>
        </member>
        <member name="M:java.lang.ClassLoader.loadClass(System.String,System.Boolean)">
            <summary>
            Loads the class with the specified name.
            </summary>
        </member>
        <member name="M:java.lang.ClassLoader.resolveClass(java.lang.Class)">
            <summary>
            Links the specified class.
            </summary>
        </member>
        <member name="M:java.lang.ClassLoader.setClassAssertionStatus(System.String,System.Boolean)">
            <summary>
            Sets the desired assertion status for the named top-level class in this class loader and any nested classes contained therein.
            </summary>
        </member>
        <member name="M:java.lang.ClassLoader.setDefaultAssertionStatus(System.Boolean)">
            <summary>
            Sets the default assertion status for this class loader.
            </summary>
        </member>
        <member name="M:java.lang.ClassLoader.setPackageAssertionStatus(System.String,System.Boolean)">
            <summary>
            Sets the package default assertion status for the named package.
            </summary>
        </member>
        <member name="M:java.lang.ClassLoader.setSigners(java.lang.Class,System.Object[])">
            <summary>
            Sets the signers of a class.
            </summary>
        </member>
        <member name="M:java.lang.Class.desiredAssertionStatus">
            <summary>
            Returns the assertion status that would be assigned to this class if it were to be initialized at the time this method is invoked.
            </summary>
        </member>
        <member name="M:java.lang.Class.forName(System.String)">
            <summary>
            Returns the <code>Class</code> object associated with the class or interface with the given string name.
            </summary>
        </member>
        <member name="M:java.lang.Class.forName(System.String,System.Boolean,java.lang.ClassLoader)">
            <summary>
            Returns the <code>Class</code> object associated with the class or interface with the given string name, using the given class loader.
            </summary>
        </member>
        <member name="M:java.lang.Class.getClasses">
            <summary>
            Returns an array containing <code>Class</code> objects representing all the public classes and interfaces that are members of the class represented by this <code>Class</code> object.
            </summary>
        </member>
        <member name="M:java.lang.Class.getClassLoader">
            <summary>
            Returns the class loader for the class.
            </summary>
        </member>
        <member name="M:java.lang.Class.getComponentType">
            <summary>
            Returns the <code>Class</code> representing the component type of an array.
            </summary>
        </member>
        <member name="M:java.lang.Class.getConstructor(java.lang.Class[])">
            <summary>
            Returns a <code>Constructor</code> object that reflects the specified public constructor of the class represented by this <code>Class</code> object.
            </summary>
        </member>
        <member name="M:java.lang.Class.getConstructors">
            <summary>
            Returns an array containing <code>Constructor</code> objects reflecting all the public constructors of the class represented by this <code>Class</code> object.
            </summary>
        </member>
        <member name="M:java.lang.Class.getDeclaredClasses">
            <summary>
            Returns an array of <code>Class</code> objects reflecting all the classes and interfaces declared as members of the class represented by this <code>Class</code> object.
            </summary>
        </member>
        <member name="M:java.lang.Class.getDeclaredConstructor(java.lang.Class[])">
            <summary>
            Returns a <code>Constructor</code> object that reflects the specified constructor of the class or interface represented by this <code>Class</code> object.
            </summary>
        </member>
        <member name="M:java.lang.Class.getDeclaredConstructors">
            <summary>
            Returns an array of <code>Constructor</code> objects reflecting all the constructors declared by the class represented by this <code>Class</code> object.
            </summary>
        </member>
        <member name="M:java.lang.Class.getDeclaredField(System.String)">
            <summary>
            Returns a <code>Field</code> object that reflects the specified declared field of the class or interface represented by this <code>Class</code> object.
            </summary>
        </member>
        <member name="M:java.lang.Class.getDeclaredFields">
            <summary>
            Returns an array of <code>Field</code> objects reflecting all the fields declared by the class or interface represented by this <code>Class</code> object.
            </summary>
        </member>
        <member name="M:java.lang.Class.getDeclaredMethod(System.String,java.lang.Class[])">
            <summary>
            Returns a <code>Method</code> object that reflects the specified declared method of the class or interface represented by this <code>Class</code> object.
            </summary>
        </member>
        <member name="M:java.lang.Class.getDeclaredMethods">
            <summary>
            Returns an array of <code>Method</code> objects reflecting all the methods declared by the class or interface represented by this <code>Class</code> object.
            </summary>
        </member>
        <member name="M:java.lang.Class.getDeclaringClass">
            <summary>
            If the class or interface represented by this <code>Class</code> object is a member of another class, returns the <code>Class</code> object representing the class in which it was declared.
            </summary>
        </member>
        <member name="M:java.lang.Class.getField(System.String)">
            <summary>
            Returns a <code>Field</code> object that reflects the specified public member field of the class or interface represented by this <code>Class</code> object.
            </summary>
        </member>
        <member name="M:java.lang.Class.getFields">
            <summary>
            Returns an array containing <code>Field</code> objects reflecting all the accessible public fields of the class or interface represented by this <code>Class</code> object.
            </summary>
        </member>
        <member name="M:java.lang.Class.getInterfaces">
            <summary>
            Determines the interfaces implemented by the class or interface represented by this object.
            </summary>
        </member>
        <member name="M:java.lang.Class.getMethod(System.String,java.lang.Class[])">
            <summary>
            Returns a <code>Method</code> object that reflects the specified public member method of the class or interface represented by this <code>Class</code> object.
            </summary>
        </member>
        <member name="M:java.lang.Class.getMethods">
            <summary>
            Returns an array containing <code>Method</code> objects reflecting all the public <em>member</em> methods of the class or interface represented by this <code>Class</code> object, including those declared by the class or interface and and those inherited from superclasses and superinterfaces.
            </summary>
        </member>
        <member name="M:java.lang.Class.getModifiers">
            <summary>
            Returns the Java language modifiers for this class or interface, encoded in an integer.
            </summary>
        </member>
        <member name="M:java.lang.Class.getName">
            <summary>
            Returns the  name of the entity (class, interface, array class, primitive type, or void) represented by this <tt>Class</tt> object, as a <tt>String</tt>.
            </summary>
        </member>
        <member name="M:java.lang.Class.getPackage">
            <summary>
            Gets the package for this class.
            </summary>
        </member>
        <member name="M:java.lang.Class.getProtectionDomain">
            <summary>
            Returns the <code>ProtectionDomain</code> of this class.
            </summary>
        </member>
        <member name="M:java.lang.Class.getResource(System.String)">
            <summary>
            Finds a resource with a given name.
            </summary>
        </member>
        <member name="M:java.lang.Class.getResourceAsStream(System.String)">
            <summary>
            Finds a resource with a given name.
            </summary>
        </member>
        <member name="M:java.lang.Class.getSigners">
            <summary>
            Gets the signers of this class.
            </summary>
        </member>
        <member name="M:java.lang.Class.getSuperclass">
            <summary>
            Returns the <code>Class</code> representing the superclass of the entity (class, interface, primitive type or void) represented by this <code>Class</code>.
            </summary>
        </member>
        <member name="M:java.lang.Class.isArray">
            <summary>
            Determines if this <code>Class</code> object represents an array class.
            </summary>
        </member>
        <member name="M:java.lang.Class.isAssignableFrom(java.lang.Class)">
            <summary>
            Determines if the class or interface represented by this <code>Class</code> object is either the same as, or is a superclass or superinterface of, the class or interface represented by the specified <code>Class</code> parameter.
            </summary>
        </member>
        <member name="M:java.lang.Class.isInstance(System.Object)">
            <summary>
            Determines if the specified <code>Object</code> is assignment-compatible with the object represented by this <code>Class</code>.
            </summary>
        </member>
        <member name="M:java.lang.Class.isInterface">
            <summary>
            Determines if the specified <code>Class</code> object represents an interface type.
            </summary>
        </member>
        <member name="M:java.lang.Class.isPrimitive">
            <summary>
            Determines if the specified <code>Class</code> object represents a primitive type.
            </summary>
        </member>
        <member name="M:java.lang.Class.newInstance">
            <summary>
            Creates a new instance of the class represented by this <tt>Class</tt> object.
            </summary>
        </member>
        <member name="T:java.lang.Process">
            <summary>
            Every Java application has a single instance of class Runtime that allows the application to interface with the environment in which the application is running. The current runtime can be obtained from the getRuntime method. 
            </summary>
        </member>
        <member name="T:java.lang.Runtime">
            <summary>
            Every Java application has a single instance of class Runtime that allows the application to interface with the environment in which the application is running. The current runtime can be obtained from the getRuntime method. 
            </summary>
        </member>
        <member name="M:java.lang.Runtime.addShutdownHook(java.lang.Thread)">
            <summary>
            Registers a new virtual-machine shutdown hook.
            </summary>
        </member>
        <member name="M:java.lang.Runtime.availableProcessors">
            <summary>
            Returns the number of processors available to the Java virtual machine.
            </summary>
        </member>
        <member name="M:java.lang.Runtime.exec(System.String)">
            <summary>
            Executes the specified string command in a separate process.
            </summary>
        </member>
        <member name="M:java.lang.Runtime.exec(System.String[])">
            <summary>
            Executes the specified command and arguments in a separate process.
            </summary>
        </member>
        <member name="M:java.lang.Runtime.exec(System.String[],System.String[])">
            <summary>
            Executes the specified command and arguments in a separate process with the specified environment.
            </summary>
        </member>
        <member name="M:java.lang.Runtime.exec(System.String[],System.String[],java.io.File)">
            <summary>
            Executes the specified command and arguments in a separate process with the specified environment and working directory.
            </summary>
        </member>
        <member name="M:java.lang.Runtime.exec(System.String,System.String[])">
            <summary>
            Executes the specified string command in a separate process with the specified environment.
            </summary>
        </member>
        <member name="M:java.lang.Runtime.exec(System.String,System.String[],java.io.File)">
            <summary>
            Executes the specified string command in a separate process with the specified environment and working directory.
            </summary>
        </member>
        <member name="M:java.lang.Runtime.exit(System.Int32)">
            <summary>
            Terminates the currently running Java virtual machine by initiating its shutdown sequence.
            </summary>
        </member>
        <member name="M:java.lang.Runtime.freeMemory">
            <summary>
            Returns the amount of free memory in the Java Virtual Machine.
            </summary>
        </member>
        <member name="M:java.lang.Runtime.gc">
            <summary>
            Runs the garbage collector.
            </summary>
        </member>
        <member name="M:java.lang.Runtime.getLocalizedInputStream(java.io.InputStream)">
            <summary>
            
            </summary>
        </member>
        <member name="M:java.lang.Runtime.getLocalizedOutputStream(java.io.OutputStream)">
            <summary>
            
            </summary>
        </member>
        <member name="M:java.lang.Runtime.getRuntime">
            <summary>
            Returns the runtime object associated with the current Java application.
            </summary>
        </member>
        <member name="M:java.lang.Runtime.halt(System.Int32)">
            <summary>
            Forcibly terminates the currently running Java virtual machine.
            </summary>
        </member>
        <member name="M:java.lang.Runtime.load(System.String)">
            <summary>
            Loads the specified filename as a dynamic library.
            </summary>
        </member>
        <member name="M:java.lang.Runtime.loadLibrary(System.String)">
            <summary>
            Loads the dynamic library with the specified library name.
            </summary>
        </member>
        <member name="M:java.lang.Runtime.maxMemory">
            <summary>
            Returns the maximum amount of memory that the Java virtual machine will attempt to use.
            </summary>
        </member>
        <member name="M:java.lang.Runtime.removeShutdownHook(java.lang.Thread)">
            <summary>
            De-registers a previously-registered virtual-machine shutdown hook.
            </summary>
        </member>
        <member name="M:java.lang.Runtime.runFinalization">
            <summary>
            Runs the finalization methods of any objects pending finalization.
            </summary>
        </member>
        <member name="M:java.lang.Runtime.runFinalizersOnExit(System.Boolean)">
            <summary>
            
            </summary>
        </member>
        <member name="M:java.lang.Runtime.totalMemory">
            <summary>
            Returns the total amount of memory in the Java virtual machine.
            </summary>
        </member>
        <member name="M:java.lang.Runtime.traceInstructions(System.Boolean)">
            <summary>
            Enables/Disables tracing of instructions.
            </summary>
        </member>
        <member name="M:java.lang.Runtime.traceMethodCalls(System.Boolean)">
            <summary>
            Enables/Disables tracing of method calls.
            </summary>
        </member>
        <member name="M:java.lang.Math.abs(System.Double)">
            <summary>
            Returns the absolute value of a <code>double</code> value.
            </summary>
        </member>
        <member name="M:java.lang.Math.abs(System.Single)">
            <summary>
            Returns the absolute value of a <code>float</code> value.
            </summary>
        </member>
        <member name="M:java.lang.Math.abs(System.Int32)">
            <summary>
            Returns the absolute value of an <code>int</code> value.
            </summary>
        </member>
        <member name="M:java.lang.Math.abs(System.Int64)">
            <summary>
            Returns the absolute value of a <code>long</code> value.
            </summary>
        </member>
        <member name="M:java.lang.Math.acos(System.Double)">
            <summary>
            Returns the arc cosine of an angle, in the range of 0.0 through <i>pi</i>.
            </summary>
        </member>
        <member name="M:java.lang.Math.asin(System.Double)">
            <summary>
            Returns the arc sine of an angle, in the range of -<i>pi</i>/2 through <i>pi</i>/2.
            </summary>
        </member>
        <member name="M:java.lang.Math.atan(System.Double)">
            <summary>
            Returns the arc tangent of an angle, in the range of -<i>pi</i>/2 through <i>pi</i>/2.
            </summary>
        </member>
        <member name="M:java.lang.Math.atan2(System.Double,System.Double)">
            <summary>
            Converts rectangular coordinates (<code>x</code>, <code>y</code>) to polar (r, <i>theta</i>).
            </summary>
        </member>
        <member name="M:java.lang.Math.ceil(System.Double)">
            <summary>
            Returns the smallest (closest to negative infinity)  <code>double</code> value that is not less than the argument and is  equal to a mathematical integer.
            </summary>
        </member>
        <member name="M:java.lang.Math.cos(System.Double)">
            <summary>
            Returns the trigonometric cosine of an angle.
            </summary>
        </member>
        <member name="M:java.lang.Math.exp(System.Double)">
            <summary>
            Returns Euler's number <i>e</i> raised to the power of a <code>double</code> value.
            </summary>
        </member>
        <member name="M:java.lang.Math.floor(System.Double)">
            <summary>
            Returns the largest (closest to positive infinity)  <code>double</code> value that is not greater than the argument and  is equal to a mathematical integer.
            </summary>
        </member>
        <member name="M:java.lang.Math.IEEEremainder(System.Double,System.Double)">
            <summary>
            Computes the remainder operation on two arguments as prescribed  by the IEEE 754 standard.
            </summary>
        </member>
        <member name="M:java.lang.Math.log(System.Double)">
            <summary>
            Returns the natural logarithm (base <i>e</i>) of a <code>double</code> value.
            </summary>
        </member>
        <member name="M:java.lang.Math.max(System.Double,System.Double)">
            <summary>
            Returns the greater of two <code>double</code> values.
            </summary>
        </member>
        <member name="M:java.lang.Math.max(System.Single,System.Single)">
            <summary>
            Returns the greater of two <code>float</code> values.
            </summary>
        </member>
        <member name="M:java.lang.Math.max(System.Int32,System.Int32)">
            <summary>
            Returns the greater of two <code>int</code> values.
            </summary>
        </member>
        <member name="M:java.lang.Math.max(System.Int64,System.Int64)">
            <summary>
            Returns the greater of two <code>long</code> values.
            </summary>
        </member>
        <member name="M:java.lang.Math.min(System.Double,System.Double)">
            <summary>
            Returns the smaller of two <code>double</code> values.
            </summary>
        </member>
        <member name="M:java.lang.Math.min(System.Single,System.Single)">
            <summary>
            Returns the smaller of two <code>float</code> values.
            </summary>
        </member>
        <member name="M:java.lang.Math.min(System.Int32,System.Int32)">
            <summary>
            Returns the smaller of two <code>int</code> values.
            </summary>
        </member>
        <member name="M:java.lang.Math.min(System.Int64,System.Int64)">
            <summary>
            Returns the smaller of two <code>long</code> values.
            </summary>
        </member>
        <member name="M:java.lang.Math.pow(System.Double,System.Double)">
            <summary>
            Returns the value of the first argument raised to the power of the second argument.
            </summary>
        </member>
        <member name="M:java.lang.Math.random">
            <summary>
            Returns a <code>double</code> value with a positive sign, greater  than or equal to <code>0.0</code> and less than <code>1.0</code>.
            </summary>
        </member>
        <member name="M:java.lang.Math.rint(System.Double)">
            <summary>
            Returns the <code>double</code> value that is closest in value to the argument and is equal to a mathematical integer.
            </summary>
        </member>
        <member name="M:java.lang.Math.round(System.Double)">
            <summary>
            Returns the closest <code>long</code> to the argument.
            </summary>
        </member>
        <member name="M:java.lang.Math.round(System.Single)">
            <summary>
            Returns the closest <code>int</code> to the argument.
            </summary>
        </member>
        <member name="M:java.lang.Math.sin(System.Double)">
            <summary>
            Returns the trigonometric sine of an angle.
            </summary>
        </member>
        <member name="M:java.lang.Math.sqrt(System.Double)">
            <summary>
            Returns the correctly rounded positive square root of a  <code>double</code> value.
            </summary>
        </member>
        <member name="M:java.lang.Math.tan(System.Double)">
            <summary>
            Returns the trigonometric tangent of an angle.
            </summary>
        </member>
        <member name="M:java.lang.Math.toDegrees(System.Double)">
            <summary>
            Converts an angle measured in radians to an approximately equivalent angle measured in degrees.
            </summary>
        </member>
        <member name="M:java.lang.Math.toRadians(System.Double)">
            <summary>
            Converts an angle measured in degrees to an approximately equivalent angle measured in radians.
            </summary>
        </member>
        <member name="M:java.lang.Package.getImplementationTitle">
            <summary>
            Return the title of this package.
            </summary>
        </member>
        <member name="M:java.lang.Package.getImplementationVendor">
            <summary>
            Returns the name of the organization, vendor or company that provided this implementation.
            </summary>
        </member>
        <member name="M:java.lang.Package.getImplementationVersion">
            <summary>
            Return the version of this implementation.
            </summary>
        </member>
        <member name="M:java.lang.Package.getName">
            <summary>
            Return the name of this package.
            </summary>
        </member>
        <member name="M:java.lang.Package.getPackage(System.String)">
            <summary>
            Find a package by name in the callers <code>ClassLoader</code> instance.
            </summary>
        </member>
        <member name="M:java.lang.Package.getPackages">
            <summary>
            Get all the packages currently known for the caller's <code>ClassLoader</code> instance.
            </summary>
        </member>
        <member name="M:java.lang.Package.getSpecificationTitle">
            <summary>
            Return the title of the specification that this package implements.
            </summary>
        </member>
        <member name="M:java.lang.Package.getSpecificationVendor">
            <summary>
            Return the name of the organization, vendor, or company that owns and maintains the specification of the classes that implement this package.
            </summary>
        </member>
        <member name="M:java.lang.Package.getSpecificationVersion">
            <summary>
            Returns the version number of the specification that this package implements.
            </summary>
        </member>
        <member name="M:java.lang.Package.isCompatibleWith(System.String)">
            <summary>
            Compare this package's specification version with a desired version.
            </summary>
        </member>
        <member name="M:java.lang.Package.isSealed">
            <summary>
            Returns true if this package is sealed.
            </summary>
        </member>
        <member name="M:java.lang.Package.isSealed(java.net.URL)">
            <summary>
            Returns true if this package is sealed with respect to the specified code source url.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Constructor.getDeclaringClass">
            <summary>
            Returns the <code>Class</code> object representing the class that declares the constructor represented by this <code>Constructor</code> object.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Constructor.getExceptionTypes">
            <summary>
            Returns an array of <code>Class</code> objects that represent the types of of exceptions declared to be thrown by the underlying constructor represented by this <code>Constructor</code> object.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Constructor.getModifiers">
            <summary>
            Returns the Java language modifiers for the constructor represented by this <code>Constructor</code> object, as an integer.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Constructor.getName">
            <summary>
            Returns the name of this constructor, as a string.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Constructor.getParameterTypes">
            <summary>
            Returns an array of <code>Class</code> objects that represent the formal parameter types, in declaration order, of the constructor represented by this <code>Constructor</code> object.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Constructor.newInstance(System.Object[])">
            <summary>
            Uses the constructor represented by this <code>Constructor</code> object to create and initialize a new instance of the constructor's declaring class, with the specified initialization parameters.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Modifier.isAbstract(System.Int32)">
            <summary>
            Return <tt>true</tt> if the integer argument includes the <tt>abstract</tt> modifer, <tt>false</tt> otherwise.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Modifier.isFinal(System.Int32)">
            <summary>
            Return <tt>true</tt> if the integer argument includes the <tt>final</tt> modifer, <tt>false</tt> otherwise.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Modifier.isInterface(System.Int32)">
            <summary>
            Return <tt>true</tt> if the integer argument includes the <tt>interface</tt> modifer, <tt>false</tt> otherwise.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Modifier.isNative(System.Int32)">
            <summary>
            Return <tt>true</tt> if the integer argument includes the <tt>native</tt> modifer, <tt>false</tt> otherwise.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Modifier.isPrivate(System.Int32)">
            <summary>
            Return <tt>true</tt> if the integer argument includes the <tt>private</tt> modifer, <tt>false</tt> otherwise.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Modifier.isProtected(System.Int32)">
            <summary>
            Return <tt>true</tt> if the integer argument includes the <tt>protected</tt> modifer, <tt>false</tt> otherwise.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Modifier.isPublic(System.Int32)">
            <summary>
            Return <tt>true</tt> if the integer argument includes the <tt>public</tt> modifer, <tt>false</tt> otherwise.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Modifier.isStatic(System.Int32)">
            <summary>
            Return <tt>true</tt> if the integer argument includes the <tt>static</tt> modifer, <tt>false</tt> otherwise.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Modifier.isStrict(System.Int32)">
            <summary>
            Return <tt>true</tt> if the integer argument includes the <tt>strictfp</tt> modifer, <tt>false</tt> otherwise.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Modifier.isSynchronized(System.Int32)">
            <summary>
            Return <tt>true</tt> if the integer argument includes the <tt>synchronized</tt> modifer, <tt>false</tt> otherwise.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Modifier.isTransient(System.Int32)">
            <summary>
            Return <tt>true</tt> if the integer argument includes the <tt>transient</tt> modifer, <tt>false</tt> otherwise.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Modifier.isVolatile(System.Int32)">
            <summary>
            Return <tt>true</tt> if the integer argument includes the <tt>volatile</tt> modifer, <tt>false</tt> otherwise.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Method.getDeclaringClass">
            <summary>
            Returns the <code>Class</code> object representing the class or interface that declares the method represented by this <code>Method</code> object.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Method.getExceptionTypes">
            <summary>
            Returns an array of <code>Class</code> objects that represent  the types of the exceptions declared to be thrown by the underlying method represented by this <code>Method</code> object.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Method.getModifiers">
            <summary>
            Returns the Java language modifiers for the method represented by this <code>Method</code> object, as an integer.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Method.getName">
            <summary>
            Returns the name of the method represented by this <code>Method</code>  object, as a <code>String</code>.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Method.getParameterTypes">
            <summary>
            Returns an array of <code>Class</code> objects that represent the formal parameter types, in declaration order, of the method represented by this <code>Method</code> object.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Method.getReturnType">
            <summary>
            Returns a <code>Class</code> object that represents the formal return type of the method represented by this <code>Method</code> object.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Method.invoke(System.Object,System.Object[])">
            <summary>
            Invokes the underlying method represented by this <code>Method</code>  object, on the specified object with the specified parameters.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Field.get(System.Object)">
            <summary>
            Returns the value of the field represented by this <code>Field</code>, on the specified object.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Field.getBoolean(System.Object)">
            <summary>
            Gets the value of a static or instance <code>boolean</code> field.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Field.getByte(System.Object)">
            <summary>
            Gets the value of a static or instance <code>byte</code> field.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Field.getChar(System.Object)">
            <summary>
            Gets the value of a static or instance field of type <code>char</code> or of another primitive type convertible to type <code>char</code> via a widening conversion.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Field.getDeclaringClass">
            <summary>
            Returns the <code>Class</code> object representing the class or interface that declares the field represented by this <code>Field</code> object.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Field.getDouble(System.Object)">
            <summary>
            Gets the value of a static or instance field of type <code>double</code> or of another primitive type convertible to type <code>double</code> via a widening conversion.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Field.getFloat(System.Object)">
            <summary>
            Gets the value of a static or instance field of type <code>float</code> or of another primitive type convertible to type <code>float</code> via a widening conversion.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Field.getInt(System.Object)">
            <summary>
            Gets the value of a static or instance field of type <code>int</code> or of another primitive type convertible to type <code>int</code> via a widening conversion.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Field.getLong(System.Object)">
            <summary>
            Gets the value of a static or instance field of type <code>long</code> or of another primitive type convertible to type <code>long</code> via a widening conversion.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Field.getModifiers">
            <summary>
            Returns the Java language modifiers for the field represented by this <code>Field</code> object, as an integer.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Field.getName">
            <summary>
            Returns the name of the field represented by this <code>Field</code> object.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Field.getShort(System.Object)">
            <summary>
            Gets the value of a static or instance field of type <code>short</code> or of another primitive type convertible to type <code>short</code> via a widening conversion.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Field.getType">
            <summary>
            Returns a <code>Class</code> object that identifies the declared type for the field represented by this <code>Field</code> object.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Field.set(System.Object,System.Object)">
            <summary>
            Sets the field represented by this <code>Field</code> object on the specified object argument to the specified new value.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Field.setBoolean(System.Object,System.Boolean)">
            <summary>
            Sets the value of a field as a <code>boolean</code> on the specified object.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Field.setByte(System.Object,System.SByte)">
            <summary>
            Sets the value of a field as a <code>byte</code> on the specified object.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Field.setChar(System.Object,System.Char)">
            <summary>
            Sets the value of a field as a <code>char</code> on the specified object.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Field.setDouble(System.Object,System.Double)">
            <summary>
            Sets the value of a field as a <code>double</code> on the specified object.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Field.setFloat(System.Object,System.Single)">
            <summary>
            Sets the value of a field as a <code>float</code> on the specified object.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Field.setInt(System.Object,System.Int32)">
            <summary>
            Sets the value of a field as an <code>int</code> on the specified object.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Field.setLong(System.Object,System.Int64)">
            <summary>
            Sets the value of a field as a <code>long</code> on the specified object.
            </summary>
        </member>
        <member name="M:java.lang.reflect.Field.setShort(System.Object,System.Int16)">
            <summary>
            Sets the value of a field as a <code>short</code> on the specified object.
            </summary>
        </member>
        <member name="M:java.lang.ThreadGroup.activeCount">
            <summary>
            Returns an estimate of the number of active threads in this thread group.
            </summary>
        </member>
        <member name="M:java.lang.ThreadGroup.activeGroupCount">
            <summary>
            Returns an estimate of the number of active groups in this thread group.
            </summary>
        </member>
        <member name="M:java.lang.ThreadGroup.allowThreadSuspension(System.Boolean)">
            <summary>
            <B>Deprecated.</B> <I>The definition of this call depends on <A HREF="../../java/lang/ThreadGroup.html#suspend()"><CODE>suspend()</CODE></A>,		   which is deprecated.  Further, the behavior of this call		   was never specified.</I>
            </summary>
        </member>
        <member name="M:java.lang.ThreadGroup.checkAccess">
            <summary>
            Determines if the currently running thread has permission to  modify this thread group.
            </summary>
        </member>
        <member name="M:java.lang.ThreadGroup.destroy">
            <summary>
            Destroys this thread group and all of its subgroups.
            </summary>
        </member>
        <member name="M:java.lang.ThreadGroup.enumerate(java.lang.Thread[])">
            <summary>
            Copies into the specified array every active thread in this  thread group and its subgroups.
            </summary>
        </member>
        <member name="M:java.lang.ThreadGroup.enumerate(java.lang.Thread[],System.Boolean)">
            <summary>
            Copies into the specified array every active thread in this  thread group.
            </summary>
        </member>
        <member name="M:java.lang.ThreadGroup.enumerate(java.lang.ThreadGroup[])">
            <summary>
            Copies into the specified array references to every active  subgroup in this thread group.
            </summary>
        </member>
        <member name="M:java.lang.ThreadGroup.enumerate(java.lang.ThreadGroup[],System.Boolean)">
            <summary>
            Copies into the specified array references to every active  subgroup in this thread group.
            </summary>
        </member>
        <member name="M:java.lang.ThreadGroup.getMaxPriority">
            <summary>
            Returns the maximum priority of this thread group.
            </summary>
        </member>
        <member name="M:java.lang.ThreadGroup.getName">
            <summary>
            Returns the name of this thread group.
            </summary>
        </member>
        <member name="M:java.lang.ThreadGroup.getParent">
            <summary>
            Returns the parent of this thread group.
            </summary>
        </member>
        <member name="M:java.lang.ThreadGroup.interrupt">
            <summary>
            Interrupts all threads in this thread group.
            </summary>
        </member>
        <member name="M:java.lang.ThreadGroup.isDaemon">
            <summary>
            Tests if this thread group is a daemon thread group.
            </summary>
        </member>
        <member name="M:java.lang.ThreadGroup.isDestroyed">
            <summary>
            Tests if this thread group has been destroyed.
            </summary>
        </member>
        <member name="M:java.lang.ThreadGroup.list">
            <summary>
            Prints information about this thread group to the standard  output.
            </summary>
        </member>
        <member name="M:java.lang.ThreadGroup.parentOf(java.lang.ThreadGroup)">
            <summary>
            Tests if this thread group is either the thread group  argument or one of its ancestor thread groups.
            </summary>
        </member>
        <member name="M:java.lang.ThreadGroup.resume">
            <summary>
            <B>Deprecated.</B> <I>This method is used solely in conjunction with      <tt>Thread.suspend</tt> and <tt>ThreadGroup.suspend</tt>,       both of which have been deprecated, as they are inherently       deadlock-prone.  See <A HREF="../../java/lang/Thread.html#suspend()"><CODE>Thread.suspend()</CODE></A> for details.</I>
            </summary>
        </member>
        <member name="M:java.lang.ThreadGroup.setDaemon(System.Boolean)">
            <summary>
            Changes the daemon status of this thread group.
            </summary>
        </member>
        <member name="M:java.lang.ThreadGroup.setMaxPriority(System.Int32)">
            <summary>
            Sets the maximum priority of the group.
            </summary>
        </member>
        <member name="M:java.lang.ThreadGroup.stop">
            <summary>
            <B>Deprecated.</B> <I>This method is inherently unsafe.  See     <A HREF="../../java/lang/Thread.html#stop()"><CODE>Thread.stop()</CODE></A> for details.</I>
            </summary>
        </member>
        <member name="M:java.lang.ThreadGroup.suspend">
            <summary>
            <B>Deprecated.</B> <I>This method is inherently deadlock-prone.  See     <A HREF="../../java/lang/Thread.html#suspend()"><CODE>Thread.suspend()</CODE></A> for details.</I>
            </summary>
        </member>
        <member name="M:java.lang.ThreadGroup.uncaughtException(java.lang.Thread,java.lang.Throwable)">
            <summary>
            Called by the Java Virtual Machine when a thread in this  thread group stops because of an uncaught exception.
            </summary>
        </member>
        <member name="M:java.lang.Thread.activeCount">
            <summary>
            Returns the number of active threads in the current thread's thread group.
            </summary>
        </member>
        <member name="M:java.lang.Thread.checkAccess">
            <summary>
            Determines if the currently running thread has permission to  modify this thread.
            </summary>
        </member>
        <member name="M:java.lang.Thread.countStackFrames">
            <summary>
            <B>Deprecated.</B> <I>The definition of this call depends on <A HREF="../../java/lang/Thread.html#suspend()"><CODE>suspend()</CODE></A>,		   which is deprecated.  Further, the results of this call		   were never well-defined.</I>
            </summary>
        </member>
        <member name="M:java.lang.Thread.currentThread">
            <summary>
            Returns a reference to the currently executing thread object.
            </summary>
        </member>
        <member name="M:java.lang.Thread.destroy">
            <summary>
            Destroys this thread, without any cleanup.
            </summary>
        </member>
        <member name="M:java.lang.Thread.dumpStack">
            <summary>
            Prints a stack trace of the current thread.
            </summary>
        </member>
        <member name="M:java.lang.Thread.enumerate(java.lang.Thread[])">
            <summary>
            Copies into the specified array every active thread in  the current thread's thread group and its subgroups.
            </summary>
        </member>
        <member name="M:java.lang.Thread.getContextClassLoader">
            <summary>
            Returns the context ClassLoader for this Thread.
            </summary>
        </member>
        <member name="M:java.lang.Thread.getName">
            <summary>
            Returns this thread's name.
            </summary>
        </member>
        <member name="M:java.lang.Thread.getPriority">
            <summary>
            Returns this thread's priority.
            </summary>
        </member>
        <member name="M:java.lang.Thread.getThreadGroup">
            <summary>
            Returns the thread group to which this thread belongs.
            </summary>
        </member>
        <member name="M:java.lang.Thread.holdsLock(System.Object)">
            <summary>
            Returns <tt>true</tt> if and only if the current thread holds the monitor lock on the specified object.
            </summary>
        </member>
        <member name="M:java.lang.Thread.interrupt">
            <summary>
            Interrupts this thread.
            </summary>
        </member>
        <member name="M:java.lang.Thread.interrupted">
            <summary>
            Tests whether the current thread has been interrupted.
            </summary>
        </member>
        <member name="M:java.lang.Thread.isAlive">
            <summary>
            Tests if this thread is alive.
            </summary>
        </member>
        <member name="M:java.lang.Thread.isDaemon">
            <summary>
            Tests if this thread is a daemon thread.
            </summary>
        </member>
        <member name="M:java.lang.Thread.isInterrupted">
            <summary>
            Tests whether this thread has been interrupted.
            </summary>
        </member>
        <member name="M:java.lang.Thread.join">
            <summary>
            Waits for this thread to die.
            </summary>
        </member>
        <member name="M:java.lang.Thread.join(System.Int64)">
            <summary>
            Waits at most <code>millis</code> milliseconds for this thread to  die.
            </summary>
        </member>
        <member name="M:java.lang.Thread.join(System.Int64,System.Int32)">
            <summary>
            Waits at most <code>millis</code> milliseconds plus  <code>nanos</code> nanoseconds for this thread to die.
            </summary>
        </member>
        <member name="M:java.lang.Thread.resume">
            <summary>
            <B>Deprecated.</B> <I>This method exists solely for use with <A HREF="../../java/lang/Thread.html#suspend()"><CODE>suspend()</CODE></A>,     which has been deprecated because it is deadlock-prone.     For more information, see      <a href="../../../guide/misc/threadPrimitiveDeprecation.html">Why      are Thread.stop, Thread.suspend and Thread.resume Deprecated?</a>.</I>
            </summary>
        </member>
        <member name="M:java.lang.Thread.run">
            <summary>
            If this thread was constructed using a separate  <code>Runnable</code> run object, then that  <code>Runnable</code> object's <code>run</code> method is called;  otherwise, this method does nothing and returns.
            </summary>
        </member>
        <member name="M:java.lang.Thread.setContextClassLoader(java.lang.ClassLoader)">
            <summary>
            Sets the context ClassLoader for this Thread.
            </summary>
        </member>
        <member name="M:java.lang.Thread.setDaemon(System.Boolean)">
            <summary>
            Marks this thread as either a daemon thread or a user thread.
            </summary>
        </member>
        <member name="M:java.lang.Thread.setName(System.String)">
            <summary>
            Changes the name of this thread to be equal to the argument  <code>name</code>.
            </summary>
        </member>
        <member name="M:java.lang.Thread.setPriority(System.Int32)">
            <summary>
            Changes the priority of this thread.
            </summary>
        </member>
        <member name="M:java.lang.Thread.sleep(System.Int64)">
            <summary>
            Causes the currently executing thread to sleep (temporarily cease  execution) for the specified number of milliseconds.
            </summary>
        </member>
        <member name="M:java.lang.Thread.sleep(System.Int64,System.Int32)">
            <summary>
            Causes the currently executing thread to sleep (cease execution)  for the specified number of milliseconds plus the specified number  of nanoseconds.
            </summary>
        </member>
        <member name="M:java.lang.Thread.start">
            <summary>
            Causes this thread to begin execution; the Java Virtual Machine  calls the <code>run</code> method of this thread.
            </summary>
        </member>
        <member name="M:java.lang.Thread.stop">
            <summary>
            <B>Deprecated.</B> <I>This method is inherently unsafe.  Stopping a thread with	     Thread.stop causes it to unlock all of the monitors that it	     has locked (as a natural consequence of the unchecked	     <code>ThreadDeath</code> exception propagating up the stack).  If       any of the objects previously protected by these monitors were in       an inconsistent state, the damaged objects become visible to       other threads, potentially resulting in arbitrary behavior.  Many       uses of <code>stop</code> should be replaced by code that simply       modifies some variable to indicate that the target thread should       stop running.  The target thread should check this variable         regularly, and return from its run method in an orderly fashion       if the variable indicates that it is to stop running.  If the       target thread waits for long periods (on a condition variable,       for example), the <code>interrupt</code> method should be used to       interrupt the wait.        For more information, see        <a href="../../../guide/misc/threadPrimitiveDeprecation.html">Why        are Thread.stop, Thread.suspend and Thread.resume Deprecated?</a>.</I>
            </summary>
        </member>
        <member name="M:java.lang.Thread.stop(java.lang.Throwable)">
            <summary>
            <B>Deprecated.</B> <I>This method is inherently unsafe.  See <A HREF="../../java/lang/Thread.html#stop()"><CODE>stop()</CODE></A>        (with no arguments) for details.  An additional danger of this        method is that it may be used to generate exceptions that the        target thread is unprepared to handle (including checked        exceptions that the thread could not possibly throw, were it        not for this method).        For more information, see         <a href="../../../guide/misc/threadPrimitiveDeprecation.html">Why         are Thread.stop, Thread.suspend and Thread.resume Deprecated?</a>.</I>
            </summary>
        </member>
        <member name="M:java.lang.Thread.suspend">
            <summary>
            <B>Deprecated.</B> <I>This method has been deprecated, as it is   inherently deadlock-prone.  If the target thread holds a lock on the   monitor protecting a critical system resource when it is suspended, no   thread can access this resource until the target thread is resumed. If   the thread that would resume the target thread attempts to lock this   monitor prior to calling <code>resume</code>, deadlock results.  Such   deadlocks typically manifest themselves as "frozen" processes.   For more information, see    <a href="../../../guide/misc/threadPrimitiveDeprecation.html">Why    are Thread.stop, Thread.suspend and Thread.resume Deprecated?</a>.</I>
            </summary>
        </member>
        <member name="M:java.lang.Thread.yield">
            <summary>
            Causes the currently executing thread object to temporarily pause  and allow other threads to execute.
            </summary>
        </member>
        <member name="M:java.lang.Long.byteValue">
            <summary>
            Returns the value of this <code>Long</code> as a <code>byte</code>.
            </summary>
        </member>
        <member name="M:java.lang.Long.compareTo(java.lang.Long)">
            <summary>
            Compares two <code>Long</code> objects numerically.
            </summary>
        </member>
        <member name="M:java.lang.Long.compareTo(System.Object)">
            <summary>
            Compares this <code>Long</code> object to another object.
            </summary>
        </member>
        <member name="M:java.lang.Long.decode(System.String)">
            <summary>
            Decodes a <code>String</code> into a <code>Long</code>.
            </summary>
        </member>
        <member name="M:java.lang.Long.doubleValue">
            <summary>
            Returns the value of this <code>Long</code> as a <code>double</code>.
            </summary>
        </member>
        <member name="M:java.lang.Long.floatValue">
            <summary>
            Returns the value of this <code>Long</code> as a <code>float</code>.
            </summary>
        </member>
        <member name="M:java.lang.Long.getLong(System.String)">
            <summary>
            Determines the <code>long</code> value of the system property with the specified name.
            </summary>
        </member>
        <member name="M:java.lang.Long.getLong(System.String,System.Int64)">
            <summary>
            Determines the <code>long</code> value of the system property with the specified name.
            </summary>
        </member>
        <member name="M:java.lang.Long.getLong(System.String,java.lang.Long)">
            <summary>
            Returns the <code>long</code> value of the system property with the specified name.
            </summary>
        </member>
        <member name="M:java.lang.Long.intValue">
            <summary>
            Returns the value of this <code>Long</code> as an <code>int</code>.
            </summary>
        </member>
        <member name="M:java.lang.Long.longValue">
            <summary>
            Returns the value of this <code>Long</code> as a <code>long</code> value.
            </summary>
        </member>
        <member name="M:java.lang.Long.parseLong(System.String)">
            <summary>
            Parses the string argument as a signed decimal <code>long</code>.
            </summary>
        </member>
        <member name="M:java.lang.Long.parseLong(System.String,System.Int32)">
            <summary>
            Parses the string argument as a signed <code>long</code> in the radix specified by the second argument.
            </summary>
        </member>
        <member name="M:java.lang.Long.shortValue">
            <summary>
            Returns the value of this <code>Long</code> as a <code>short</code>.
            </summary>
        </member>
        <member name="M:java.lang.Long.toBinaryString(System.Int64)">
            <summary>
            Returns a string representation of the <code>long</code> argument as an unsigned integer in base 2.
            </summary>
        </member>
        <member name="M:java.lang.Long.toHexString(System.Int64)">
            <summary>
            Returns a string representation of the <code>long</code> argument as an unsigned integer in base 16.
            </summary>
        </member>
        <member name="M:java.lang.Long.toOctalString(System.Int64)">
            <summary>
            Returns a string representation of the <code>long</code> argument as an unsigned integer in base 8.
            </summary>
        </member>
        <member name="M:java.lang.Long.valueOf(System.String)">
            <summary>
            Returns a <code>Long</code> object holding the value of the specified <code>String</code>.
            </summary>
        </member>
        <member name="M:java.lang.Long.valueOf(System.String,System.Int32)">
            <summary>
            Returns a <code>Long</code> object holding the value extracted from the specified <code>String</code> when parsed with the radix given by the second argument.
            </summary>
        </member>
        <member name="T:java.lang.String">
            <summary>
            http://java.sun.com/j2se/1.3/docs/api/java/lang/String.html
            </summary>
        </member>
        <member name="M:java.lang.String.charAt(System.Int32)">
            <summary>
            Returns the character at the specified index.
            </summary>
        </member>
        <member name="M:java.lang.String.compareTo(System.Object)">
            <summary>
            Compares this String to another Object.
            </summary>
        </member>
        <member name="M:java.lang.String.compareTo(System.String)">
            <summary>
            Compares two strings lexicographically.
            </summary>
        </member>
        <member name="M:java.lang.String.compareToIgnoreCase(System.String)">
            <summary>
            Compares two strings lexicographically, ignoring case differences.
            </summary>
        </member>
        <member name="M:java.lang.String.concat(System.String)">
            <summary>
            Concatenates the specified string to the end of this string.
            </summary>
        </member>
        <member name="M:java.lang.String.contentEquals(java.lang.StringBuffer)">
            <summary>
            Returns <tt>true</tt> if and only if this <tt>String</tt> represents the same sequence of characters as the specified <tt>StringBuffer</tt>.
            </summary>
        </member>
        <member name="M:java.lang.String.copyValueOf(System.Char[])">
            <summary>
            Returns a String that represents the character sequence in the array specified.
            </summary>
        </member>
        <member name="M:java.lang.String.copyValueOf(System.Char[],System.Int32,System.Int32)">
            <summary>
            Returns a String that represents the character sequence in the array specified.
            </summary>
        </member>
        <member name="M:java.lang.String.endsWith(System.String)">
            <summary>
            Tests if this string ends with the specified suffix.
            </summary>
        </member>
        <member name="M:java.lang.String.equalsIgnoreCase(System.String)">
            <summary>
            Compares this <code>String</code> to another <code>String</code>, ignoring case considerations.
            </summary>
        </member>
        <member name="M:java.lang.String.getBytes">
            <summary>
            Encodes this <tt>String</tt> into a sequence of bytes using the platform's default charset, storing the result into a new byte array.
            </summary>
        </member>
        <member name="M:java.lang.String.getBytes(System.Int32,System.Int32,System.SByte[],System.Int32)">
            <summary>
            <B>Deprecated.</B> <I>This method does not properly convert characters into bytes. As of JDK 1.1, the preferred way to do this is via the the <code>getBytes()</code> method, which uses the platform's default charset.</I>
            </summary>
        </member>
        <member name="M:java.lang.String.getBytes(System.String)">
            <summary>
            Encodes this <tt>String</tt> into a sequence of bytes using the named charset, storing the result into a new byte array.
            </summary>
        </member>
        <member name="M:java.lang.String.getChars(System.Int32,System.Int32,System.Char[],System.Int32)">
            <summary>
            Copies characters from this string into the destination character array.
            </summary>
        </member>
        <member name="M:java.lang.String.indexOf(System.Int32)">
            <summary>
            Returns the index within this string of the first occurrence of the specified character.
            </summary>
        </member>
        <member name="M:java.lang.String.indexOf(System.Int32,System.Int32)">
            <summary>
            Returns the index within this string of the first occurrence of the specified character, starting the search at the specified index.
            </summary>
        </member>
        <member name="M:java.lang.String.indexOf(System.String)">
            <summary>
            Returns the index within this string of the first occurrence of the specified substring.
            </summary>
        </member>
        <member name="M:java.lang.String.indexOf(System.String,System.Int32)">
            <summary>
            Returns the index within this string of the first occurrence of the specified substring, starting at the specified index.
            </summary>
        </member>
        <member name="M:java.lang.String.intern">
            <summary>
            Returns a canonical representation for the string object.
            </summary>
        </member>
        <member name="M:java.lang.String.lastIndexOf(System.Int32)">
            <summary>
            Returns the index within this string of the last occurrence of the specified character.
            </summary>
        </member>
        <member name="M:java.lang.String.lastIndexOf(System.Int32,System.Int32)">
            <summary>
            Returns the index within this string of the last occurrence of the specified character, searching backward starting at the specified index.
            </summary>
        </member>
        <member name="M:java.lang.String.lastIndexOf(System.String)">
            <summary>
            Returns the index within this string of the rightmost occurrence of the specified substring.
            </summary>
        </member>
        <member name="M:java.lang.String.lastIndexOf(System.String,System.Int32)">
            <summary>
            Returns the index within this string of the last occurrence of the specified substring, searching backward starting at the specified index.
            </summary>
        </member>
        <member name="M:java.lang.String.length">
            <summary>
            Returns the length of this string.
            </summary>
        </member>
        <member name="M:java.lang.String.matches(System.String)">
            <summary>
            Tells whether or not this string matches the given <a href="../util/regex/Pattern.html#sum">regular expression</a>.
            </summary>
        </member>
        <member name="M:java.lang.String.regionMatches(System.Boolean,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Tests if two string regions are equal.
            </summary>
        </member>
        <member name="M:java.lang.String.regionMatches(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Tests if two string regions are equal.
            </summary>
        </member>
        <member name="M:java.lang.String.replace(System.Char,System.Char)">
            <summary>
            Returns a new string resulting from replacing all occurrences of <code>oldChar</code> in this string with <code>newChar</code>.
            </summary>
        </member>
        <member name="M:java.lang.String.replaceAll(System.String,System.String)">
            <summary>
            Replaces each substring of this string that matches the given <a href="../util/regex/Pattern.html#sum">regular expression</a> with the given replacement.
            </summary>
        </member>
        <member name="M:java.lang.String.replaceFirst(System.String,System.String)">
            <summary>
            Replaces the first substring of this string that matches the given <a href="../util/regex/Pattern.html#sum">regular expression</a> with the given replacement.
            </summary>
        </member>
        <member name="M:java.lang.String.split(System.String)">
            <summary>
            Splits this string around matches of the given <a href="../../java/util/regex/Pattern.html#sum">regular expression</a>.
            </summary>
        </member>
        <member name="M:java.lang.String.split(System.String,System.Int32)">
            <summary>
            Splits this string around matches of the given <a href="../../java/util/regex/Pattern.html#sum">regular expression</a>.
            </summary>
        </member>
        <member name="M:java.lang.String.startsWith(System.String)">
            <summary>
            Tests if this string starts with the specified prefix.
            </summary>
        </member>
        <member name="M:java.lang.String.startsWith(System.String,System.Int32)">
            <summary>
            Tests if this string starts with the specified prefix beginning a specified index.
            </summary>
        </member>
        <member name="M:java.lang.String.subSequence(System.Int32,System.Int32)">
            <summary>
            Returns a new character sequence that is a subsequence of this sequence.
            </summary>
        </member>
        <member name="M:java.lang.String.substring(System.Int32)">
            <summary>
            Returns a new string that is a substring of this string.
            </summary>
        </member>
        <member name="M:java.lang.String.substring(System.Int32,System.Int32)">
            <summary>
            Returns a new string that is a substring of this string.
            </summary>
        </member>
        <member name="M:java.lang.String.toCharArray">
            <summary>
            Converts this string to a new character array.
            </summary>
        </member>
        <member name="M:java.lang.String.toLowerCase">
            <summary>
            Converts all of the characters in this <code>String</code> to lower case using the rules of the default locale.
            </summary>
        </member>
        <member name="M:java.lang.String.toLowerCase(java.util.Locale)">
            <summary>
            Converts all of the characters in this <code>String</code> to lower case using the rules of the given <code>Locale</code>.
            </summary>
        </member>
        <member name="M:java.lang.String.toUpperCase">
            <summary>
            Converts all of the characters in this <code>String</code> to upper case using the rules of the default locale.
            </summary>
        </member>
        <member name="M:java.lang.String.toUpperCase(java.util.Locale)">
            <summary>
            Converts all of the characters in this <code>String</code> to upper case using the rules of the given <code>Locale</code>.
            </summary>
        </member>
        <member name="M:java.lang.String.trim">
            <summary>
            Returns a copy of the string, with leading and trailing whitespace omitted.
            </summary>
        </member>
        <member name="M:java.lang.String.valueOf(System.Boolean)">
            <summary>
            Returns the string representation of the <code>boolean</code> argument.
            </summary>
        </member>
        <member name="M:java.lang.String.valueOf(System.Char)">
            <summary>
            Returns the string representation of the <code>char</code> argument.
            </summary>
        </member>
        <member name="M:java.lang.String.valueOf(System.Char[])">
            <summary>
            Returns the string representation of the <code>char</code> array argument.
            </summary>
        </member>
        <member name="M:java.lang.String.valueOf(System.Char[],System.Int32,System.Int32)">
            <summary>
            Returns the string representation of a specific subarray of the <code>char</code> array argument.
            </summary>
        </member>
        <member name="M:java.lang.String.valueOf(System.Double)">
            <summary>
            Returns the string representation of the <code>double</code> argument.
            </summary>
        </member>
        <member name="M:java.lang.String.valueOf(System.Single)">
            <summary>
            Returns the string representation of the <code>float</code> argument.
            </summary>
        </member>
        <member name="M:java.lang.String.valueOf(System.Int32)">
            <summary>
            Returns the string representation of the <code>int</code> argument.
            </summary>
        </member>
        <member name="M:java.lang.String.valueOf(System.Int64)">
            <summary>
            Returns the string representation of the <code>long</code> argument.
            </summary>
        </member>
        <member name="M:java.lang.String.valueOf(System.Object)">
            <summary>
            Returns the string representation of the <code>Object</code> argument.
            </summary>
        </member>
        <member name="T:java.lang.StringBuffer">
            <summary>
            http://java.sun.com/j2se/1.5.0/docs/api/java/lang/StringBuffer.html
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.#ctor">
            <summary>
            Constructs a string buffer with no characters in it and an initial capacity of 16 characters.
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.#ctor(System.Int32)">
            <summary>
            Constructs a string buffer with no characters in it and an initial capacity specified by the
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.#ctor(System.String)">
            <summary>
            Constructs a string buffer so that it represents the same sequence of characters as the string argument; in other words, the initial contents of the string buffer is a copy of the argument string.
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.append(System.Boolean)">
            <summary>
            Appends the string representation of the
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.append(System.Char)">
            <summary>
            Appends the string representation of the
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.append(System.Char[])">
            <summary>
            Appends the string representation of the
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.append(System.Char[],System.Int32,System.Int32)">
            <summary>
            Appends the string representation of a subarray of the
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.append(System.Double)">
            <summary>
            Appends the string representation of the
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.append(System.Single)">
            <summary>
            Appends the string representation of the
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.append(System.Int32)">
            <summary>
            Appends the string representation of the
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.append(System.Int64)">
            <summary>
            Appends the string representation of the
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.append(System.Object)">
            <summary>
            Appends the string representation of the
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.append(System.String)">
            <summary>
            Appends the string to this string buffer.
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.append(java.lang.StringBuffer)">
            <summary>
            Appends the specified
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.capacity">
            <summary>
            Returns the current capacity of the String buffer.
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.charAt(System.Int32)">
            <summary>
            The specified character of the sequence currently represented by the string buffer, as indicated by the
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.delete(System.Int32,System.Int32)">
            <summary>
            Removes the characters in a substring of this
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.deleteCharAt(System.Int32)">
            <summary>
            Removes the character at the specified position in this
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.ensureCapacity(System.Int32)">
            <summary>
            Ensures that the capacity of the buffer is at least equal to the specified minimum.
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.getChars(System.Int32,System.Int32,System.Char[],System.Int32)">
            <summary>
            Characters are copied from this string buffer into the destination character array
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.indexOf(System.String)">
            <summary>
            Returns the index within this string of the first occurrence of the specified substring.
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.indexOf(System.String,System.Int32)">
            <summary>
            Returns the index within this string of the first occurrence of the specified substring, starting at the specified index.
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.insert(System.Int32,System.Boolean)">
            <summary>
            Inserts the string representation of the
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.insert(System.Int32,System.Char)">
            <summary>
            Inserts the string representation of the
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.insert(System.Int32,System.Char[])">
            <summary>
            Inserts the string representation of the
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.insert(System.Int32,System.Char[],System.Int32,System.Int32)">
            <summary>
            Inserts the string representation of a subarray of the
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.insert(System.Int32,System.Double)">
            <summary>
            Inserts the string representation of the
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.insert(System.Int32,System.Single)">
            <summary>
            Inserts the string representation of the
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.insert(System.Int32,System.Int32)">
            <summary>
            Inserts the string representation of the second
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.insert(System.Int32,System.Int64)">
            <summary>
            Inserts the string representation of the
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.insert(System.Int32,System.Object)">
            <summary>
            Inserts the string representation of the
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.insert(System.Int32,System.String)">
            <summary>
            Inserts the string into this string buffer.
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.lastIndexOf(System.String)">
            <summary>
            Returns the index within this string of the rightmost occurrence of the specified substring.
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.lastIndexOf(System.String,System.Int32)">
            <summary>
            Returns the index within this string of the last occurrence of the specified substring.
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.length">
            <summary>
            Returns the length (character count) of this string buffer.
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.replace(System.Int32,System.Int32,System.String)">
            <summary>
            Replaces the characters in a substring of this
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.reverse">
            <summary>
            The character sequence contained in this string buffer is replaced by the reverse of the sequence.
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.setCharAt(System.Int32,System.Char)">
            <summary>
            The character at the specified index of this string buffer is set to
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.setLength(System.Int32)">
            <summary>
            Sets the length of this String buffer.
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.subSequence(System.Int32,System.Int32)">
            <summary>
            Returns a new character sequence that is a subsequence of this sequence.
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.substring(System.Int32)">
            <summary>
            Returns a new
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.substring(System.Int32,System.Int32)">
            <summary>
            Returns a new
            </summary>
        </member>
        <member name="M:java.lang.StringBuffer.toString">
            <summary>
            Converts to a string representing the data in this string buffer.
            </summary>
        </member>
        <member name="M:java.net.InetSocketAddress.getAddress">
            <summary>
            Gets the <code>InetAddress</code>.
            </summary>
        </member>
        <member name="M:java.net.InetSocketAddress.getHostName">
            <summary>
            Gets the <code>hostname</code>.
            </summary>
        </member>
        <member name="M:java.net.InetSocketAddress.getPort">
            <summary>
            Gets the port number.
            </summary>
        </member>
        <member name="M:java.net.InetSocketAddress.isUnresolved">
            <summary>
            Checks wether the address has been resolved or not.
            </summary>
        </member>
        <member name="T:java.net.URLClassLoader">
            <summary>
            This class loader is used to load classes and resources from a search
            path of URLs referring to both JAR files and directories. Any URL that
            ends with a '/' is assumed to refer to a directory. Otherwise, the URL
            is assumed to refer to a JAR file which will be opened as needed.
            </summary>
        </member>
        <member name="M:java.net.URLClassLoader.#ctor(java.net.URL[])">
            <summary>
            Constructs a new URLClassLoader for the specified URLs using the
            default delegation parent <code>ClassLoader</code>.
            </summary>
        </member>
        <member name="M:java.net.URLClassLoader.#ctor(java.net.URL[],java.lang.ClassLoader)">
            <summary>
            Constructs a new URLClassLoader for the given URLs.
            </summary>
        </member>
        <member name="M:java.net.URLClassLoader.newInstance(java.net.URL[])">
            <summary>
            Creates a new instance of URLClassLoader for the specified
            URLs and default parent class loader.
            </summary>
        </member>
        <member name="M:java.net.URLClassLoader.newInstance(java.net.URL[],java.lang.ClassLoader)">
            <summary>
            Creates a new instance of URLClassLoader for the specified
            URLs and parent class loader.
            </summary>
        </member>
        <member name="M:java.net.URLClassLoader.findResource(System.String)">
            <summary>
            Finds the resource with the specified name on the URL search path.
            </summary>
        </member>
        <member name="M:java.net.URLClassLoader.findResources(System.String)">
            <summary>
            Returns an Enumeration of URLs representing all of the resources
            on the URL search path having the specified name.
            </summary>
        </member>
        <member name="M:java.net.URLClassLoader.getURLs">
            <summary>
            Returns the search path of URLs for loading classes and resources.
            </summary>
        </member>
        <member name="T:java.net.URL">
            <summary>
            public final class URL
            </summary>
        </member>
        <member name="M:java.net.URL.#ctor(System.String)">
            <summary>
            Creates a
            </summary>
        </member>
        <member name="M:java.net.URL.#ctor(System.String,System.String,System.Int32,System.String)">
            <summary>
            Creates a
            </summary>
        </member>
        <member name="M:java.net.URL.#ctor(System.String,System.String,System.String)">
            <summary>
            Creates a URL from the specified
            </summary>
        </member>
        <member name="M:java.net.URL.#ctor(java.net.URL,System.String)">
            <summary>
            Creates a URL by parsing the given spec within a specified context.
            </summary>
        </member>
        <member name="M:java.net.URL.getAuthority">
            <summary>
            Gets the authority part of this
            </summary>
        </member>
        <member name="M:java.net.URL.getContent">
            <summary>
            Gets the contents of this URL.
            </summary>
        </member>
        <member name="M:java.net.URL.getContent(java.lang.Class[])">
            <summary>
            Gets the contents of this URL.
            </summary>
        </member>
        <member name="M:java.net.URL.getDefaultPort">
            <summary>
            Gets the default port number of the protocol associated with this
            </summary>
        </member>
        <member name="M:java.net.URL.getFile">
            <summary>
            Gets the file name of this
            </summary>
        </member>
        <member name="M:java.net.URL.getHost">
            <summary>
            Gets the host name of this
            </summary>
        </member>
        <member name="M:java.net.URL.getPath">
            <summary>
            Gets the path part of this
            </summary>
        </member>
        <member name="M:java.net.URL.getPort">
            <summary>
            Gets the port number of this
            </summary>
        </member>
        <member name="M:java.net.URL.getProtocol">
            <summary>
            Gets the protocol name of this
            </summary>
        </member>
        <member name="M:java.net.URL.getQuery">
            <summary>
            Gets the query part of this
            </summary>
        </member>
        <member name="M:java.net.URL.getRef">
            <summary>
            Gets the anchor (also known as the "reference") of this
            </summary>
        </member>
        <member name="M:java.net.URL.getUserInfo">
            <summary>
            Gets the userInfo part of this
            </summary>
        </member>
        <member name="M:java.net.URL.hashCode">
            <summary>
            Creates an integer suitable for hash table indexing.
            </summary>
        </member>
        <member name="M:java.net.URL.openStream">
            <summary>
            Opens a connection to this
            </summary>
        </member>
        <member name="M:java.net.URL.sameFile(java.net.URL)">
            <summary>
            Compares two URLs, excluding the fragment component.
            </summary>
        </member>
        <member name="M:java.net.URL.set(System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            Sets the fields of the URL.
            </summary>
        </member>
        <member name="M:java.net.URL.set(System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sets the specified 8 fields of the URL.
            </summary>
        </member>
        <member name="M:java.net.URL.toExternalForm">
            <summary>
            Constructs a string representation of this
            </summary>
        </member>
        <member name="M:java.net.InetAddress.getAddress">
            <summary>
            Returns the raw IP address of this <code>InetAddress</code> object.
            </summary>
        </member>
        <member name="M:java.net.InetAddress.getAllByName(System.String)">
            <summary>
            Given the name of a host, returns an array of its IP addresses, based on the configured name service on the system.
            </summary>
        </member>
        <member name="M:java.net.InetAddress.getByAddress(System.SByte[])">
            <summary>
            Returns an <code>InetAddress</code> object given the raw IP address .
            </summary>
        </member>
        <member name="M:java.net.InetAddress.getByAddress(System.String,System.SByte[])">
            <summary>
            Create an InetAddress based on the provided host name and IP address No name service is checked for the validity of the address.
            </summary>
        </member>
        <member name="M:java.net.InetAddress.getByName(System.String)">
            <summary>
            Determines the IP address of a host, given the host's name.
            </summary>
        </member>
        <member name="M:java.net.InetAddress.getCanonicalHostName">
            <summary>
            Gets the fully qualified domain name for this IP address.
            </summary>
        </member>
        <member name="M:java.net.InetAddress.getHostAddress">
            <summary>
            Returns the IP address string in textual presentation.
            </summary>
        </member>
        <member name="M:java.net.InetAddress.getHostName">
            <summary>
            Gets the host name for this IP address.
            </summary>
        </member>
        <member name="M:java.net.InetAddress.getLocalHost">
            <summary>
            Returns the local host.
            </summary>
        </member>
        <member name="M:java.net.InetAddress.isAnyLocalAddress">
            <summary>
            Utility routine to check if the InetAddress in a wildcard address.
            </summary>
        </member>
        <member name="M:java.net.InetAddress.isLinkLocalAddress">
            <summary>
            Utility routine to check if the InetAddress is an link local address.
            </summary>
        </member>
        <member name="M:java.net.InetAddress.isLoopbackAddress">
            <summary>
            Utility routine to check if the InetAddress is a loopback address.
            </summary>
        </member>
        <member name="M:java.net.InetAddress.isMCGlobal">
            <summary>
            Utility routine to check if the multicast address has global scope.
            </summary>
        </member>
        <member name="M:java.net.InetAddress.isMCLinkLocal">
            <summary>
            Utility routine to check if the multicast address has link scope.
            </summary>
        </member>
        <member name="M:java.net.InetAddress.isMCNodeLocal">
            <summary>
            Utility routine to check if the multicast address has node scope.
            </summary>
        </member>
        <member name="M:java.net.InetAddress.isMCOrgLocal">
            <summary>
            Utility routine to check if the multicast address has organization scope.
            </summary>
        </member>
        <member name="M:java.net.InetAddress.isMCSiteLocal">
            <summary>
            Utility routine to check if the multicast address has site scope.
            </summary>
        </member>
        <member name="M:java.net.InetAddress.isMulticastAddress">
            <summary>
            Utility routine to check if the InetAddress is an IP multicast address.
            </summary>
        </member>
        <member name="M:java.net.InetAddress.isSiteLocalAddress">
            <summary>
            Utility routine to check if the InetAddress is a site local address.
            </summary>
        </member>
        <member name="T:java.net.Socket">
            <summary>
            http://java.sun.com/j2se/1.4.2/docs/api/java/net/Socket.html
            </summary>
        </member>
        <member name="M:java.net.Socket.bind(java.net.SocketAddress)">
            <summary>
            Binds the socket to a local address.
            </summary>
        </member>
        <member name="M:java.net.Socket.close">
            <summary>
            Closes this socket.
            </summary>
        </member>
        <member name="M:java.net.Socket.connect(java.net.SocketAddress)">
            <summary>
            Connects this socket to the server.
            </summary>
        </member>
        <member name="M:java.net.Socket.connect(java.net.SocketAddress,System.Int32)">
            <summary>
            Connects this socket to the server with a specified timeout value.
            </summary>
        </member>
        <member name="M:java.net.Socket.getChannel">
            <summary>
            Returns the unique <A HREF="../../java/nio/channels/SocketChannel.html" title="class in java.nio.channels"><CODE>SocketChannel</CODE></A> object associated with this socket, if any.
            </summary>
        </member>
        <member name="M:java.net.Socket.getInetAddress">
            <summary>
            Returns the address to which the socket is connected.
            </summary>
        </member>
        <member name="M:java.net.Socket.getInputStream">
            <summary>
            Returns an input stream for this socket.
            </summary>
        </member>
        <member name="M:java.net.Socket.getKeepAlive">
            <summary>
            Tests if SO_KEEPALIVE is enabled.
            </summary>
        </member>
        <member name="M:java.net.Socket.getLocalAddress">
            <summary>
            Gets the local address to which the socket is bound.
            </summary>
        </member>
        <member name="M:java.net.Socket.getLocalPort">
            <summary>
            Returns the local port to which this socket is bound.
            </summary>
        </member>
        <member name="M:java.net.Socket.getLocalSocketAddress">
            <summary>
            Returns the address of the endpoint this socket is bound to, or <code>null</code> if it is not bound yet.
            </summary>
        </member>
        <member name="M:java.net.Socket.getOOBInline">
            <summary>
            Tests if OOBINLINE is enabled.
            </summary>
        </member>
        <member name="M:java.net.Socket.getOutputStream">
            <summary>
            Returns an output stream for this socket.
            </summary>
        </member>
        <member name="M:java.net.Socket.getPort">
            <summary>
            Returns the remote port to which this socket is connected.
            </summary>
        </member>
        <member name="M:java.net.Socket.getReceiveBufferSize">
            <summary>
            Gets the value of the SO_RCVBUF option for this <tt>Socket</tt>,  that is the buffer size used by the platform for  input on this <tt>Socket</tt>.
            </summary>
        </member>
        <member name="M:java.net.Socket.getRemoteSocketAddress">
            <summary>
            Returns the address of the endpoint this socket is connected to, or <code>null</code> if it is unconnected.
            </summary>
        </member>
        <member name="M:java.net.Socket.getReuseAddress">
            <summary>
            Tests if SO_REUSEADDR is enabled.
            </summary>
        </member>
        <member name="M:java.net.Socket.getSendBufferSize">
            <summary>
            Get value of the SO_SNDBUF option for this <tt>Socket</tt>,  that is the buffer size used by the platform  for output on this <tt>Socket</tt>.
            </summary>
        </member>
        <member name="M:java.net.Socket.getSoLinger">
            <summary>
            Returns setting for SO_LINGER.
            </summary>
        </member>
        <member name="M:java.net.Socket.getSoTimeout">
            <summary>
            Returns setting for SO_TIMEOUT.
            </summary>
        </member>
        <member name="M:java.net.Socket.getTcpNoDelay">
            <summary>
            Tests if TCP_NODELAY is enabled.
            </summary>
        </member>
        <member name="M:java.net.Socket.getTrafficClass">
            <summary>
            Gets traffic class or type-of-service in the IP header for packets sent from this Socket
            </summary>
        </member>
        <member name="M:java.net.Socket.isBound">
            <summary>
            Returns the binding state of the socket.
            </summary>
        </member>
        <member name="M:java.net.Socket.isClosed">
            <summary>
            Returns the closed state of the socket.
            </summary>
        </member>
        <member name="M:java.net.Socket.isConnected">
            <summary>
            Returns the connection state of the socket.
            </summary>
        </member>
        <member name="M:java.net.Socket.isInputShutdown">
            <summary>
            Returns wether the read-half of the socket connection is closed.
            </summary>
        </member>
        <member name="M:java.net.Socket.isOutputShutdown">
            <summary>
            Returns wether the write-half of the socket connection is closed.
            </summary>
        </member>
        <member name="M:java.net.Socket.sendUrgentData(System.Int32)">
            <summary>
            Send one byte of urgent data on the socket.
            </summary>
        </member>
        <member name="M:java.net.Socket.setKeepAlive(System.Boolean)">
            <summary>
            Enable/disable SO_KEEPALIVE.
            </summary>
        </member>
        <member name="M:java.net.Socket.setOOBInline(System.Boolean)">
            <summary>
            Enable/disable OOBINLINE (receipt of TCP urgent data) By default, this option is disabled and TCP urgent data received on a  socket is silently discarded.
            </summary>
        </member>
        <member name="M:java.net.Socket.setReceiveBufferSize(System.Int32)">
            <summary>
            Sets the SO_RCVBUF option to the specified value for this <tt>Socket</tt>.
            </summary>
        </member>
        <member name="M:java.net.Socket.setReuseAddress(System.Boolean)">
            <summary>
            Enable/disable the SO_REUSEADDR socket option.
            </summary>
        </member>
        <member name="M:java.net.Socket.setSendBufferSize(System.Int32)">
            <summary>
            Sets the SO_SNDBUF option to the specified value for this <tt>Socket</tt>.
            </summary>
        </member>
        <member name="M:java.net.Socket.setSocketImplFactory(java.net.SocketImplFactory)">
            <summary>
            Sets the client socket implementation factory for the application.
            </summary>
        </member>
        <member name="M:java.net.Socket.setSoLinger(System.Boolean,System.Int32)">
            <summary>
            Enable/disable SO_LINGER with the specified linger time in seconds.
            </summary>
        </member>
        <member name="M:java.net.Socket.setSoTimeout(System.Int32)">
            <summary>
            Enable/disable SO_TIMEOUT with the specified timeout, in  milliseconds.
            </summary>
        </member>
        <member name="M:java.net.Socket.setTcpNoDelay(System.Boolean)">
            <summary>
            Enable/disable TCP_NODELAY (disable/enable Nagle's algorithm).
            </summary>
        </member>
        <member name="M:java.net.Socket.setTrafficClass(System.Int32)">
            <summary>
            Sets traffic class or type-of-service octet in the IP header for packets sent from this Socket.
            </summary>
        </member>
        <member name="M:java.net.Socket.shutdownInput">
            <summary>
            Places the input stream for this socket at "end of stream".
            </summary>
        </member>
        <member name="M:java.net.Socket.shutdownOutput">
            <summary>
            Disables the output stream for this socket.
            </summary>
        </member>
        <member name="T:java.net.ServerSocket">
            <summary>
            http://java.sun.com/j2se/1.4.2/docs/api/java/net/ServerSocket.html
            </summary>
        </member>
        <member name="M:java.nio.Buffer.capacity">
            <summary>
            Returns this buffer's capacity.
            </summary>
        </member>
        <member name="M:java.nio.Buffer.clear">
            <summary>
            Clears this buffer.
            </summary>
        </member>
        <member name="M:java.nio.Buffer.flip">
            <summary>
            Flips this buffer.
            </summary>
        </member>
        <member name="M:java.nio.Buffer.hasRemaining">
            <summary>
            Tells whether there are any elements between the current position and the limit.
            </summary>
        </member>
        <member name="M:java.nio.Buffer.isReadOnly">
            <summary>
            Tells whether or not this buffer is read-only.
            </summary>
        </member>
        <member name="M:java.nio.Buffer.limit">
            <summary>
            Returns this buffer's limit.
            </summary>
        </member>
        <member name="M:java.nio.Buffer.limit(System.Int32)">
            <summary>
            Sets this buffer's limit.
            </summary>
        </member>
        <member name="M:java.nio.Buffer.mark">
            <summary>
            Sets this buffer's mark at its position.
            </summary>
        </member>
        <member name="M:java.nio.Buffer.position">
            <summary>
            Returns this buffer's position.
            </summary>
        </member>
        <member name="M:java.nio.Buffer.position(System.Int32)">
            <summary>
            Sets this buffer's position.
            </summary>
        </member>
        <member name="M:java.nio.Buffer.remaining">
            <summary>
            Returns the number of elements between the current position and the limit.
            </summary>
        </member>
        <member name="M:java.nio.Buffer.reset">
            <summary>
            Resets this buffer's position to the previously-marked position.
            </summary>
        </member>
        <member name="M:java.nio.Buffer.rewind">
            <summary>
            Rewinds this buffer.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.allocate(System.Int32)">
            <summary>
            Allocates a new byte buffer.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.allocateDirect(System.Int32)">
            <summary>
            Allocates a new direct byte buffer.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.array">
            <summary>
            Returns the byte array that backs this buffer  <i>(optional operation)</i>.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.arrayOffset">
            <summary>
            Returns the offset within this buffer's backing array of the first element of the buffer  <i>(optional operation)</i>.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.asCharBuffer">
            <summary>
            Creates a view of this byte buffer as a char buffer.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.asDoubleBuffer">
            <summary>
            Creates a view of this byte buffer as a double buffer.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.asFloatBuffer">
            <summary>
            Creates a view of this byte buffer as a float buffer.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.asIntBuffer">
            <summary>
            Creates a view of this byte buffer as an int buffer.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.asLongBuffer">
            <summary>
            Creates a view of this byte buffer as a long buffer.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.asReadOnlyBuffer">
            <summary>
            Creates a new, read-only byte buffer that shares this buffer's content.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.asShortBuffer">
            <summary>
            Creates a view of this byte buffer as a short buffer.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.compact">
            <summary>
            Compacts this buffer  <i>(optional operation)</i>.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.compareTo(System.Object)">
            <summary>
            Compares this buffer to another object.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.duplicate">
            <summary>
            Creates a new byte buffer that shares this buffer's content.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.get">
            <summary>
            Relative <i>get</i> method.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.get(System.SByte[])">
            <summary>
            Relative bulk <i>get</i> method.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.get(System.SByte[],System.Int32,System.Int32)">
            <summary>
            Relative bulk <i>get</i> method.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.get(System.Int32)">
            <summary>
            Absolute <i>get</i> method.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.getChar">
            <summary>
            Relative <i>get</i> method for reading a char value.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.getChar(System.Int32)">
            <summary>
            Absolute <i>get</i> method for reading a char value.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.getDouble">
            <summary>
            Relative <i>get</i> method for reading a double value.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.getDouble(System.Int32)">
            <summary>
            Absolute <i>get</i> method for reading a double value.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.getFloat">
            <summary>
            Relative <i>get</i> method for reading a float value.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.getFloat(System.Int32)">
            <summary>
            Absolute <i>get</i> method for reading a float value.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.getInt">
            <summary>
            Relative <i>get</i> method for reading an int value.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.getInt(System.Int32)">
            <summary>
            Absolute <i>get</i> method for reading an int value.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.getLong">
            <summary>
            Relative <i>get</i> method for reading a long value.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.getLong(System.Int32)">
            <summary>
            Absolute <i>get</i> method for reading a long value.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.getShort">
            <summary>
            Relative <i>get</i> method for reading a short value.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.getShort(System.Int32)">
            <summary>
            Absolute <i>get</i> method for reading a short value.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.hasArray">
            <summary>
            Tells whether or not this buffer is backed by an accessible byte array.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.isDirect">
            <summary>
            Tells whether or not this byte buffer is direct.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.order">
            <summary>
            Retrieves this buffer's byte order.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.order(java.nio.ByteOrder)">
            <summary>
            Modifies this buffer's byte order.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.put(System.SByte)">
            <summary>
            Relative <i>put</i> method  <i>(optional operation)</i>.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.put(System.SByte[])">
            <summary>
            Relative bulk <i>put</i> method  <i>(optional operation)</i>.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.put(System.SByte[],System.Int32,System.Int32)">
            <summary>
            Relative bulk <i>put</i> method  <i>(optional operation)</i>.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.put(java.nio.ByteBuffer)">
            <summary>
            Relative bulk <i>put</i> method  <i>(optional operation)</i>.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.put(System.Int32,System.SByte)">
            <summary>
            Absolute <i>put</i> method  <i>(optional operation)</i>.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.putChar(System.Char)">
            <summary>
            Relative <i>put</i> method for writing a char value  <i>(optional operation)</i>.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.putChar(System.Int32,System.Char)">
            <summary>
            Absolute <i>put</i> method for writing a char value  <i>(optional operation)</i>.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.putDouble(System.Double)">
            <summary>
            Relative <i>put</i> method for writing a double value  <i>(optional operation)</i>.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.putDouble(System.Int32,System.Double)">
            <summary>
            Absolute <i>put</i> method for writing a double value  <i>(optional operation)</i>.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.putFloat(System.Single)">
            <summary>
            Relative <i>put</i> method for writing a float value  <i>(optional operation)</i>.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.putFloat(System.Int32,System.Single)">
            <summary>
            Absolute <i>put</i> method for writing a float value  <i>(optional operation)</i>.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.putInt(System.Int32)">
            <summary>
            Relative <i>put</i> method for writing an int value  <i>(optional operation)</i>.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.putInt(System.Int32,System.Int32)">
            <summary>
            Absolute <i>put</i> method for writing an int value  <i>(optional operation)</i>.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.putLong(System.Int32,System.Int64)">
            <summary>
            Absolute <i>put</i> method for writing a long value  <i>(optional operation)</i>.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.putLong(System.Int64)">
            <summary>
            Relative <i>put</i> method for writing a long value  <i>(optional operation)</i>.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.putShort(System.Int32,System.Int16)">
            <summary>
            Absolute <i>put</i> method for writing a short value  <i>(optional operation)</i>.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.putShort(System.Int16)">
            <summary>
            Relative <i>put</i> method for writing a short value  <i>(optional operation)</i>.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.slice">
            <summary>
            Creates a new byte buffer whose content is a shared subsequence of this buffer's content.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.wrap(System.SByte[])">
            <summary>
            Wraps a byte array into a buffer.
            </summary>
        </member>
        <member name="M:java.nio.ByteBuffer.wrap(System.SByte[],System.Int32,System.Int32)">
            <summary>
            Wraps a byte array into a buffer.
            </summary>
        </member>
        <member name="M:java.nio.CharBuffer.allocate(System.Int32)">
            <summary>
            Allocates a new character buffer.
            </summary>
        </member>
        <member name="M:java.nio.CharBuffer.array">
            <summary>
            Returns the character array that backs this buffer  <i>(optional operation)</i>.
            </summary>
        </member>
        <member name="M:java.nio.CharBuffer.arrayOffset">
            <summary>
            Returns the offset within this buffer's backing array of the first element of the buffer  <i>(optional operation)</i>.
            </summary>
        </member>
        <member name="M:java.nio.CharBuffer.asReadOnlyBuffer">
            <summary>
            Creates a new, read-only character buffer that shares this buffer's content.
            </summary>
        </member>
        <member name="M:java.nio.CharBuffer.charAt(System.Int32)">
            <summary>
            Reads the character at the given index relative to the current position.
            </summary>
        </member>
        <member name="M:java.nio.CharBuffer.compact">
            <summary>
            Compacts this buffer  <i>(optional operation)</i>.
            </summary>
        </member>
        <member name="M:java.nio.CharBuffer.compareTo(System.Object)">
            <summary>
            Compares this buffer to another object.
            </summary>
        </member>
        <member name="M:java.nio.CharBuffer.duplicate">
            <summary>
            Creates a new character buffer that shares this buffer's content.
            </summary>
        </member>
        <member name="M:java.nio.CharBuffer.get">
            <summary>
            Relative <i>get</i> method.
            </summary>
        </member>
        <member name="M:java.nio.CharBuffer.get(System.Char[])">
            <summary>
            Relative bulk <i>get</i> method.
            </summary>
        </member>
        <member name="M:java.nio.CharBuffer.get(System.Char[],System.Int32,System.Int32)">
            <summary>
            Relative bulk <i>get</i> method.
            </summary>
        </member>
        <member name="M:java.nio.CharBuffer.get(System.Int32)">
            <summary>
            Absolute <i>get</i> method.
            </summary>
        </member>
        <member name="M:java.nio.CharBuffer.hasArray">
            <summary>
            Tells whether or not this buffer is backed by an accessible character array.
            </summary>
        </member>
        <member name="M:java.nio.CharBuffer.isDirect">
            <summary>
            Tells whether or not this character buffer is direct.
            </summary>
        </member>
        <member name="M:java.nio.CharBuffer.length">
            <summary>
            Returns the length of this character buffer.
            </summary>
        </member>
        <member name="M:java.nio.CharBuffer.order">
            <summary>
            Retrieves this buffer's byte order.
            </summary>
        </member>
        <member name="M:java.nio.CharBuffer.put(System.Char)">
            <summary>
            Relative <i>put</i> method  <i>(optional operation)</i>.
            </summary>
        </member>
        <member name="M:java.nio.CharBuffer.put(System.Char[])">
            <summary>
            Relative bulk <i>put</i> method  <i>(optional operation)</i>.
            </summary>
        </member>
        <member name="M:java.nio.CharBuffer.put(System.Char[],System.Int32,System.Int32)">
            <summary>
            Relative bulk <i>put</i> method  <i>(optional operation)</i>.
            </summary>
        </member>
        <member name="M:java.nio.CharBuffer.put(java.nio.CharBuffer)">
            <summary>
            Relative bulk <i>put</i> method  <i>(optional operation)</i>.
            </summary>
        </member>
        <member name="M:java.nio.CharBuffer.put(System.Int32,System.Char)">
            <summary>
            Absolute <i>put</i> method  <i>(optional operation)</i>.
            </summary>
        </member>
        <member name="M:java.nio.CharBuffer.put(System.String)">
            <summary>
            Relative bulk <i>put</i> method  <i>(optional operation)</i>.
            </summary>
        </member>
        <member name="M:java.nio.CharBuffer.put(System.String,System.Int32,System.Int32)">
            <summary>
            Relative bulk <i>put</i> method  <i>(optional operation)</i>.
            </summary>
        </member>
        <member name="M:java.nio.CharBuffer.slice">
            <summary>
            Creates a new character buffer whose content is a shared subsequence of this buffer's content.
            </summary>
        </member>
        <member name="M:java.nio.CharBuffer.subSequence(System.Int32,System.Int32)">
            <summary>
            Creates a new character buffer that represents the specified subsequence of this buffer, relative to the current position.
            </summary>
        </member>
        <member name="M:java.nio.CharBuffer.wrap(System.Char[])">
            <summary>
            Wraps a character array into a buffer.
            </summary>
        </member>
        <member name="M:java.nio.CharBuffer.wrap(System.Char[],System.Int32,System.Int32)">
            <summary>
            Wraps a character array into a buffer.
            </summary>
        </member>
        <member name="M:java.nio.CharBuffer.wrap(java.lang.CharSequence)">
            <summary>
            Wraps a string into a buffer.
            </summary>
        </member>
        <member name="M:java.nio.CharBuffer.wrap(java.lang.CharSequence,System.Int32,System.Int32)">
            <summary>
            Wraps a character sequence into a buffer.
            </summary>
        </member>
        <member name="M:java.nio.ByteOrder.nativeOrder">
            <summary>
            Retrieves the native byte order of the underlying platform.
            </summary>
        </member>
        <member name="M:java.text.DateFormat.clone">
            <summary>
            Overrides Cloneable
            </summary>
        </member>
        <member name="M:java.text.DateFormat.format(java.util.Date)">
            <summary>
            Formats a Date into a date/time string.
            </summary>
        </member>
        <member name="M:java.text.DateFormat.format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)">
            <summary>
            Formats a Date into a date/time string.
            </summary>
        </member>
        <member name="M:java.text.DateFormat.format(System.Object,java.lang.StringBuffer,java.text.FieldPosition)">
            <summary>
            Overrides Format.
            </summary>
        </member>
        <member name="M:java.text.DateFormat.getAvailableLocales">
            <summary>
            Gets the set of locales for which DateFormats are installed.
            </summary>
        </member>
        <member name="M:java.text.DateFormat.getCalendar">
            <summary>
            Gets the calendar associated with this date/time formatter.
            </summary>
        </member>
        <member name="M:java.text.DateFormat.getDateInstance">
            <summary>
            Gets the date formatter with the default formatting style for the default locale.
            </summary>
        </member>
        <member name="M:java.text.DateFormat.getDateInstance(System.Int32)">
            <summary>
            Gets the date formatter with the given formatting style for the default locale.
            </summary>
        </member>
        <member name="M:java.text.DateFormat.getDateInstance(System.Int32,java.util.Locale)">
            <summary>
            Gets the date formatter with the given formatting style for the given locale.
            </summary>
        </member>
        <member name="M:java.text.DateFormat.getDateTimeInstance">
            <summary>
            Gets the date/time formatter with the default formatting style for the default locale.
            </summary>
        </member>
        <member name="M:java.text.DateFormat.getDateTimeInstance(System.Int32,System.Int32)">
            <summary>
            Gets the date/time formatter with the given date and time formatting styles for the default locale.
            </summary>
        </member>
        <member name="M:java.text.DateFormat.getDateTimeInstance(System.Int32,System.Int32,java.util.Locale)">
            <summary>
            Gets the date/time formatter with the given formatting styles for the given locale.
            </summary>
        </member>
        <member name="M:java.text.DateFormat.getInstance">
            <summary>
            Get a default date/time formatter that uses the SHORT style for both the date and the time.
            </summary>
        </member>
        <member name="M:java.text.DateFormat.getNumberFormat">
            <summary>
            Gets the number formatter which this date/time formatter uses to format and parse a time.
            </summary>
        </member>
        <member name="M:java.text.DateFormat.getTimeInstance">
            <summary>
            Gets the time formatter with the default formatting style for the default locale.
            </summary>
        </member>
        <member name="M:java.text.DateFormat.getTimeInstance(System.Int32)">
            <summary>
            Gets the time formatter with the given formatting style for the default locale.
            </summary>
        </member>
        <member name="M:java.text.DateFormat.getTimeInstance(System.Int32,java.util.Locale)">
            <summary>
            Gets the time formatter with the given formatting style for the given locale.
            </summary>
        </member>
        <member name="M:java.text.DateFormat.getTimeZone">
            <summary>
            Gets the time zone.
            </summary>
        </member>
        <member name="M:java.text.DateFormat.isLenient">
            <summary>
            Tell whether date/time parsing is to be lenient.
            </summary>
        </member>
        <member name="M:java.text.DateFormat.parse(System.String)">
            <summary>
            Parses text from the beginning of the given string to produce a date.
            </summary>
        </member>
        <member name="M:java.text.DateFormat.parse(System.String,java.text.ParsePosition)">
            <summary>
            Parse a date/time string according to the given parse position.
            </summary>
        </member>
        <member name="M:java.text.DateFormat.parseObject(System.String,java.text.ParsePosition)">
            <summary>
            Parses text from a string to produce a <code>Date</code>.
            </summary>
        </member>
        <member name="M:java.text.DateFormat.setCalendar(java.util.Calendar)">
            <summary>
            Set the calendar to be used by this date format.
            </summary>
        </member>
        <member name="M:java.text.DateFormat.setLenient(System.Boolean)">
            <summary>
            Specify whether or not date/time parsing is to be lenient.
            </summary>
        </member>
        <member name="M:java.text.DateFormat.setNumberFormat(java.text.NumberFormat)">
            <summary>
            Allows you to set the number formatter.
            </summary>
        </member>
        <member name="M:java.text.DateFormat.setTimeZone(java.util.TimeZone)">
            <summary>
            Sets the time zone for the calendar of this DateFormat object.
            </summary>
        </member>
        <member name="M:java.text.SimpleDateFormat.applyLocalizedPattern(System.String)">
            <summary>
            Applies the given localized pattern string to this date format.
            </summary>
        </member>
        <member name="M:java.text.SimpleDateFormat.applyPattern(System.String)">
            <summary>
            Applies the given pattern string to this date format.
            </summary>
        </member>
        <member name="M:java.text.SimpleDateFormat.clone">
            <summary>
            Creates a copy of this <code>SimpleDateFormat</code>.
            </summary>
        </member>
        <member name="M:java.text.SimpleDateFormat.format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)">
            <summary>
            Formats the given <code>Date</code> into a date/time string and appends the result to the given <code>StringBuffer</code>.
            </summary>
        </member>
        <member name="M:java.text.SimpleDateFormat.get2DigitYearStart">
            <summary>
            Returns the beginning date of the 100-year period 2-digit years are interpreted as being within.
            </summary>
        </member>
        <member name="M:java.text.SimpleDateFormat.parse(System.String,java.text.ParsePosition)">
            <summary>
            Parses text from a string to produce a <code>Date</code>.
            </summary>
        </member>
        <member name="M:java.text.SimpleDateFormat.set2DigitYearStart(java.util.Date)">
            <summary>
            Sets the 100-year period 2-digit years will be interpreted as being in to begin on the date the user specifies.
            </summary>
        </member>
        <member name="M:java.text.SimpleDateFormat.toLocalizedPattern">
            <summary>
            Returns a localized pattern string describing this date format.
            </summary>
        </member>
        <member name="M:java.text.SimpleDateFormat.toPattern">
            <summary>
            Returns a pattern string describing this date format.
            </summary>
        </member>
        <member name="T:java.util.AbstractMap">
            <summary>
            http://java.sun.com/j2se/1.4.2/docs/api/java/util/AbstractMap.html
            </summary>
        </member>
        <member name="T:java.util.ArrayList">
            <summary>
            http://java.sun.com/j2se/1.4.2/docs/api/java/util/ArrayList.html
            </summary>
        </member>
        <member name="M:java.util.ArrayList.add(System.Int32,System.Object)">
            <summary>
            Inserts the specified element at the specified position in this list.
            </summary>
        </member>
        <member name="M:java.util.ArrayList.add(System.Object)">
            <summary>
            Appends the specified element to the end of this list.
            </summary>
        </member>
        <member name="M:java.util.ArrayList.clear">
            <summary>
            Removes all of the elements from this list.
            </summary>
        </member>
        <member name="M:java.util.ArrayList.clone">
            <summary>
            Returns a shallow copy of this <tt>ArrayList</tt> instance.
            </summary>
        </member>
        <member name="M:java.util.ArrayList.contains(System.Object)">
            <summary>
            Returns <tt>true</tt> if this list contains the specified element.
            </summary>
        </member>
        <member name="M:java.util.ArrayList.ensureCapacity(System.Int32)">
            <summary>
            Increases the capacity of this <tt>ArrayList</tt> instance, if necessary, to ensure  that it can hold at least the number of elements specified by the minimum capacity argument.
            </summary>
        </member>
        <member name="M:java.util.ArrayList.get(System.Int32)">
            <summary>
            Returns the element at the specified position in this list.
            </summary>
        </member>
        <member name="M:java.util.ArrayList.indexOf(System.Object)">
            <summary>
            Searches for the first occurence of the given argument, testing  for equality using the <tt>equals</tt> method.
            </summary>
        </member>
        <member name="M:java.util.ArrayList.isEmpty">
            <summary>
            Tests if this list has no elements.
            </summary>
        </member>
        <member name="M:java.util.ArrayList.lastIndexOf(System.Object)">
            <summary>
            Returns the index of the last occurrence of the specified object in this list.
            </summary>
        </member>
        <member name="M:java.util.ArrayList.remove(System.Int32)">
            <summary>
            Removes the element at the specified position in this list.
            </summary>
        </member>
        <member name="M:java.util.ArrayList.removeRange(System.Int32,System.Int32)">
            <summary>
            Removes from this List all of the elements whose index is between fromIndex, inclusive and toIndex, exclusive.
            </summary>
        </member>
        <member name="M:java.util.ArrayList.set(System.Int32,System.Object)">
            <summary>
            Replaces the element at the specified position in this list with the specified element.
            </summary>
        </member>
        <member name="M:java.util.ArrayList.size">
            <summary>
            Returns the number of elements in this list.
            </summary>
        </member>
        <member name="M:java.util.ArrayList.toArray">
            <summary>
            Returns an array containing all of the elements in this list in the correct order.
            </summary>
        </member>
        <member name="M:java.util.ArrayList.toArray(System.Object[])">
            <summary>
            can only be used with class types, but not with value types
            Returns an array containing all of the elements in this list in the correct order; the runtime type of the returned array is that of the specified array.
            </summary>
        </member>
        <member name="M:java.util.ArrayList.trimToSize">
            <summary>
            Trims the capacity of this <tt>ArrayList</tt> instance to be the list's current size.
            </summary>
        </member>
        <member name="M:java.util.Arrays.asList(System.Object[])">
            <summary>
            Returns a fixed-size list backed by the specified array.
            </summary>
        </member>
        <member name="M:java.util.Arrays.binarySearch(System.SByte[],System.SByte)">
            <summary>
            Searches the specified array of bytes for the specified value using the binary search algorithm.
            </summary>
        </member>
        <member name="M:java.util.Arrays.binarySearch(System.Char[],System.Char)">
            <summary>
            Searches the specified array of chars for the specified value using the binary search algorithm.
            </summary>
        </member>
        <member name="M:java.util.Arrays.binarySearch(System.Double[],System.Double)">
            <summary>
            Searches the specified array of doubles for the specified value using the binary search algorithm.
            </summary>
        </member>
        <member name="M:java.util.Arrays.binarySearch(System.Single[],System.Single)">
            <summary>
            Searches the specified array of floats for the specified value using the binary search algorithm.
            </summary>
        </member>
        <member name="M:java.util.Arrays.binarySearch(System.Int32[],System.Int32)">
            <summary>
            Searches the specified array of ints for the specified value using the binary search algorithm.
            </summary>
        </member>
        <member name="M:java.util.Arrays.binarySearch(System.Int64[],System.Int64)">
            <summary>
            Searches the specified array of longs for the specified value using the binary search algorithm.
            </summary>
        </member>
        <member name="M:java.util.Arrays.binarySearch(System.Object[],System.Object)">
            <summary>
            Searches the specified array for the specified object using the binary search algorithm.
            </summary>
        </member>
        <member name="M:java.util.Arrays.binarySearch(System.Object[],System.Object,java.util.Comparator)">
            <summary>
            Searches the specified array for the specified object using the binary search algorithm.
            </summary>
        </member>
        <member name="M:java.util.Arrays.binarySearch(System.Int16[],System.Int16)">
            <summary>
            Searches the specified array of shorts for the specified value using the binary search algorithm.
            </summary>
        </member>
        <member name="M:java.util.Arrays.fill(System.Boolean[],System.Boolean)">
            <summary>
            Assigns the specified boolean value to each element of the specified array of booleans.
            </summary>
        </member>
        <member name="M:java.util.Arrays.fill(System.Boolean[],System.Int32,System.Int32,System.Boolean)">
            <summary>
            Assigns the specified boolean value to each element of the specified  range of the specified array of booleans.
            </summary>
        </member>
        <member name="M:java.util.Arrays.fill(System.SByte[],System.SByte)">
            <summary>
            Assigns the specified byte value to each element of the specified array of bytes.
            </summary>
        </member>
        <member name="M:java.util.Arrays.fill(System.SByte[],System.Int32,System.Int32,System.SByte)">
            <summary>
            Assigns the specified byte value to each element of the specified  range of the specified array of bytes.
            </summary>
        </member>
        <member name="M:java.util.Arrays.fill(System.Char[],System.Char)">
            <summary>
            Assigns the specified char value to each element of the specified array of chars.
            </summary>
        </member>
        <member name="M:java.util.Arrays.fill(System.Char[],System.Int32,System.Int32,System.Char)">
            <summary>
            Assigns the specified char value to each element of the specified  range of the specified array of chars.
            </summary>
        </member>
        <member name="M:java.util.Arrays.fill(System.Double[],System.Double)">
            <summary>
            Assigns the specified double value to each element of the specified array of doubles.
            </summary>
        </member>
        <member name="M:java.util.Arrays.fill(System.Double[],System.Int32,System.Int32,System.Double)">
            <summary>
            Assigns the specified double value to each element of the specified  range of the specified array of doubles.
            </summary>
        </member>
        <member name="M:java.util.Arrays.fill(System.Single[],System.Single)">
            <summary>
            Assigns the specified float value to each element of the specified array of floats.
            </summary>
        </member>
        <member name="M:java.util.Arrays.fill(System.Single[],System.Int32,System.Int32,System.Single)">
            <summary>
            Assigns the specified float value to each element of the specified  range of the specified array of floats.
            </summary>
        </member>
        <member name="M:java.util.Arrays.fill(System.Int32[],System.Int32)">
            <summary>
            Assigns the specified int value to each element of the specified array of ints.
            </summary>
        </member>
        <member name="M:java.util.Arrays.fill(System.Int32[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Assigns the specified int value to each element of the specified  range of the specified array of ints.
            </summary>
        </member>
        <member name="M:java.util.Arrays.fill(System.Int64[],System.Int32,System.Int32,System.Int64)">
            <summary>
            Assigns the specified long value to each element of the specified  range of the specified array of longs.
            </summary>
        </member>
        <member name="M:java.util.Arrays.fill(System.Int64[],System.Int64)">
            <summary>
            Assigns the specified long value to each element of the specified array of longs.
            </summary>
        </member>
        <member name="M:java.util.Arrays.fill(System.Object[],System.Int32,System.Int32,System.Object)">
            <summary>
            Assigns the specified Object reference to each element of the specified  range of the specified array of Objects.
            </summary>
        </member>
        <member name="M:java.util.Arrays.fill(System.Object[],System.Object)">
            <summary>
            Assigns the specified Object reference to each element of the specified array of Objects.
            </summary>
        </member>
        <member name="M:java.util.Arrays.fill(System.Int16[],System.Int32,System.Int32,System.Int16)">
            <summary>
            Assigns the specified short value to each element of the specified  range of the specified array of shorts.
            </summary>
        </member>
        <member name="M:java.util.Arrays.fill(System.Int16[],System.Int16)">
            <summary>
            Assigns the specified short value to each element of the specified array of shorts.
            </summary>
        </member>
        <member name="M:java.util.Arrays.sort(System.SByte[])">
            <summary>
            Sorts the specified array of bytes into ascending numerical order.
            </summary>
        </member>
        <member name="M:java.util.Arrays.sort(System.SByte[],System.Int32,System.Int32)">
            <summary>
            Sorts the specified range of the specified array of bytes into ascending numerical order.
            </summary>
        </member>
        <member name="M:java.util.Arrays.sort(System.Char[])">
            <summary>
            Sorts the specified array of chars into ascending numerical order.
            </summary>
        </member>
        <member name="M:java.util.Arrays.sort(System.Char[],System.Int32,System.Int32)">
            <summary>
            Sorts the specified range of the specified array of chars into ascending numerical order.
            </summary>
        </member>
        <member name="M:java.util.Arrays.sort(System.Double[])">
            <summary>
            Sorts the specified array of doubles into ascending numerical order.
            </summary>
        </member>
        <member name="M:java.util.Arrays.sort(System.Double[],System.Int32,System.Int32)">
            <summary>
            Sorts the specified range of the specified array of doubles into ascending numerical order.
            </summary>
        </member>
        <member name="M:java.util.Arrays.sort(System.Single[])">
            <summary>
            Sorts the specified array of floats into ascending numerical order.
            </summary>
        </member>
        <member name="M:java.util.Arrays.sort(System.Single[],System.Int32,System.Int32)">
            <summary>
            Sorts the specified range of the specified array of floats into ascending numerical order.
            </summary>
        </member>
        <member name="M:java.util.Arrays.sort(System.Int32[])">
            <summary>
            Sorts the specified array of ints into ascending numerical order.
            </summary>
        </member>
        <member name="M:java.util.Arrays.sort(System.Int32[],System.Int32,System.Int32)">
            <summary>
            Sorts the specified range of the specified array of ints into ascending numerical order.
            </summary>
        </member>
        <member name="M:java.util.Arrays.sort(System.Int64[])">
            <summary>
            Sorts the specified array of longs into ascending numerical order.
            </summary>
        </member>
        <member name="M:java.util.Arrays.sort(System.Int64[],System.Int32,System.Int32)">
            <summary>
            Sorts the specified range of the specified array of longs into ascending numerical order.
            </summary>
        </member>
        <member name="M:java.util.Arrays.sort(System.Object[])">
            <summary>
            Sorts the specified array of objects into ascending order, according to the <i>natural ordering</i> of its elements.
            </summary>
        </member>
        <member name="M:java.util.Arrays.sort(System.Object[],java.util.Comparator)">
            <summary>
            Sorts the specified array of objects according to the order induced by the specified comparator.
            </summary>
        </member>
        <member name="M:java.util.Arrays.sort(System.Object[],System.Int32,System.Int32)">
            <summary>
            Sorts the specified range of the specified array of objects into ascending order, according to the <i>natural ordering</i> of its elements.
            </summary>
        </member>
        <member name="M:java.util.Arrays.sort(System.Object[],System.Int32,System.Int32,java.util.Comparator)">
            <summary>
            Sorts the specified range of the specified array of objects according to the order induced by the specified comparator.
            </summary>
        </member>
        <member name="M:java.util.Arrays.sort(System.Int16[])">
            <summary>
            Sorts the specified array of shorts into ascending numerical order.
            </summary>
        </member>
        <member name="M:java.util.Arrays.sort(System.Int16[],System.Int32,System.Int32)">
            <summary>
            Sorts the specified range of the specified array of shorts into ascending numerical order.
            </summary>
        </member>
        <member name="T:java.util.Comparator">
            <summary>
            A comparison function, which imposes a total ordering on some collection of objects. Comparators can be passed to a sort method (such as Collections.sort) to allow precise control over the sort order. Comparators can also be used to control the order of certain data structures (such as TreeSet or TreeMap).
            </summary>
        </member>
        <member name="M:java.util.Comparator.compare(System.Object,System.Object)">
            <summary>
            Compares its two arguments for order.
            </summary>
        </member>
        <member name="M:java.util.Comparator.equals(System.Object)">
            <summary>
            Indicates whether some other object is "equal to" this Comparator.
            </summary>
        </member>
        <member name="M:java.util.Calendar.add(System.Int32,System.Int32)">
            <summary>
            Date Arithmetic function.
            </summary>
        </member>
        <member name="M:java.util.Calendar.after(System.Object)">
            <summary>
            Compares the time field records.
            </summary>
        </member>
        <member name="M:java.util.Calendar.before(System.Object)">
            <summary>
            Compares the time field records.
            </summary>
        </member>
        <member name="M:java.util.Calendar.clear">
            <summary>
            Clears the values of all the time fields.
            </summary>
        </member>
        <member name="M:java.util.Calendar.clear(System.Int32)">
            <summary>
            Clears the value in the given time field.
            </summary>
        </member>
        <member name="M:java.util.Calendar.clone">
            <summary>
            Overrides Cloneable
            </summary>
        </member>
        <member name="M:java.util.Calendar.complete">
            <summary>
            Fills in any unset fields in the time field list.
            </summary>
        </member>
        <member name="M:java.util.Calendar.computeFields">
            <summary>
            Converts  the current millisecond time value <code>time</code> to field values in <code>fields[]</code>.
            </summary>
        </member>
        <member name="M:java.util.Calendar.computeTime">
            <summary>
            Converts the current field values in <code>fields[]</code> to the millisecond time value <code>time</code>.
            </summary>
        </member>
        <member name="M:java.util.Calendar.get(System.Int32)">
            <summary>
            Gets the value for a given time field.
            </summary>
        </member>
        <member name="M:java.util.Calendar.getActualMaximum(System.Int32)">
            <summary>
            Return the maximum value that this field could have, given the current date.
            </summary>
        </member>
        <member name="M:java.util.Calendar.getActualMinimum(System.Int32)">
            <summary>
            Return the minimum value that this field could have, given the current date.
            </summary>
        </member>
        <member name="M:java.util.Calendar.getAvailableLocales">
            <summary>
            Gets the list of locales for which Calendars are installed.
            </summary>
        </member>
        <member name="M:java.util.Calendar.getFirstDayOfWeek">
            <summary>
            Gets what the first day of the week is; e.g., Sunday in US, Monday in France.
            </summary>
        </member>
        <member name="M:java.util.Calendar.getGreatestMinimum(System.Int32)">
            <summary>
            Gets the highest minimum value for the given field if varies.
            </summary>
        </member>
        <member name="M:java.util.Calendar.getInstance">
            <summary>
            Gets a calendar using the default time zone and locale.
            </summary>
        </member>
        <member name="M:java.util.Calendar.getInstance(java.util.Locale)">
            <summary>
            Gets a calendar using the default time zone and specified locale.
            </summary>
        </member>
        <member name="M:java.util.Calendar.getInstance(java.util.TimeZone)">
            <summary>
            Gets a calendar using the specified time zone and default locale.
            </summary>
        </member>
        <member name="M:java.util.Calendar.getInstance(java.util.TimeZone,java.util.Locale)">
            <summary>
            Gets a calendar with the specified time zone and locale.
            </summary>
        </member>
        <member name="M:java.util.Calendar.getLeastMaximum(System.Int32)">
            <summary>
            Gets the lowest maximum value for the given field if varies.
            </summary>
        </member>
        <member name="M:java.util.Calendar.getMaximum(System.Int32)">
            <summary>
            Gets the maximum value for the given time field.
            </summary>
        </member>
        <member name="M:java.util.Calendar.getMinimalDaysInFirstWeek">
            <summary>
            Gets what the minimal days required in the first week of the year are; e.g., if the first week is defined as one that contains the first day of the first month of a year, getMinimalDaysInFirstWeek returns 1.
            </summary>
        </member>
        <member name="M:java.util.Calendar.getMinimum(System.Int32)">
            <summary>
            Gets the minimum value for the given time field.
            </summary>
        </member>
        <member name="M:java.util.Calendar.getTime">
            <summary>
            Gets this Calendar's current time.
            </summary>
        </member>
        <member name="M:java.util.Calendar.getTimeInMillis">
            <summary>
            Gets this Calendar's current time as a long.
            </summary>
        </member>
        <member name="M:java.util.Calendar.getTimeZone">
            <summary>
            Gets the time zone.
            </summary>
        </member>
        <member name="M:java.util.Calendar.internalGet(System.Int32)">
            <summary>
            Gets the value for a given time field.
            </summary>
        </member>
        <member name="M:java.util.Calendar.isLenient">
            <summary>
            Tell whether date/time interpretation is to be lenient.
            </summary>
        </member>
        <member name="M:java.util.Calendar.isSet(System.Int32)">
            <summary>
            Determines if the given time field has a value set.
            </summary>
        </member>
        <member name="M:java.util.Calendar.roll(System.Int32,System.Boolean)">
            <summary>
            Time Field Rolling function.
            </summary>
        </member>
        <member name="M:java.util.Calendar.roll(System.Int32,System.Int32)">
            <summary>
            Time Field Rolling function.
            </summary>
        </member>
        <member name="M:java.util.Calendar.set(System.Int32,System.Int32)">
            <summary>
            Sets the time field with the given value.
            </summary>
        </member>
        <member name="M:java.util.Calendar.set(System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the values for the fields year, month, and date.
            </summary>
        </member>
        <member name="M:java.util.Calendar.set(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the values for the fields year, month, date, hour, and minute.
            </summary>
        </member>
        <member name="M:java.util.Calendar.set(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the values for the fields year, month, date, hour, minute, and second.
            </summary>
        </member>
        <member name="M:java.util.Calendar.setFirstDayOfWeek(System.Int32)">
            <summary>
            Sets what the first day of the week is; e.g., Sunday in US, Monday in France.
            </summary>
        </member>
        <member name="M:java.util.Calendar.setLenient(System.Boolean)">
            <summary>
            Specify whether or not date/time interpretation is to be lenient.
            </summary>
        </member>
        <member name="M:java.util.Calendar.setMinimalDaysInFirstWeek(System.Int32)">
            <summary>
            Sets what the minimal days required in the first week of the year are; For example, if the first week is defined as one that contains the first day of the first month of a year, call the method with value 1.
            </summary>
        </member>
        <member name="M:java.util.Calendar.setTime(java.util.Date)">
            <summary>
            Sets this Calendar's current time with the given Date.
            </summary>
        </member>
        <member name="M:java.util.Calendar.setTimeInMillis(System.Int64)">
            <summary>
            Sets this Calendar's current time from the given long value.
            </summary>
        </member>
        <member name="M:java.util.Calendar.setTimeZone(java.util.TimeZone)">
            <summary>
            Sets the time zone with the given time zone value.
            </summary>
        </member>
        <member name="T:java.util.Collections">
            <summary>
            This class consists exclusively of static methods that operate on or return collections. It contains polymorphic algorithms that operate on collections, "wrappers", which return a new collection backed by a specified collection, and a few other odds and ends. 
            </summary>
        </member>
        <member name="M:java.util.Collections.binarySearch(java.util.List,System.Object)">
            <summary>
            Searches the specified list for the specified object using the binary search algorithm.
            </summary>
        </member>
        <member name="M:java.util.Collections.binarySearch(java.util.List,System.Object,java.util.Comparator)">
            <summary>
            Searches the specified list for the specified object using the binary search algorithm.
            </summary>
        </member>
        <member name="M:java.util.Collections.copy(java.util.List,java.util.List)">
            <summary>
            Copies all of the elements from one list into another.
            </summary>
        </member>
        <member name="M:java.util.Collections.enumeration(java.util.Collection)">
            <summary>
            Returns an enumeration over the specified collection.
            </summary>
        </member>
        <member name="M:java.util.Collections.fill(java.util.List,System.Object)">
            <summary>
            Replaces all of the elements of the specified list with the specified element.
            </summary>
        </member>
        <member name="M:java.util.Collections.indexOfSubList(java.util.List,java.util.List)">
            <summary>
            Returns the starting position of the first occurrence of the specified target list within the specified source list, or -1 if there is no such occurrence.
            </summary>
        </member>
        <member name="M:java.util.Collections.lastIndexOfSubList(java.util.List,java.util.List)">
            <summary>
            Returns the starting position of the last occurrence of the specified target list within the specified source list, or -1 if there is no such occurrence.
            </summary>
        </member>
        <member name="M:java.util.Collections.list(java.util.Enumeration)">
            <summary>
            Returns an array list containing the elements returned by the specified enumeration in the order they are returned by the enumeration.
            </summary>
        </member>
        <member name="M:java.util.Collections.max(java.util.Collection)">
            <summary>
            Returns the maximum element of the given collection, according to the
            </summary>
        </member>
        <member name="M:java.util.Collections.max(java.util.Collection,java.util.Comparator)">
            <summary>
            Returns the maximum element of the given collection, according to the order induced by the specified comparator.
            </summary>
        </member>
        <member name="M:java.util.Collections.min(java.util.Collection)">
            <summary>
            Returns the minimum element of the given collection, according to the
            </summary>
        </member>
        <member name="M:java.util.Collections.min(java.util.Collection,java.util.Comparator)">
            <summary>
            Returns the minimum element of the given collection, according to the order induced by the specified comparator.
            </summary>
        </member>
        <member name="M:java.util.Collections.nCopies(System.Int32,System.Object)">
            <summary>
            Returns an immutable list consisting of
            </summary>
        </member>
        <member name="M:java.util.Collections.replaceAll(java.util.List,System.Object,System.Object)">
            <summary>
            Replaces all occurrences of one specified value in a list with another.
            </summary>
        </member>
        <member name="M:java.util.Collections.reverse(java.util.List)">
            <summary>
            Reverses the order of the elements in the specified list.
            </summary>
        </member>
        <member name="M:java.util.Collections.reverseOrder">
            <summary>
            Returns a comparator that imposes the reverse of the
            </summary>
        </member>
        <member name="M:java.util.Collections.rotate(java.util.List,System.Int32)">
            <summary>
            Rotates the elements in the specified list by the specified distance.
            </summary>
        </member>
        <member name="M:java.util.Collections.shuffle(java.util.List)">
            <summary>
            Randomly permutes the specified list using a default source of randomness.
            </summary>
        </member>
        <member name="M:java.util.Collections.shuffle(java.util.List,java.util.Random)">
            <summary>
            Randomly permute the specified list using the specified source of randomness.
            </summary>
        </member>
        <member name="M:java.util.Collections.singleton(System.Object)">
            <summary>
            Returns an immutable set containing only the specified object.
            </summary>
        </member>
        <member name="M:java.util.Collections.singletonList(System.Object)">
            <summary>
            Returns an immutable list containing only the specified object.
            </summary>
        </member>
        <member name="M:java.util.Collections.singletonMap(System.Object,System.Object)">
            <summary>
            Returns an immutable map, mapping only the specified key to the specified value.
            </summary>
        </member>
        <member name="M:java.util.Collections.sort(java.util.List)">
            <summary>
            Sorts the specified list into ascending order, according to the
            </summary>
        </member>
        <member name="M:java.util.Collections.sort(java.util.List,java.util.Comparator)">
            <summary>
            Sorts the specified list according to the order induced by the specified comparator.
            </summary>
        </member>
        <member name="M:java.util.Collections.swap(java.util.List,System.Int32,System.Int32)">
            <summary>
            Swaps the elements at the specified positions in the specified list.
            </summary>
        </member>
        <member name="M:java.util.Collections.synchronizedCollection(java.util.Collection)">
            <summary>
            Returns a synchronized (thread-safe) collection backed by the specified collection.
            </summary>
        </member>
        <member name="M:java.util.Collections.synchronizedList(java.util.List)">
            <summary>
            Returns a synchronized (thread-safe) list backed by the specified list.
            </summary>
        </member>
        <member name="M:java.util.Collections.synchronizedMap(java.util.Map)">
            <summary>
            Returns a synchronized (thread-safe) map backed by the specified map.
            </summary>
        </member>
        <member name="M:java.util.Collections.synchronizedSet(java.util.Set)">
            <summary>
            Returns a synchronized (thread-safe) set backed by the specified set.
            </summary>
        </member>
        <member name="M:java.util.Collections.synchronizedSortedMap(java.util.SortedMap)">
            <summary>
            Returns a synchronized (thread-safe) sorted map backed by the specified sorted map.
            </summary>
        </member>
        <member name="M:java.util.Collections.synchronizedSortedSet(java.util.SortedSet)">
            <summary>
            Returns a synchronized (thread-safe) sorted set backed by the specified sorted set.
            </summary>
        </member>
        <member name="M:java.util.Collections.unmodifiableCollection(java.util.Collection)">
            <summary>
            Returns an unmodifiable view of the specified collection.
            </summary>
        </member>
        <member name="M:java.util.Collections.unmodifiableList(java.util.List)">
            <summary>
            Returns an unmodifiable view of the specified list.
            </summary>
        </member>
        <member name="M:java.util.Collections.unmodifiableMap(java.util.Map)">
            <summary>
            Returns an unmodifiable view of the specified map.
            </summary>
        </member>
        <member name="M:java.util.Collections.unmodifiableSet(java.util.Set)">
            <summary>
            Returns an unmodifiable view of the specified set.
            </summary>
        </member>
        <member name="M:java.util.Collections.unmodifiableSortedMap(java.util.SortedMap)">
            <summary>
            Returns an unmodifiable view of the specified sorted map.
            </summary>
        </member>
        <member name="M:java.util.Collections.unmodifiableSortedSet(java.util.SortedSet)">
            <summary>
            Returns an unmodifiable view of the specified sorted set.
            </summary>
        </member>
        <member name="T:java.util.Random">
            <summary>
            
            </summary>
        </member>
        <member name="M:java.util.Random.#ctor">
            <summary>
            Creates a new random number generator.
            </summary>
        </member>
        <member name="M:java.util.Random.#ctor(System.Int64)">
            <summary>
            Creates a new random number generator using a single
            </summary>
        </member>
        <member name="M:java.util.Random.next(System.Int32)">
            <summary>
            Generates the next pseudorandom number.
            </summary>
        </member>
        <member name="M:java.util.Random.nextBoolean">
            <summary>
            Returns the next pseudorandom, uniformly distributed
            </summary>
        </member>
        <member name="M:java.util.Random.nextBytes(System.Byte[])">
            <summary>
            Generates random bytes and places them into a user-supplied byte array.
            </summary>
        </member>
        <member name="M:java.util.Random.nextDouble">
            <summary>
            Returns the next pseudorandom, uniformly distributed
            </summary>
        </member>
        <member name="M:java.util.Random.nextFloat">
            <summary>
            Returns the next pseudorandom, uniformly distributed
            </summary>
        </member>
        <member name="M:java.util.Random.nextGaussian">
            <summary>
            Returns the next pseudorandom, Gaussian ("normally") distributed
            </summary>
        </member>
        <member name="M:java.util.Random.nextInt">
            <summary>
            Returns the next pseudorandom, uniformly distributed
            </summary>
        </member>
        <member name="M:java.util.Random.nextInt(System.Int32)">
            <summary>
            Returns a pseudorandom, uniformly distributed
            </summary>
        </member>
        <member name="M:java.util.Random.nextLong">
            <summary>
            Returns the next pseudorandom, uniformly distributed
            </summary>
        </member>
        <member name="M:java.util.Random.setSeed(System.Int64)">
            <summary>
            Sets the seed of this random number generator using a single
            </summary>
        </member>
        <member name="T:java.util.regex.Matcher">
            <summary>
            An engine that performs match operations on a character sequence by interpreting a Pattern. 
            </summary>
        </member>
        <member name="M:java.util.regex.Matcher.appendReplacement(java.lang.StringBuffer,System.String)">
            <summary>
            Implements a non-terminal append-and-replace step.
            </summary>
        </member>
        <member name="M:java.util.regex.Matcher.appendTail(java.lang.StringBuffer)">
            <summary>
            Implements a terminal append-and-replace step.
            </summary>
        </member>
        <member name="M:java.util.regex.Matcher.end">
            <summary>
            Returns the index of the last character matched, plus one.
            </summary>
        </member>
        <member name="M:java.util.regex.Matcher.end(System.Int32)">
            <summary>
            Returns the index of the last character, plus one, of the subsequence captured by the given group during the previous match operation.
            </summary>
        </member>
        <member name="M:java.util.regex.Matcher.find">
            <summary>
            Attempts to find the next subsequence of the input sequence that matches the pattern.
            </summary>
        </member>
        <member name="M:java.util.regex.Matcher.find(System.Int32)">
            <summary>
            Resets this matcher and then attempts to find the next subsequence of the input sequence that matches the pattern, starting at the specified index.
            </summary>
        </member>
        <member name="M:java.util.regex.Matcher.group">
            <summary>
            Returns the input subsequence matched by the previous match.
            </summary>
        </member>
        <member name="M:java.util.regex.Matcher.group(System.Int32)">
            <summary>
            Returns the input subsequence captured by the given group during the previous match operation.
            </summary>
        </member>
        <member name="M:java.util.regex.Matcher.groupCount">
            <summary>
            Returns the number of capturing groups in this matcher's pattern.
            </summary>
        </member>
        <member name="M:java.util.regex.Matcher.lookingAt">
            <summary>
            Attempts to match the input sequence, starting at the beginning, against the pattern.
            </summary>
        </member>
        <member name="M:java.util.regex.Matcher.matches">
            <summary>
            Attempts to match the entire input sequence against the pattern.
            </summary>
        </member>
        <member name="M:java.util.regex.Matcher.pattern">
            <summary>
            Returns the pattern that is interpreted by this matcher.
            </summary>
        </member>
        <member name="M:java.util.regex.Matcher.replaceAll(System.String)">
            <summary>
            Replaces every subsequence of the input sequence that matches the pattern with the given replacement string.
            </summary>
        </member>
        <member name="M:java.util.regex.Matcher.replaceFirst(System.String)">
            <summary>
            Replaces the first subsequence of the input sequence that matches the pattern with the given replacement string.
            </summary>
        </member>
        <member name="M:java.util.regex.Matcher.reset">
            <summary>
            Resets this matcher.
            </summary>
        </member>
        <member name="M:java.util.regex.Matcher.reset(java.lang.CharSequence)">
            <summary>
            Resets this matcher with a new input sequence.
            </summary>
        </member>
        <member name="M:java.util.regex.Matcher.start">
            <summary>
            Returns the start index of the previous match.
            </summary>
        </member>
        <member name="M:java.util.regex.Matcher.start(System.Int32)">
            <summary>
            Returns the start index of the subsequence captured by the given group during the previous match operation.
            </summary>
        </member>
        <member name="T:java.util.SortedSet">
            <summary>
            public interface SortedSet
            </summary>
        </member>
        <member name="T:java.util.Set">
            <summary>
            http://java.sun.com/j2se/1.4.2/docs/api/java/util/Set.html
            </summary>
        </member>
        <member name="M:java.util.SortedSet.comparator">
            <summary>
            Returns the comparator associated with this sorted set, or
            </summary>
        </member>
        <member name="M:java.util.SortedSet.first">
            <summary>
            Returns the first (lowest) element currently in this sorted set.
            </summary>
        </member>
        <member name="M:java.util.SortedSet.headSet(System.Object)">
            <summary>
            Returns a view of the portion of this sorted set whose elements are strictly less than
            </summary>
        </member>
        <member name="M:java.util.SortedSet.last">
            <summary>
            Returns the last (highest) element currently in this sorted set.
            </summary>
        </member>
        <member name="M:java.util.SortedSet.subSet(System.Object,System.Object)">
            <summary>
            Returns a view of the portion of this sorted set whose elements range from
            </summary>
        </member>
        <member name="M:java.util.SortedSet.tailSet(System.Object)">
            <summary>
            Returns a view of the portion of this sorted set whose elements are greater than or equal to
            </summary>
        </member>
        <member name="T:java.util.SortedMap">
            <summary>
            public interface SortedMap
            </summary>
        </member>
        <member name="T:java.util.Map">
            <summary>
            public interface Map
            </summary>
        </member>
        <member name="M:java.util.Map.clear">
            <summary>
            Removes all mappings from this map (optional operation).
            </summary>
        </member>
        <member name="M:java.util.Map.containsKey(System.Object)">
            <summary>
            Returns
            </summary>
        </member>
        <member name="M:java.util.Map.containsValue(System.Object)">
            <summary>
            Returns
            </summary>
        </member>
        <member name="M:java.util.Map.entrySet">
            <summary>
            Returns a set view of the mappings contained in this map.
            </summary>
        </member>
        <member name="M:java.util.Map.equals(System.Object)">
            <summary>
            Compares the specified object with this map for equality.
            </summary>
        </member>
        <member name="M:java.util.Map.get(System.Object)">
            <summary>
            Returns the value to which this map maps the specified key.
            </summary>
        </member>
        <member name="M:java.util.Map.hashCode">
            <summary>
            Returns the hash code value for this map.
            </summary>
        </member>
        <member name="M:java.util.Map.isEmpty">
            <summary>
            Returns
            </summary>
        </member>
        <member name="M:java.util.Map.keySet">
            <summary>
            Returns a set view of the keys contained in this map.
            </summary>
        </member>
        <member name="M:java.util.Map.put(System.Object,System.Object)">
            <summary>
            Associates the specified value with the specified key in this map (optional operation).
            </summary>
        </member>
        <member name="M:java.util.Map.putAll(java.util.Map)">
            <summary>
            Copies all of the mappings from the specified map to this map (optional operation).
            </summary>
        </member>
        <member name="M:java.util.Map.remove(System.Object)">
            <summary>
            Removes the mapping for this key from this map if it is present (optional operation).
            </summary>
        </member>
        <member name="M:java.util.Map.size">
            <summary>
            Returns the number of key-value mappings in this map.
            </summary>
        </member>
        <member name="M:java.util.Map.values">
            <summary>
            Returns a collection view of the values contained in this map.
            </summary>
        </member>
        <member name="M:java.util.SortedMap.comparator">
            <summary>
            Returns the comparator associated with this sorted map, or
            </summary>
        </member>
        <member name="M:java.util.SortedMap.firstKey">
            <summary>
            Returns the first (lowest) key currently in this sorted map.
            </summary>
        </member>
        <member name="M:java.util.SortedMap.headMap(System.Object)">
            <summary>
            Returns a view of the portion of this sorted map whose keys are strictly less than toKey.
            </summary>
        </member>
        <member name="M:java.util.SortedMap.lastKey">
            <summary>
            Returns the last (highest) key currently in this sorted map.
            </summary>
        </member>
        <member name="M:java.util.SortedMap.subMap(System.Object,System.Object)">
            <summary>
            Returns a view of the portion of this sorted map whose keys range from
            </summary>
        </member>
        <member name="M:java.util.SortedMap.tailMap(System.Object)">
            <summary>
            Returns a view of the portion of this sorted map whose keys are greater than or equal to
            </summary>
        </member>
        <member name="T:java.util.Stack">
            <summary>
            public class Stack extends Vector
            </summary>
        </member>
        <member name="M:java.util.Vector.#ctor">
            <summary>
            Constructs an empty vector so that its internal data array has size
            </summary>
        </member>
        <member name="M:java.util.Vector.#ctor(java.util.Collection)">
            <summary>
            Constructs a vector containing the elements of the specified collection, in the order they are returned by the collection's iterator.
            </summary>
        </member>
        <member name="M:java.util.Vector.#ctor(System.Int32)">
            <summary>
            Constructs an empty vector with the specified initial capacity and with its capacity increment equal to zero.
            </summary>
        </member>
        <member name="M:java.util.Vector.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructs an empty vector with the specified initial capacity and capacity increment.
            </summary>
        </member>
        <member name="M:java.util.Vector.add(System.Int32,System.Object)">
            <summary>
            Inserts the specified element at the specified position in this Vector.
            </summary>
        </member>
        <member name="M:java.util.Vector.add(System.Object)">
            <summary>
            Appends the specified element to the end of this Vector.
            </summary>
        </member>
        <member name="M:java.util.Vector.addAll(java.util.Collection)">
            <summary>
            Appends all of the elements in the specified Collection to the end of this Vector, in the order that they are returned by the specified Collection's Iterator.
            </summary>
        </member>
        <member name="M:java.util.Vector.addAll(System.Int32,java.util.Collection)">
            <summary>
            Inserts all of the elements in in the specified Collection into this Vector at the specified position.
            </summary>
        </member>
        <member name="M:java.util.Vector.addElement(System.Object)">
            <summary>
            Adds the specified component to the end of this vector, increasing its size by one.
            </summary>
        </member>
        <member name="M:java.util.Vector.capacity">
            <summary>
            Returns the current capacity of this vector.
            </summary>
        </member>
        <member name="M:java.util.Vector.clear">
            <summary>
            Removes all of the elements from this Vector.
            </summary>
        </member>
        <member name="M:java.util.Vector.clone">
            <summary>
            Returns a clone of this vector.
            </summary>
        </member>
        <member name="M:java.util.Vector.contains(System.Object)">
            <summary>
            Tests if the specified object is a component in this vector.
            </summary>
        </member>
        <member name="M:java.util.Vector.containsAll(java.util.Collection)">
            <summary>
            Returns true if this Vector contains all of the elements in the specified Collection.
            </summary>
        </member>
        <member name="M:java.util.Vector.copyInto(System.Object[])">
            <summary>
            Copies the components of this vector into the specified array.
            </summary>
        </member>
        <member name="M:java.util.Vector.elementAt(System.Int32)">
            <summary>
            Returns the component at the specified index.
            </summary>
        </member>
        <member name="M:java.util.Vector.elements">
            <summary>
            Returns an enumeration of the components of this vector.
            </summary>
        </member>
        <member name="M:java.util.Vector.ensureCapacity(System.Int32)">
            <summary>
            Increases the capacity of this vector, if necessary, to ensure that it can hold at least the number of components specified by the minimum capacity argument.
            </summary>
        </member>
        <member name="M:java.util.Vector.equals(System.Object)">
            <summary>
            Compares the specified Object with this Vector for equality.
            </summary>
        </member>
        <member name="M:java.util.Vector.firstElement">
            <summary>
            Returns the first component (the item at index
            </summary>
        </member>
        <member name="M:java.util.Vector.get(System.Int32)">
            <summary>
            Returns the element at the specified position in this Vector.
            </summary>
        </member>
        <member name="M:java.util.Vector.hashCode">
            <summary>
            Returns the hash code value for this Vector.
            </summary>
        </member>
        <member name="M:java.util.Vector.indexOf(System.Object)">
            <summary>
            Searches for the first occurence of the given argument, testing for equality using the
            </summary>
        </member>
        <member name="M:java.util.Vector.indexOf(System.Object,System.Int32)">
            <summary>
            Searches for the first occurence of the given argument, beginning the search at
            </summary>
        </member>
        <member name="M:java.util.Vector.insertElementAt(System.Object,System.Int32)">
            <summary>
            Inserts the specified object as a component in this vector at the specified
            </summary>
        </member>
        <member name="M:java.util.Vector.isEmpty">
            <summary>
            Tests if this vector has no components.
            </summary>
        </member>
        <member name="M:java.util.Vector.lastElement">
            <summary>
            Returns the last component of the vector.
            </summary>
        </member>
        <member name="M:java.util.Vector.lastIndexOf(System.Object)">
            <summary>
            Returns the index of the last occurrence of the specified object in this vector.
            </summary>
        </member>
        <member name="M:java.util.Vector.lastIndexOf(System.Object,System.Int32)">
            <summary>
            Searches backwards for the specified object, starting from the specified index, and returns an index to it.
            </summary>
        </member>
        <member name="M:java.util.Vector.remove(System.Int32)">
            <summary>
            Removes the element at the specified position in this Vector.
            </summary>
        </member>
        <member name="M:java.util.Vector.remove(System.Object)">
            <summary>
            Removes the first occurrence of the specified element in this Vector If the Vector does not contain the element, it is unchanged.
            </summary>
        </member>
        <member name="M:java.util.Vector.removeAll(java.util.Collection)">
            <summary>
            Removes from this Vector all of its elements that are contained in the specified Collection.
            </summary>
        </member>
        <member name="M:java.util.Vector.removeAllElements">
            <summary>
            Removes all components from this vector and sets its size to zero.
            </summary>
        </member>
        <member name="M:java.util.Vector.removeElement(System.Object)">
            <summary>
            Removes the first (lowest-indexed) occurrence of the argument from this vector.
            </summary>
        </member>
        <member name="M:java.util.Vector.removeElementAt(System.Int32)">
            <summary>
            Deletes the component at the specified index.
            </summary>
        </member>
        <member name="M:java.util.Vector.removeRange(System.Int32,System.Int32)">
            <summary>
            Removes from this List all of the elements whose index is between fromIndex, inclusive and toIndex, exclusive.
            </summary>
        </member>
        <member name="M:java.util.Vector.retainAll(java.util.Collection)">
            <summary>
            Retains only the elements in this Vector that are contained in the specified Collection.
            </summary>
        </member>
        <member name="M:java.util.Vector.set(System.Int32,System.Object)">
            <summary>
            Replaces the element at the specified position in this Vector with the specified element.
            </summary>
        </member>
        <member name="M:java.util.Vector.setElementAt(System.Object,System.Int32)">
            <summary>
            Sets the component at the specified
            </summary>
        </member>
        <member name="M:java.util.Vector.setSize(System.Int32)">
            <summary>
            Sets the size of this vector.
            </summary>
        </member>
        <member name="M:java.util.Vector.size">
            <summary>
            Returns the number of components in this vector.
            </summary>
        </member>
        <member name="M:java.util.Vector.subList(System.Int32,System.Int32)">
            <summary>
            Returns a view of the portion of this List between fromIndex, inclusive, and toIndex, exclusive.
            </summary>
        </member>
        <member name="M:java.util.Vector.toArray">
            <summary>
            Returns an array containing all of the elements in this Vector in the correct order.
            </summary>
        </member>
        <member name="M:java.util.Vector.toArray(System.Object[])">
            <summary>
            Returns an array containing all of the elements in this Vector in the correct order; the runtime type of the returned array is that of the specified array.
            </summary>
        </member>
        <member name="M:java.util.Vector.toString">
            <summary>
            Returns a string representation of this Vector, containing the String representation of each element.
            </summary>
        </member>
        <member name="M:java.util.Vector.trimToSize">
            <summary>
            Trims the capacity of this vector to be the vector's current size.
            </summary>
        </member>
        <member name="M:java.util.Stack.#ctor">
            <summary>
            Creates an empty Stack.
            </summary>
        </member>
        <member name="M:java.util.Stack.empty">
            <summary>
            Tests if this stack is empty.
            </summary>
        </member>
        <member name="M:java.util.Stack.peek">
            <summary>
            Looks at the object at the top of this stack without removing it from the stack.
            </summary>
        </member>
        <member name="M:java.util.Stack.pop">
            <summary>
            Removes the object at the top of this stack and returns that object as the value of this function.
            </summary>
        </member>
        <member name="M:java.util.Stack.push(System.Object)">
            <summary>
            Pushes an item onto the top of this stack.
            </summary>
        </member>
        <member name="M:java.util.Stack.search(System.Object)">
            <summary>
            Returns the 1-based position where an object is on this stack.
            </summary>
        </member>
        <member name="M:java.util.TimeZone.clone">
            <summary>
            Creates a copy of this <code>TimeZone</code>.
            </summary>
        </member>
        <member name="M:java.util.TimeZone.getAvailableIDs">
            <summary>
            Gets all the available IDs supported.
            </summary>
        </member>
        <member name="M:java.util.TimeZone.getAvailableIDs(System.Int32)">
            <summary>
            Gets the available IDs according to the given time zone offset.
            </summary>
        </member>
        <member name="M:java.util.TimeZone.getDefault">
            <summary>
            Gets the default <code>TimeZone</code> for this host.
            </summary>
        </member>
        <member name="M:java.util.TimeZone.getDisplayName">
            <summary>
            Returns a name of this time zone suitable for presentation to the user in the default locale.
            </summary>
        </member>
        <member name="M:java.util.TimeZone.getDisplayName(System.Boolean,System.Int32)">
            <summary>
            Returns a name of this time zone suitable for presentation to the user in the default locale.
            </summary>
        </member>
        <member name="M:java.util.TimeZone.getDisplayName(System.Boolean,System.Int32,java.util.Locale)">
            <summary>
            Returns a name of this time zone suitable for presentation to the user in the specified locale.
            </summary>
        </member>
        <member name="M:java.util.TimeZone.getDisplayName(java.util.Locale)">
            <summary>
            Returns a name of this time zone suitable for presentation to the user in the specified locale.
            </summary>
        </member>
        <member name="M:java.util.TimeZone.getDSTSavings">
            <summary>
            Returns the amount of time to be added to local standard time to get local wall clock time.
            </summary>
        </member>
        <member name="M:java.util.TimeZone.getID">
            <summary>
            Gets the ID of this time zone.
            </summary>
        </member>
        <member name="M:java.util.TimeZone.getOffset(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the time zone offset, for current date, modified in case of daylight savings.
            </summary>
        </member>
        <member name="M:java.util.TimeZone.getOffset(System.Int64)">
            <summary>
            Returns the offset of this time zone from UTC at the specified date.
            </summary>
        </member>
        <member name="M:java.util.TimeZone.getRawOffset">
            <summary>
            Returns the amount of time in milliseconds to add to UTC to get standard time in this time zone.
            </summary>
        </member>
        <member name="M:java.util.TimeZone.getTimeZone(System.String)">
            <summary>
            Gets the <code>TimeZone</code> for the given ID.
            </summary>
        </member>
        <member name="M:java.util.TimeZone.hasSameRules(java.util.TimeZone)">
            <summary>
            Returns true if this zone has the same rule and offset as another zone.
            </summary>
        </member>
        <member name="M:java.util.TimeZone.inDaylightTime(java.util.Date)">
            <summary>
            Queries if the given date is in daylight savings time in this time zone.
            </summary>
        </member>
        <member name="M:java.util.TimeZone.setDefault(java.util.TimeZone)">
            <summary>
            Sets the <code>TimeZone</code> that is returned by the <code>getDefault</code> method.
            </summary>
        </member>
        <member name="M:java.util.TimeZone.setID(System.String)">
            <summary>
            Sets the time zone ID.
            </summary>
        </member>
        <member name="M:java.util.TimeZone.setRawOffset(System.Int32)">
            <summary>
            Sets the base time zone offset to GMT.
            </summary>
        </member>
        <member name="M:java.util.TimeZone.useDaylightTime">
            <summary>
            Queries if this time zone uses daylight savings time.
            </summary>
        </member>
        <member name="M:java.util.GregorianCalendar.add(System.Int32,System.Int32)">
            <summary>
            Adds the specified (signed) amount of time to the given time field, based on the calendar's rules.
            </summary>
        </member>
        <member name="M:java.util.GregorianCalendar.computeFields">
            <summary>
            Converts UTC as milliseconds to time field values.
            </summary>
        </member>
        <member name="M:java.util.GregorianCalendar.computeTime">
            <summary>
            Overrides Calendar Converts time field values to UTC as milliseconds.
            </summary>
        </member>
        <member name="M:java.util.GregorianCalendar.getGreatestMinimum(System.Int32)">
            <summary>
            Returns highest minimum value for the given field if varies.
            </summary>
        </member>
        <member name="M:java.util.GregorianCalendar.getGregorianChange">
            <summary>
            Gets the Gregorian Calendar change date.
            </summary>
        </member>
        <member name="M:java.util.GregorianCalendar.getLeastMaximum(System.Int32)">
            <summary>
            Returns lowest maximum value for the given field if varies.
            </summary>
        </member>
        <member name="M:java.util.GregorianCalendar.getMaximum(System.Int32)">
            <summary>
            Returns maximum value for the given field.
            </summary>
        </member>
        <member name="M:java.util.GregorianCalendar.getMinimum(System.Int32)">
            <summary>
            Returns minimum value for the given field.
            </summary>
        </member>
        <member name="M:java.util.GregorianCalendar.isLeapYear(System.Int32)">
            <summary>
            Determines if the given year is a leap year.
            </summary>
        </member>
        <member name="M:java.util.GregorianCalendar.roll(System.Int32,System.Boolean)">
            <summary>
            Adds or subtracts (up/down) a single unit of time on the given time field without changing larger fields.
            </summary>
        </member>
        <member name="M:java.util.GregorianCalendar.setGregorianChange(java.util.Date)">
            <summary>
            Sets the GregorianCalendar change date.
            </summary>
        </member>
        <member name="M:java.util.Date.#ctor">
            <summary>
            Allocates a Date object and initializes it so that it represents the time at which it was allocated, measured to the nearest millisecond.
            </summary>
        </member>
        <member name="M:java.util.Date.after(java.util.Date)">
            <summary>
            Tests if this date is after the specified date.
            </summary>
        </member>
        <member name="M:java.util.Date.before(java.util.Date)">
            <summary>
            Tests if this date is before the specified date.
            </summary>
        </member>
        <member name="M:java.util.Date.clone">
            <summary>
            Return a copy of this object.
            </summary>
        </member>
        <member name="M:java.util.Date.compareTo(java.util.Date)">
            <summary>
            Compares two Dates for ordering.
            </summary>
        </member>
        <member name="M:java.util.Date.compareTo(System.Object)">
            <summary>
            Compares this Date to another Object.
            </summary>
        </member>
        <member name="M:java.util.Date.getDate">
            <summary>
            <B>Deprecated.</B> <I>As of JDK version 1.1, replaced by <code>Calendar.get(Calendar.DAY_OF_MONTH)</code>.</I>
            </summary>
        </member>
        <member name="M:java.util.Date.getDay">
            <summary>
            <B>Deprecated.</B> <I>As of JDK version 1.1, replaced by <code>Calendar.get(Calendar.DAY_OF_WEEK)</code>.</I>
            </summary>
        </member>
        <member name="M:java.util.Date.getHours">
            <summary>
            <B>Deprecated.</B> <I>As of JDK version 1.1, replaced by <code>Calendar.get(Calendar.HOUR_OF_DAY)</code>.</I>
            </summary>
        </member>
        <member name="M:java.util.Date.getMinutes">
            <summary>
            <B>Deprecated.</B> <I>As of JDK version 1.1, replaced by <code>Calendar.get(Calendar.MINUTE)</code>.</I>
            </summary>
        </member>
        <member name="M:java.util.Date.getMonth">
            <summary>
            <B>Deprecated.</B> <I>As of JDK version 1.1, replaced by <code>Calendar.get(Calendar.MONTH)</code>.</I>
            </summary>
        </member>
        <member name="M:java.util.Date.getSeconds">
            <summary>
            <B>Deprecated.</B> <I>As of JDK version 1.1, replaced by <code>Calendar.get(Calendar.SECOND)</code>.</I>
            </summary>
        </member>
        <member name="M:java.util.Date.getTime">
            <summary>
            Returns the number of milliseconds since January 1, 1970, 00:00:00 GMT represented by this <tt>Date</tt> object.
            </summary>
        </member>
        <member name="M:java.util.Date.getTimezoneOffset">
            <summary>
            <B>Deprecated.</B> <I>As of JDK version 1.1, replaced by <code>-(Calendar.get(Calendar.ZONE_OFFSET) + Calendar.get(Calendar.DST_OFFSET)) / (60 * 1000)</code>.</I>
            </summary>
        </member>
        <member name="M:java.util.Date.getYear">
            <summary>
            <B>Deprecated.</B> <I>As of JDK version 1.1, replaced by <code>Calendar.get(Calendar.YEAR) - 1900</code>.</I>
            </summary>
        </member>
        <member name="M:java.util.Date.parse(System.String)">
            <summary>
            <B>Deprecated.</B> <I>As of JDK version 1.1, replaced by <code>DateFormat.parse(String s)</code>.</I>
            </summary>
        </member>
        <member name="M:java.util.Date.setDate(System.Int32)">
            <summary>
            <B>Deprecated.</B> <I>As of JDK version 1.1, replaced by <code>Calendar.set(Calendar.DAY_OF_MONTH, int date)</code>.</I>
            </summary>
        </member>
        <member name="M:java.util.Date.setHours(System.Int32)">
            <summary>
            <B>Deprecated.</B> <I>As of JDK version 1.1, replaced by <code>Calendar.set(Calendar.HOUR_OF_DAY, int hours)</code>.</I>
            </summary>
        </member>
        <member name="M:java.util.Date.setMinutes(System.Int32)">
            <summary>
            <B>Deprecated.</B> <I>As of JDK version 1.1, replaced by <code>Calendar.set(Calendar.MINUTE, int minutes)</code>.</I>
            </summary>
        </member>
        <member name="M:java.util.Date.setMonth(System.Int32)">
            <summary>
            <B>Deprecated.</B> <I>As of JDK version 1.1, replaced by <code>Calendar.set(Calendar.MONTH, int month)</code>.</I>
            </summary>
        </member>
        <member name="M:java.util.Date.setSeconds(System.Int32)">
            <summary>
            <B>Deprecated.</B> <I>As of JDK version 1.1, replaced by <code>Calendar.set(Calendar.SECOND, int seconds)</code>.</I>
            </summary>
        </member>
        <member name="M:java.util.Date.setTime(System.Int64)">
            <summary>
            Sets this <tt>Date</tt> object to represent a point in time that is  <tt>time</tt> milliseconds after January 1, 1970 00:00:00 GMT.
            </summary>
        </member>
        <member name="M:java.util.Date.setYear(System.Int32)">
            <summary>
            <B>Deprecated.</B> <I>As of JDK version 1.1, replaced by <code>Calendar.set(Calendar.YEAR, year + 1900)</code>.</I>
            </summary>
        </member>
        <member name="M:java.util.Date.toGMTString">
            <summary>
            <B>Deprecated.</B> <I>As of JDK version 1.1, replaced by <code>DateFormat.format(Date date)</code>, using a GMT <code>TimeZone</code>.</I>
            </summary>
        </member>
        <member name="M:java.util.Date.toLocaleString">
            <summary>
            <B>Deprecated.</B> <I>As of JDK version 1.1, replaced by <code>DateFormat.format(Date date)</code>.</I>
            </summary>
        </member>
        <member name="M:java.util.Date.UTC(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            <B>Deprecated.</B> <I>As of JDK version 1.1, replaced by <code>Calendar.set(year + 1900, month, date, hrs, min, sec)</code> or <code>GregorianCalendar(year + 1900, month, date, hrs, min, sec)</code>, using a UTC <code>TimeZone</code>, followed by <code>Calendar.getTime().getTime()</code>.</I>
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.addHandler(java.util.logging.Handler)">
            <summary>
            Add a log Handler to receive logging messages.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.config(System.String)">
            <summary>
            Log a CONFIG message.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.entering(System.String,System.String)">
            <summary>
            Log a method entry.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.entering(System.String,System.String,System.Object)">
            <summary>
            Log a method entry, with one parameter.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.entering(System.String,System.String,System.Object[])">
            <summary>
            Log a method entry, with an array of parameters.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.exiting(System.String,System.String)">
            <summary>
            Log a method return.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.exiting(System.String,System.String,System.Object)">
            <summary>
            Log a method return, with result object.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.fine(System.String)">
            <summary>
            Log a FINE message.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.finer(System.String)">
            <summary>
            Log a FINER message.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.finest(System.String)">
            <summary>
            Log a FINEST message.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.getAnonymousLogger">
            <summary>
            Create an anonymous Logger.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.getAnonymousLogger(System.String)">
            <summary>
            Create an anonymous Logger.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.getFilter">
            <summary>
            Get the current filter for this Logger.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.getHandlers">
            <summary>
            Get the Handlers associated with this logger.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.getLevel">
            <summary>
            Get the log Level that has been specified for this Logger.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.getLogger(System.String)">
            <summary>
            Find or create a logger for a named subsystem.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.getLogger(System.String,System.String)">
            <summary>
            Find or create a logger for a named subsystem.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.getName">
            <summary>
            Get the name for this logger.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.getParent">
            <summary>
            Return the parent for this Logger.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.getResourceBundle">
            <summary>
            Retrieve the localization resource bundle for this logger for the current default locale.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.getResourceBundleName">
            <summary>
            Retrieve the localization resource bundle name for this logger.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.getUseParentHandlers">
            <summary>
            Discover whether or not this logger is sending its output to its parent logger.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.info(System.String)">
            <summary>
            Log an INFO message.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.isLoggable(java.util.logging.Level)">
            <summary>
            Check if a message of the given level would actually be logged by this logger.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.log(java.util.logging.Level,System.String)">
            <summary>
            Log a message, with no arguments.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.log(java.util.logging.Level,System.String,System.Object)">
            <summary>
            Log a message, with one object parameter.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.log(java.util.logging.Level,System.String,System.Object[])">
            <summary>
            Log a message, with an array of object arguments.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.log(java.util.logging.Level,System.String,java.lang.Throwable)">
            <summary>
            Log a message, with associated Throwable information.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.log(java.util.logging.LogRecord)">
            <summary>
            Log a LogRecord.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.logp(java.util.logging.Level,System.String,System.String,System.String)">
            <summary>
            Log a message, specifying source class and method, with no arguments.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.logp(java.util.logging.Level,System.String,System.String,System.String,System.Object)">
            <summary>
            Log a message, specifying source class and method, with a single object parameter to the log message.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.logp(java.util.logging.Level,System.String,System.String,System.String,System.Object[])">
            <summary>
            Log a message, specifying source class and method, with an array of object arguments.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.logp(java.util.logging.Level,System.String,System.String,System.String,java.lang.Throwable)">
            <summary>
            Log a message, specifying source class and method, with associated Throwable information.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.logrb(java.util.logging.Level,System.String,System.String,System.String,System.String)">
            <summary>
            Log a message, specifying source class, method, and resource bundle name with no arguments.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.logrb(java.util.logging.Level,System.String,System.String,System.String,System.String,System.Object)">
            <summary>
            Log a message, specifying source class, method, and resource bundle name, with a single object parameter to the log message.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.logrb(java.util.logging.Level,System.String,System.String,System.String,System.String,System.Object[])">
            <summary>
            Log a message, specifying source class, method, and resource bundle name, with an array of object arguments.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.logrb(java.util.logging.Level,System.String,System.String,System.String,System.String,java.lang.Throwable)">
            <summary>
            Log a message, specifying source class, method, and resource bundle name, with associated Throwable information.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.removeHandler(java.util.logging.Handler)">
            <summary>
            Remove a log Handler.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.setFilter(java.util.logging.Filter)">
            <summary>
            Set a filter to control output on this Logger.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.setLevel(java.util.logging.Level)">
            <summary>
            Set the log level specifying which message levels will be logged by this logger.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.setParent(java.util.logging.Logger)">
            <summary>
            Set the parent for this Logger.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.setUseParentHandlers(System.Boolean)">
            <summary>
            Specify whether or not this logger should send its output to it's parent Logger.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.severe(System.String)">
            <summary>
            Log a SEVERE message.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.throwing(System.String,System.String,java.lang.Throwable)">
            <summary>
            Log throwing an exception.
            </summary>
        </member>
        <member name="M:java.util.logging.Logger.warning(System.String)">
            <summary>
            Log a WARNING message.
            </summary>
        </member>
        <member name="M:org.xml.sax.ContentHandler.characters(System.Char[],System.Int32,System.Int32)">
            <summary>
            Receive notification of character data.
            </summary>
        </member>
        <member name="M:org.xml.sax.ContentHandler.endDocument">
            <summary>
            Receive notification of the end of a document.
            </summary>
        </member>
        <member name="M:org.xml.sax.ContentHandler.endElement(System.String,System.String,System.String)">
            <summary>
            Receive notification of the end of an element.
            </summary>
        </member>
        <member name="M:org.xml.sax.ContentHandler.endPrefixMapping(System.String)">
            <summary>
            End the scope of a prefix-URI mapping.
            </summary>
        </member>
        <member name="M:org.xml.sax.ContentHandler.ignorableWhitespace(System.Char[],System.Int32,System.Int32)">
            <summary>
            Receive notification of ignorable whitespace in element content.
            </summary>
        </member>
        <member name="M:org.xml.sax.ContentHandler.processingInstruction(System.String,System.String)">
            <summary>
            Receive notification of a processing instruction.
            </summary>
        </member>
        <member name="M:org.xml.sax.ContentHandler.setDocumentLocator(org.xml.sax.Locator)">
            <summary>
            Receive an object for locating the origin of SAX document events.
            </summary>
        </member>
        <member name="M:org.xml.sax.ContentHandler.skippedEntity(System.String)">
            <summary>
            Receive notification of a skipped entity.
            </summary>
        </member>
        <member name="M:org.xml.sax.ContentHandler.startDocument">
            <summary>
            Receive notification of the beginning of a document.
            </summary>
        </member>
        <member name="M:org.xml.sax.ContentHandler.startElement(System.String,System.String,System.String,org.xml.sax.Attributes)">
            <summary>
            Receive notification of the beginning of an element.
            </summary>
        </member>
        <member name="M:org.xml.sax.ContentHandler.startPrefixMapping(System.String,System.String)">
            <summary>
            Begin the scope of a prefix-URI Namespace mapping.
            </summary>
        </member>
        <member name="T:org.xml.sax.Attributes">
            <summary>
            Interface for a list of XML attributes. 
            </summary>
        </member>
        <member name="M:org.xml.sax.Attributes.getIndex(System.String)">
            <summary>
            Look up the index of an attribute by XML 1.0 qualified name.
            </summary>
        </member>
        <member name="M:org.xml.sax.Attributes.getIndex(System.String,System.String)">
            <summary>
            Look up the index of an attribute by Namespace name.
            </summary>
        </member>
        <member name="M:org.xml.sax.Attributes.getLength">
            <summary>
            Return the number of attributes in the list.
            </summary>
        </member>
        <member name="M:org.xml.sax.Attributes.getLocalName(System.Int32)">
            <summary>
            Look up an attribute's local name by index.
            </summary>
        </member>
        <member name="M:org.xml.sax.Attributes.getQName(System.Int32)">
            <summary>
            Look up an attribute's XML 1.0 qualified name by index.
            </summary>
        </member>
        <member name="M:org.xml.sax.Attributes.getType(System.Int32)">
            <summary>
            Look up an attribute's type by index.
            </summary>
        </member>
        <member name="M:org.xml.sax.Attributes.getType(System.String)">
            <summary>
            Look up an attribute's type by XML 1.0 qualified name.
            </summary>
        </member>
        <member name="M:org.xml.sax.Attributes.getType(System.String,System.String)">
            <summary>
            Look up an attribute's type by Namespace name.
            </summary>
        </member>
        <member name="M:org.xml.sax.Attributes.getURI(System.Int32)">
            <summary>
            Look up an attribute's Namespace URI by index.
            </summary>
        </member>
        <member name="M:org.xml.sax.Attributes.getValue(System.Int32)">
            <summary>
            Look up an attribute's value by index.
            </summary>
        </member>
        <member name="M:org.xml.sax.Attributes.getValue(System.String)">
            <summary>
            Look up an attribute's value by XML 1.0 qualified name.
            </summary>
        </member>
        <member name="M:org.xml.sax.Attributes.getValue(System.String,System.String)">
            <summary>
            Look up an attribute's value by Namespace name.
            </summary>
        </member>
        <member name="M:org.xml.sax.InputSource.getByteStream">
            <summary>
            Get the byte stream for this input source.
            </summary>
        </member>
        <member name="M:org.xml.sax.InputSource.getCharacterStream">
            <summary>
            Get the character stream for this input source.
            </summary>
        </member>
        <member name="M:org.xml.sax.InputSource.getEncoding">
            <summary>
            Get the character encoding for a byte stream or URI.
            </summary>
        </member>
        <member name="M:org.xml.sax.InputSource.getPublicId">
            <summary>
            Get the public identifier for this input source.
            </summary>
        </member>
        <member name="M:org.xml.sax.InputSource.getSystemId">
            <summary>
            Get the system identifier for this input source.
            </summary>
        </member>
        <member name="M:org.xml.sax.InputSource.setByteStream(java.io.InputStream)">
            <summary>
            Set the byte stream for this input source.
            </summary>
        </member>
        <member name="M:org.xml.sax.InputSource.setCharacterStream(java.io.Reader)">
            <summary>
            Set the character stream for this input source.
            </summary>
        </member>
        <member name="M:org.xml.sax.InputSource.setEncoding(System.String)">
            <summary>
            Set the character encoding, if known.
            </summary>
        </member>
        <member name="M:org.xml.sax.InputSource.setPublicId(System.String)">
            <summary>
            Set the public identifier for this input source.
            </summary>
        </member>
        <member name="M:org.xml.sax.InputSource.setSystemId(System.String)">
            <summary>
            Set the system identifier for this input source.
            </summary>
        </member>
        <member name="M:org.xml.sax.helpers.XMLReaderFactory.createXMLReader">
            <summary>
            Attempt to create an XMLReader from system defaults.
            </summary>
        </member>
        <member name="M:org.xml.sax.helpers.XMLReaderFactory.createXMLReader(System.String)">
            <summary>
            Attempt to create an XML reader from a class name.
            </summary>
        </member>
        <member name="M:org.xml.sax.XMLReader.getContentHandler">
            <summary>
            Return the current content handler.
            </summary>
        </member>
        <member name="M:org.xml.sax.XMLReader.getDTDHandler">
            <summary>
            Return the current DTD handler.
            </summary>
        </member>
        <member name="M:org.xml.sax.XMLReader.getEntityResolver">
            <summary>
            Return the current entity resolver.
            </summary>
        </member>
        <member name="M:org.xml.sax.XMLReader.getErrorHandler">
            <summary>
            Return the current error handler.
            </summary>
        </member>
        <member name="M:org.xml.sax.XMLReader.getFeature(System.String)">
            <summary>
            Look up the value of a feature flag.
            </summary>
        </member>
        <member name="M:org.xml.sax.XMLReader.getProperty(System.String)">
            <summary>
            Look up the value of a property.
            </summary>
        </member>
        <member name="M:org.xml.sax.XMLReader.parse(org.xml.sax.InputSource)">
            <summary>
            Parse an XML document.
            </summary>
        </member>
        <member name="M:org.xml.sax.XMLReader.parse(System.String)">
            <summary>
            Parse an XML document from a system identifier (URI).
            </summary>
        </member>
        <member name="M:org.xml.sax.XMLReader.setContentHandler(org.xml.sax.ContentHandler)">
            <summary>
            Allow an application to register a content event handler.
            </summary>
        </member>
        <member name="M:org.xml.sax.XMLReader.setDTDHandler(org.xml.sax.DTDHandler)">
            <summary>
            Allow an application to register a DTD event handler.
            </summary>
        </member>
        <member name="M:org.xml.sax.XMLReader.setEntityResolver(org.xml.sax.EntityResolver)">
            <summary>
            Allow an application to register an entity resolver.
            </summary>
        </member>
        <member name="M:org.xml.sax.XMLReader.setErrorHandler(org.xml.sax.ErrorHandler)">
            <summary>
            Allow an application to register an error event handler.
            </summary>
        </member>
        <member name="M:org.xml.sax.XMLReader.setFeature(System.String,System.Boolean)">
            <summary>
            Set the value of a feature flag.
            </summary>
        </member>
        <member name="M:org.xml.sax.XMLReader.setProperty(System.String,System.Object)">
            <summary>
            Set the value of a property.
            </summary>
        </member>
        <member name="M:org.xml.sax.helpers.DefaultHandler.characters(System.Char[],System.Int32,System.Int32)">
            <summary>
            Receive notification of character data inside an element.
            </summary>
        </member>
        <member name="M:org.xml.sax.helpers.DefaultHandler.endDocument">
            <summary>
            Receive notification of the end of the document.
            </summary>
        </member>
        <member name="M:org.xml.sax.helpers.DefaultHandler.endElement(System.String,System.String,System.String)">
            <summary>
            Receive notification of the end of an element.
            </summary>
        </member>
        <member name="M:org.xml.sax.helpers.DefaultHandler.endPrefixMapping(System.String)">
            <summary>
            Receive notification of the end of a Namespace mapping.
            </summary>
        </member>
        <member name="M:org.xml.sax.helpers.DefaultHandler.error(org.xml.sax.helpers.SAXParseException)">
            <summary>
            Receive notification of a recoverable parser error.
            </summary>
        </member>
        <member name="M:org.xml.sax.helpers.DefaultHandler.fatalError(org.xml.sax.helpers.SAXParseException)">
            <summary>
            Report a fatal XML parsing error.
            </summary>
        </member>
        <member name="M:org.xml.sax.helpers.DefaultHandler.ignorableWhitespace(System.Char[],System.Int32,System.Int32)">
            <summary>
            Receive notification of ignorable whitespace in element content.
            </summary>
        </member>
        <member name="M:org.xml.sax.helpers.DefaultHandler.notationDecl(System.String,System.String,System.String)">
            <summary>
            Receive notification of a notation declaration.
            </summary>
        </member>
        <member name="M:org.xml.sax.helpers.DefaultHandler.processingInstruction(System.String,System.String)">
            <summary>
            Receive notification of a processing instruction.
            </summary>
        </member>
        <member name="M:org.xml.sax.helpers.DefaultHandler.resolveEntity(System.String,System.String)">
            <summary>
            Resolve an external entity.
            </summary>
        </member>
        <member name="M:org.xml.sax.helpers.DefaultHandler.setDocumentLocator(org.xml.sax.Locator)">
            <summary>
            Receive a Locator object for document events.
            </summary>
        </member>
        <member name="M:org.xml.sax.helpers.DefaultHandler.skippedEntity(System.String)">
            <summary>
            Receive notification of a skipped entity.
            </summary>
        </member>
        <member name="M:org.xml.sax.helpers.DefaultHandler.startDocument">
            <summary>
            Receive notification of the beginning of the document.
            </summary>
        </member>
        <member name="M:org.xml.sax.helpers.DefaultHandler.startElement(System.String,System.String,System.String,org.xml.sax.Attributes)">
            <summary>
            Receive notification of the start of an element.
            </summary>
        </member>
        <member name="M:org.xml.sax.helpers.DefaultHandler.startPrefixMapping(System.String,System.String)">
            <summary>
            Receive notification of the start of a Namespace mapping.
            </summary>
        </member>
        <member name="M:org.xml.sax.helpers.DefaultHandler.unparsedEntityDecl(System.String,System.String,System.String,System.String)">
            <summary>
            Receive notification of an unparsed entity declaration.
            </summary>
        </member>
        <member name="M:org.xml.sax.helpers.DefaultHandler.warning(org.xml.sax.helpers.SAXParseException)">
            <summary>
            Receive notification of a parser warning.
            </summary>
        </member>
        <member name="M:javax.common.runtime.Console.WriteBytes(System.SByte[],System.String,System.Boolean)">
            <summary>
            writes bytes to file
            </summary>
            <param name="cdata"></param>
            <param name="p"></param>
        </member>
        <member name="M:javax.common.runtime.Convert.ToHexString(System.Int32)">
            <summary>
            converts int to a hexstring, and adds padding zeros if uneven number
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:javax.common.runtime.Convert.ToInt32(System.SByte[],System.Int32)">
            <summary>
            converts 1 to 4 bytes from an array to an int32
            </summary>
            <param name="b"></param>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="M:javax.common.runtime.Convert.ToInt32Array(java.util.ArrayList)">
            <summary>
            converts object list to int array
            </summary>
            <param name="u"></param>
            <returns></returns>
        </member>
    </members>
</doc>
