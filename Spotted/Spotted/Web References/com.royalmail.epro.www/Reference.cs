//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.239.
// 
#pragma warning disable 1591

namespace Spotted.com.royalmail.epro.www {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="EProImportServiceSoap", Namespace="urn:schemas-royalmail-com/webservice/epro")]
    public partial class EProImportService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private Authentication authenticationValueField;
        
        private System.Threading.SendOrPostCallback MailingItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback BulkImportMailingItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateDocketsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DSACreateDocketsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DSABulkImportMailingItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback DSABulkAppendMailingItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDSATransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepartmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFeesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMagazinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCountriesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public EProImportService() {
            this.Url = global::Spotted.Properties.Settings.Default.Spotted_com_royalmail_epro_www_EProImportService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public Authentication AuthenticationValue {
            get {
                return this.authenticationValueField;
            }
            set {
                this.authenticationValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event MailingItemCompletedEventHandler MailingItemCompleted;
        
        /// <remarks/>
        public event BulkImportMailingItemCompletedEventHandler BulkImportMailingItemCompleted;
        
        /// <remarks/>
        public event CreateDocketsCompletedEventHandler CreateDocketsCompleted;
        
        /// <remarks/>
        public event DSACreateDocketsCompletedEventHandler DSACreateDocketsCompleted;
        
        /// <remarks/>
        public event DSABulkImportMailingItemCompletedEventHandler DSABulkImportMailingItemCompleted;
        
        /// <remarks/>
        public event DSABulkAppendMailingItemCompletedEventHandler DSABulkAppendMailingItemCompleted;
        
        /// <remarks/>
        public event DeleteTransactionCompletedEventHandler DeleteTransactionCompleted;
        
        /// <remarks/>
        public event DeleteDSATransactionCompletedEventHandler DeleteDSATransactionCompleted;
        
        /// <remarks/>
        public event GetAccountsCompletedEventHandler GetAccountsCompleted;
        
        /// <remarks/>
        public event GetServicesCompletedEventHandler GetServicesCompleted;
        
        /// <remarks/>
        public event GetDepartmentsCompletedEventHandler GetDepartmentsCompleted;
        
        /// <remarks/>
        public event GetFeesCompletedEventHandler GetFeesCompleted;
        
        /// <remarks/>
        public event GetMagazinesCompletedEventHandler GetMagazinesCompleted;
        
        /// <remarks/>
        public event GetCountriesCompletedEventHandler GetCountriesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:schemas-royalmail-com/webservice/epro/MailingItem", RequestNamespace="urn:schemas-royalmail-com/webservice/epro", ResponseNamespace="urn:schemas-royalmail-com/webservice/epro", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionInfo MailingItem(string[] EproCode) {
            object[] results = this.Invoke("MailingItem", new object[] {
                        EproCode});
            return ((TransactionInfo)(results[0]));
        }
        
        /// <remarks/>
        public void MailingItemAsync(string[] EproCode) {
            this.MailingItemAsync(EproCode, null);
        }
        
        /// <remarks/>
        public void MailingItemAsync(string[] EproCode, object userState) {
            if ((this.MailingItemOperationCompleted == null)) {
                this.MailingItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMailingItemOperationCompleted);
            }
            this.InvokeAsync("MailingItem", new object[] {
                        EproCode}, this.MailingItemOperationCompleted, userState);
        }
        
        private void OnMailingItemOperationCompleted(object arg) {
            if ((this.MailingItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MailingItemCompleted(this, new MailingItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:schemas-royalmail-com/webservice/epro/BulkImportMailingItem", RequestNamespace="urn:schemas-royalmail-com/webservice/epro", ResponseNamespace="urn:schemas-royalmail-com/webservice/epro", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionInfo BulkImportMailingItem(string[] EproCode) {
            object[] results = this.Invoke("BulkImportMailingItem", new object[] {
                        EproCode});
            return ((TransactionInfo)(results[0]));
        }
        
        /// <remarks/>
        public void BulkImportMailingItemAsync(string[] EproCode) {
            this.BulkImportMailingItemAsync(EproCode, null);
        }
        
        /// <remarks/>
        public void BulkImportMailingItemAsync(string[] EproCode, object userState) {
            if ((this.BulkImportMailingItemOperationCompleted == null)) {
                this.BulkImportMailingItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBulkImportMailingItemOperationCompleted);
            }
            this.InvokeAsync("BulkImportMailingItem", new object[] {
                        EproCode}, this.BulkImportMailingItemOperationCompleted, userState);
        }
        
        private void OnBulkImportMailingItemOperationCompleted(object arg) {
            if ((this.BulkImportMailingItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BulkImportMailingItemCompleted(this, new BulkImportMailingItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:schemas-royalmail-com/webservice/epro/CreateDockets", RequestNamespace="urn:schemas-royalmail-com/webservice/epro", ResponseNamespace="urn:schemas-royalmail-com/webservice/epro", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionInfo CreateDockets(string TransactionId) {
            object[] results = this.Invoke("CreateDockets", new object[] {
                        TransactionId});
            return ((TransactionInfo)(results[0]));
        }
        
        /// <remarks/>
        public void CreateDocketsAsync(string TransactionId) {
            this.CreateDocketsAsync(TransactionId, null);
        }
        
        /// <remarks/>
        public void CreateDocketsAsync(string TransactionId, object userState) {
            if ((this.CreateDocketsOperationCompleted == null)) {
                this.CreateDocketsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDocketsOperationCompleted);
            }
            this.InvokeAsync("CreateDockets", new object[] {
                        TransactionId}, this.CreateDocketsOperationCompleted, userState);
        }
        
        private void OnCreateDocketsOperationCompleted(object arg) {
            if ((this.CreateDocketsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateDocketsCompleted(this, new CreateDocketsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:schemas-royalmail-com/webservice/epro/DSACreateDockets", RequestNamespace="urn:schemas-royalmail-com/webservice/epro", ResponseNamespace="urn:schemas-royalmail-com/webservice/epro", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionInfo DSACreateDockets(string TransactionId) {
            object[] results = this.Invoke("DSACreateDockets", new object[] {
                        TransactionId});
            return ((TransactionInfo)(results[0]));
        }
        
        /// <remarks/>
        public void DSACreateDocketsAsync(string TransactionId) {
            this.DSACreateDocketsAsync(TransactionId, null);
        }
        
        /// <remarks/>
        public void DSACreateDocketsAsync(string TransactionId, object userState) {
            if ((this.DSACreateDocketsOperationCompleted == null)) {
                this.DSACreateDocketsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDSACreateDocketsOperationCompleted);
            }
            this.InvokeAsync("DSACreateDockets", new object[] {
                        TransactionId}, this.DSACreateDocketsOperationCompleted, userState);
        }
        
        private void OnDSACreateDocketsOperationCompleted(object arg) {
            if ((this.DSACreateDocketsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DSACreateDocketsCompleted(this, new DSACreateDocketsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:schemas-royalmail-com/webservice/epro/DSABulkImportMailingItem", RequestNamespace="urn:schemas-royalmail-com/webservice/epro", ResponseNamespace="urn:schemas-royalmail-com/webservice/epro", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionInfo DSABulkImportMailingItem(string[] EproCode) {
            object[] results = this.Invoke("DSABulkImportMailingItem", new object[] {
                        EproCode});
            return ((TransactionInfo)(results[0]));
        }
        
        /// <remarks/>
        public void DSABulkImportMailingItemAsync(string[] EproCode) {
            this.DSABulkImportMailingItemAsync(EproCode, null);
        }
        
        /// <remarks/>
        public void DSABulkImportMailingItemAsync(string[] EproCode, object userState) {
            if ((this.DSABulkImportMailingItemOperationCompleted == null)) {
                this.DSABulkImportMailingItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDSABulkImportMailingItemOperationCompleted);
            }
            this.InvokeAsync("DSABulkImportMailingItem", new object[] {
                        EproCode}, this.DSABulkImportMailingItemOperationCompleted, userState);
        }
        
        private void OnDSABulkImportMailingItemOperationCompleted(object arg) {
            if ((this.DSABulkImportMailingItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DSABulkImportMailingItemCompleted(this, new DSABulkImportMailingItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:schemas-royalmail-com/webservice/epro/DSABulkAppendMailingItem", RequestNamespace="urn:schemas-royalmail-com/webservice/epro", ResponseNamespace="urn:schemas-royalmail-com/webservice/epro", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionInfo DSABulkAppendMailingItem(string TransactionId, string[] EproCode) {
            object[] results = this.Invoke("DSABulkAppendMailingItem", new object[] {
                        TransactionId,
                        EproCode});
            return ((TransactionInfo)(results[0]));
        }
        
        /// <remarks/>
        public void DSABulkAppendMailingItemAsync(string TransactionId, string[] EproCode) {
            this.DSABulkAppendMailingItemAsync(TransactionId, EproCode, null);
        }
        
        /// <remarks/>
        public void DSABulkAppendMailingItemAsync(string TransactionId, string[] EproCode, object userState) {
            if ((this.DSABulkAppendMailingItemOperationCompleted == null)) {
                this.DSABulkAppendMailingItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDSABulkAppendMailingItemOperationCompleted);
            }
            this.InvokeAsync("DSABulkAppendMailingItem", new object[] {
                        TransactionId,
                        EproCode}, this.DSABulkAppendMailingItemOperationCompleted, userState);
        }
        
        private void OnDSABulkAppendMailingItemOperationCompleted(object arg) {
            if ((this.DSABulkAppendMailingItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DSABulkAppendMailingItemCompleted(this, new DSABulkAppendMailingItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:schemas-royalmail-com/webservice/epro/DeleteTransaction", RequestNamespace="urn:schemas-royalmail-com/webservice/epro", ResponseNamespace="urn:schemas-royalmail-com/webservice/epro", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionInfo DeleteTransaction(string TransactionId) {
            object[] results = this.Invoke("DeleteTransaction", new object[] {
                        TransactionId});
            return ((TransactionInfo)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTransactionAsync(string TransactionId) {
            this.DeleteTransactionAsync(TransactionId, null);
        }
        
        /// <remarks/>
        public void DeleteTransactionAsync(string TransactionId, object userState) {
            if ((this.DeleteTransactionOperationCompleted == null)) {
                this.DeleteTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTransactionOperationCompleted);
            }
            this.InvokeAsync("DeleteTransaction", new object[] {
                        TransactionId}, this.DeleteTransactionOperationCompleted, userState);
        }
        
        private void OnDeleteTransactionOperationCompleted(object arg) {
            if ((this.DeleteTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTransactionCompleted(this, new DeleteTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:schemas-royalmail-com/webservice/epro/DeleteDSATransaction", RequestNamespace="urn:schemas-royalmail-com/webservice/epro", ResponseNamespace="urn:schemas-royalmail-com/webservice/epro", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionInfo DeleteDSATransaction(string TransactionId) {
            object[] results = this.Invoke("DeleteDSATransaction", new object[] {
                        TransactionId});
            return ((TransactionInfo)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDSATransactionAsync(string TransactionId) {
            this.DeleteDSATransactionAsync(TransactionId, null);
        }
        
        /// <remarks/>
        public void DeleteDSATransactionAsync(string TransactionId, object userState) {
            if ((this.DeleteDSATransactionOperationCompleted == null)) {
                this.DeleteDSATransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDSATransactionOperationCompleted);
            }
            this.InvokeAsync("DeleteDSATransaction", new object[] {
                        TransactionId}, this.DeleteDSATransactionOperationCompleted, userState);
        }
        
        private void OnDeleteDSATransactionOperationCompleted(object arg) {
            if ((this.DeleteDSATransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDSATransactionCompleted(this, new DeleteDSATransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:schemas-royalmail-com/webservice/epro/GetAccounts", RequestNamespace="urn:schemas-royalmail-com/webservice/epro", ResponseNamespace="urn:schemas-royalmail-com/webservice/epro", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AccountResults GetAccounts() {
            object[] results = this.Invoke("GetAccounts", new object[0]);
            return ((AccountResults)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountsAsync() {
            this.GetAccountsAsync(null);
        }
        
        /// <remarks/>
        public void GetAccountsAsync(object userState) {
            if ((this.GetAccountsOperationCompleted == null)) {
                this.GetAccountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountsOperationCompleted);
            }
            this.InvokeAsync("GetAccounts", new object[0], this.GetAccountsOperationCompleted, userState);
        }
        
        private void OnGetAccountsOperationCompleted(object arg) {
            if ((this.GetAccountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountsCompleted(this, new GetAccountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:schemas-royalmail-com/webservice/epro/GetServices", RequestNamespace="urn:schemas-royalmail-com/webservice/epro", ResponseNamespace="urn:schemas-royalmail-com/webservice/epro", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ServiceResults GetServices(string Account) {
            object[] results = this.Invoke("GetServices", new object[] {
                        Account});
            return ((ServiceResults)(results[0]));
        }
        
        /// <remarks/>
        public void GetServicesAsync(string Account) {
            this.GetServicesAsync(Account, null);
        }
        
        /// <remarks/>
        public void GetServicesAsync(string Account, object userState) {
            if ((this.GetServicesOperationCompleted == null)) {
                this.GetServicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServicesOperationCompleted);
            }
            this.InvokeAsync("GetServices", new object[] {
                        Account}, this.GetServicesOperationCompleted, userState);
        }
        
        private void OnGetServicesOperationCompleted(object arg) {
            if ((this.GetServicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServicesCompleted(this, new GetServicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:schemas-royalmail-com/webservice/epro/GetDepartments", RequestNamespace="urn:schemas-royalmail-com/webservice/epro", ResponseNamespace="urn:schemas-royalmail-com/webservice/epro", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DepartmentResults GetDepartments(string Account) {
            object[] results = this.Invoke("GetDepartments", new object[] {
                        Account});
            return ((DepartmentResults)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepartmentsAsync(string Account) {
            this.GetDepartmentsAsync(Account, null);
        }
        
        /// <remarks/>
        public void GetDepartmentsAsync(string Account, object userState) {
            if ((this.GetDepartmentsOperationCompleted == null)) {
                this.GetDepartmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepartmentsOperationCompleted);
            }
            this.InvokeAsync("GetDepartments", new object[] {
                        Account}, this.GetDepartmentsOperationCompleted, userState);
        }
        
        private void OnGetDepartmentsOperationCompleted(object arg) {
            if ((this.GetDepartmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepartmentsCompleted(this, new GetDepartmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:schemas-royalmail-com/webservice/epro/GetFees", RequestNamespace="urn:schemas-royalmail-com/webservice/epro", ResponseNamespace="urn:schemas-royalmail-com/webservice/epro", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FeeResults GetFees(string Account, string ServiceRegister) {
            object[] results = this.Invoke("GetFees", new object[] {
                        Account,
                        ServiceRegister});
            return ((FeeResults)(results[0]));
        }
        
        /// <remarks/>
        public void GetFeesAsync(string Account, string ServiceRegister) {
            this.GetFeesAsync(Account, ServiceRegister, null);
        }
        
        /// <remarks/>
        public void GetFeesAsync(string Account, string ServiceRegister, object userState) {
            if ((this.GetFeesOperationCompleted == null)) {
                this.GetFeesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFeesOperationCompleted);
            }
            this.InvokeAsync("GetFees", new object[] {
                        Account,
                        ServiceRegister}, this.GetFeesOperationCompleted, userState);
        }
        
        private void OnGetFeesOperationCompleted(object arg) {
            if ((this.GetFeesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFeesCompleted(this, new GetFeesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:schemas-royalmail-com/webservice/epro/GetMagazines", RequestNamespace="urn:schemas-royalmail-com/webservice/epro", ResponseNamespace="urn:schemas-royalmail-com/webservice/epro", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MagazineResults GetMagazines(string Account, string ServiceRegister, string ServiceLevel) {
            object[] results = this.Invoke("GetMagazines", new object[] {
                        Account,
                        ServiceRegister,
                        ServiceLevel});
            return ((MagazineResults)(results[0]));
        }
        
        /// <remarks/>
        public void GetMagazinesAsync(string Account, string ServiceRegister, string ServiceLevel) {
            this.GetMagazinesAsync(Account, ServiceRegister, ServiceLevel, null);
        }
        
        /// <remarks/>
        public void GetMagazinesAsync(string Account, string ServiceRegister, string ServiceLevel, object userState) {
            if ((this.GetMagazinesOperationCompleted == null)) {
                this.GetMagazinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMagazinesOperationCompleted);
            }
            this.InvokeAsync("GetMagazines", new object[] {
                        Account,
                        ServiceRegister,
                        ServiceLevel}, this.GetMagazinesOperationCompleted, userState);
        }
        
        private void OnGetMagazinesOperationCompleted(object arg) {
            if ((this.GetMagazinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMagazinesCompleted(this, new GetMagazinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:schemas-royalmail-com/webservice/epro/GetCountries", RequestNamespace="urn:schemas-royalmail-com/webservice/epro", ResponseNamespace="urn:schemas-royalmail-com/webservice/epro", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CountryResults GetCountries(string Account, string ServiceRegister, string ServiceLevel) {
            object[] results = this.Invoke("GetCountries", new object[] {
                        Account,
                        ServiceRegister,
                        ServiceLevel});
            return ((CountryResults)(results[0]));
        }
        
        /// <remarks/>
        public void GetCountriesAsync(string Account, string ServiceRegister, string ServiceLevel) {
            this.GetCountriesAsync(Account, ServiceRegister, ServiceLevel, null);
        }
        
        /// <remarks/>
        public void GetCountriesAsync(string Account, string ServiceRegister, string ServiceLevel, object userState) {
            if ((this.GetCountriesOperationCompleted == null)) {
                this.GetCountriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountriesOperationCompleted);
            }
            this.InvokeAsync("GetCountries", new object[] {
                        Account,
                        ServiceRegister,
                        ServiceLevel}, this.GetCountriesOperationCompleted, userState);
        }
        
        private void OnGetCountriesOperationCompleted(object arg) {
            if ((this.GetCountriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountriesCompleted(this, new GetCountriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:schemas-royalmail-com/webservice/epro")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="urn:schemas-royalmail-com/webservice/epro", IsNullable=false)]
    public partial class Authentication : System.Web.Services.Protocols.SoapHeader {
        
        private string usernameField;
        
        private string passwordField;
        
        private int accessCodeField;
        
        private string versionField;
        
        private string securityTokenField;
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public int AccessCode {
            get {
                return this.accessCodeField;
            }
            set {
                this.accessCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public string SecurityToken {
            get {
                return this.securityTokenField;
            }
            set {
                this.securityTokenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:schemas-royalmail-com/webservice/epro")]
    public partial class Country {
        
        private string countryNameField;
        
        private string countryCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CountryName {
            get {
                return this.countryNameField;
            }
            set {
                this.countryNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CountryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:schemas-royalmail-com/webservice/epro")]
    public partial class CountryResults {
        
        private Country[] countriesField;
        
        private Error errorField;
        
        private string versionField;
        
        /// <remarks/>
        public Country[] Countries {
            get {
                return this.countriesField;
            }
            set {
                this.countriesField = value;
            }
        }
        
        /// <remarks/>
        public Error Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:schemas-royalmail-com/webservice/epro")]
    public partial class Error {
        
        private string messageField;
        
        private string extraInformationField;
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string ExtraInformation {
            get {
                return this.extraInformationField;
            }
            set {
                this.extraInformationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:schemas-royalmail-com/webservice/epro")]
    public partial class Magazine {
        
        private string magazineNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string MagazineName {
            get {
                return this.magazineNameField;
            }
            set {
                this.magazineNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:schemas-royalmail-com/webservice/epro")]
    public partial class MagazineResults {
        
        private Magazine[] magazinesField;
        
        private Error errorField;
        
        private string versionField;
        
        /// <remarks/>
        public Magazine[] Magazines {
            get {
                return this.magazinesField;
            }
            set {
                this.magazinesField = value;
            }
        }
        
        /// <remarks/>
        public Error Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:schemas-royalmail-com/webservice/epro")]
    public partial class Fee {
        
        private string feeNameField;
        
        private string feeShortCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string FeeName {
            get {
                return this.feeNameField;
            }
            set {
                this.feeNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string FeeShortCode {
            get {
                return this.feeShortCodeField;
            }
            set {
                this.feeShortCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:schemas-royalmail-com/webservice/epro")]
    public partial class FeeResults {
        
        private Fee[] feesField;
        
        private Error errorField;
        
        private string versionField;
        
        /// <remarks/>
        public Fee[] Fees {
            get {
                return this.feesField;
            }
            set {
                this.feesField = value;
            }
        }
        
        /// <remarks/>
        public Error Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:schemas-royalmail-com/webservice/epro")]
    public partial class Department {
        
        private string departmentNameField;
        
        private string departmentNoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DepartmentName {
            get {
                return this.departmentNameField;
            }
            set {
                this.departmentNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DepartmentNo {
            get {
                return this.departmentNoField;
            }
            set {
                this.departmentNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:schemas-royalmail-com/webservice/epro")]
    public partial class DepartmentResults {
        
        private Department[] departmentsField;
        
        private Error errorField;
        
        private string versionField;
        
        /// <remarks/>
        public Department[] Departments {
            get {
                return this.departmentsField;
            }
            set {
                this.departmentsField = value;
            }
        }
        
        /// <remarks/>
        public Error Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:schemas-royalmail-com/webservice/epro")]
    public partial class Service {
        
        private string serviceNameField;
        
        private string serviceRegField;
        
        private string serviceLevelField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ServiceName {
            get {
                return this.serviceNameField;
            }
            set {
                this.serviceNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ServiceReg {
            get {
                return this.serviceRegField;
            }
            set {
                this.serviceRegField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ServiceLevel {
            get {
                return this.serviceLevelField;
            }
            set {
                this.serviceLevelField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:schemas-royalmail-com/webservice/epro")]
    public partial class ServiceResults {
        
        private Service[] servicesField;
        
        private Error errorField;
        
        private string versionField;
        
        /// <remarks/>
        public Service[] Services {
            get {
                return this.servicesField;
            }
            set {
                this.servicesField = value;
            }
        }
        
        /// <remarks/>
        public Error Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:schemas-royalmail-com/webservice/epro")]
    public partial class Account {
        
        private string accountNameField;
        
        private string accountNumberField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string AccountName {
            get {
                return this.accountNameField;
            }
            set {
                this.accountNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string AccountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:schemas-royalmail-com/webservice/epro")]
    public partial class AccountResults {
        
        private Account[] accountsField;
        
        private Error errorField;
        
        private string versionField;
        
        /// <remarks/>
        public Account[] Accounts {
            get {
                return this.accountsField;
            }
            set {
                this.accountsField = value;
            }
        }
        
        /// <remarks/>
        public Error Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:schemas-royalmail-com/webservice/epro")]
    public partial class Docket {
        
        private string docketNumberField;
        
        /// <remarks/>
        public string DocketNumber {
            get {
                return this.docketNumberField;
            }
            set {
                this.docketNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:schemas-royalmail-com/webservice/epro")]
    public partial class TransactionInfo {
        
        private Docket[] docketsField;
        
        private Error[] errorsField;
        
        private string machineNameField;
        
        private string startTimeField;
        
        private string endTimeField;
        
        private string versionField;
        
        private string transactionIDField;
        
        private string docketsCreatedField;
        
        private string errorEncounteredField;
        
        private string dateTimeField;
        
        private string recordCountField;
        
        private string recordsImportedField;
        
        private string recordsRejectedField;
        
        private string transactionDeletedField;
        
        private string userField;
        
        /// <remarks/>
        public Docket[] Dockets {
            get {
                return this.docketsField;
            }
            set {
                this.docketsField = value;
            }
        }
        
        /// <remarks/>
        public Error[] Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string MachineName {
            get {
                return this.machineNameField;
            }
            set {
                this.machineNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string StartTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string EndTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TransactionID {
            get {
                return this.transactionIDField;
            }
            set {
                this.transactionIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DocketsCreated {
            get {
                return this.docketsCreatedField;
            }
            set {
                this.docketsCreatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ErrorEncountered {
            get {
                return this.errorEncounteredField;
            }
            set {
                this.errorEncounteredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string RecordCount {
            get {
                return this.recordCountField;
            }
            set {
                this.recordCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string RecordsImported {
            get {
                return this.recordsImportedField;
            }
            set {
                this.recordsImportedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string RecordsRejected {
            get {
                return this.recordsRejectedField;
            }
            set {
                this.recordsRejectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TransactionDeleted {
            get {
                return this.transactionDeletedField;
            }
            set {
                this.transactionDeletedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void MailingItemCompletedEventHandler(object sender, MailingItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MailingItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MailingItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BulkImportMailingItemCompletedEventHandler(object sender, BulkImportMailingItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BulkImportMailingItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BulkImportMailingItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateDocketsCompletedEventHandler(object sender, CreateDocketsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateDocketsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateDocketsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DSACreateDocketsCompletedEventHandler(object sender, DSACreateDocketsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DSACreateDocketsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DSACreateDocketsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DSABulkImportMailingItemCompletedEventHandler(object sender, DSABulkImportMailingItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DSABulkImportMailingItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DSABulkImportMailingItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DSABulkAppendMailingItemCompletedEventHandler(object sender, DSABulkAppendMailingItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DSABulkAppendMailingItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DSABulkAppendMailingItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteTransactionCompletedEventHandler(object sender, DeleteTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteDSATransactionCompletedEventHandler(object sender, DeleteDSATransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDSATransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDSATransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAccountsCompletedEventHandler(object sender, GetAccountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccountResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetServicesCompletedEventHandler(object sender, GetServicesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDepartmentsCompletedEventHandler(object sender, GetDepartmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepartmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepartmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DepartmentResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DepartmentResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFeesCompletedEventHandler(object sender, GetFeesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFeesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFeesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FeeResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FeeResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMagazinesCompletedEventHandler(object sender, GetMagazinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMagazinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMagazinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MagazineResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MagazineResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCountriesCompletedEventHandler(object sender, GetCountriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CountryResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CountryResults)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591
