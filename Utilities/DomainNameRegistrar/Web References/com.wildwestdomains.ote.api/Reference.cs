//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace DomainNameRegistrar.com.wildwestdomains.ote.api {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WAPISoap", Namespace="http://wildwestdomains.com/webservices/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Order))]
    public partial class WAPI : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ProcessRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback DescribeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckAvailabilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback InfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback NameGenOperationCompleted;
        
        private System.Threading.SendOrPostCallback NameGenDBOperationCompleted;
        
        private System.Threading.SendOrPostCallback PollOperationCompleted;
        
        private System.Threading.SendOrPostCallback OrderCreditsOperationCompleted;
        
        private System.Threading.SendOrPostCallback OrderDomainsOperationCompleted;
        
        private System.Threading.SendOrPostCallback OrderDomainRenewalsOperationCompleted;
        
        private System.Threading.SendOrPostCallback OrderPrivateDomainRenewalsOperationCompleted;
        
        private System.Threading.SendOrPostCallback OrderDomainTransfersOperationCompleted;
        
        private System.Threading.SendOrPostCallback OrderDomainPrivacyOperationCompleted;
        
        private System.Threading.SendOrPostCallback OrderResourceRenewalsOperationCompleted;
        
        private System.Threading.SendOrPostCallback OrderDomainBackOrdersOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDomainOwnershipOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetShopperInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetupDomainAlertOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDomainAlertOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveDomainAlertOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDomainAlertCreditsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMonitoredDomainListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExpiringNameListOperationCompleted;
        
        private System.Threading.SendOrPostCallback DomainForwardingOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateNameServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDomainContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetDomainLockingOperationCompleted;
        
        private System.Threading.SendOrPostCallback ManageTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDomainForwardingOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyDNSOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WAPI() {
            this.Url = global::DomainNameRegistrar.Properties.Settings.Default.DomainNameRegistrar_com_wildwestdomains_ote_api_WAPI;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ProcessRequestCompletedEventHandler ProcessRequestCompleted;
        
        /// <remarks/>
        public event DescribeCompletedEventHandler DescribeCompleted;
        
        /// <remarks/>
        public event CheckAvailabilityCompletedEventHandler CheckAvailabilityCompleted;
        
        /// <remarks/>
        public event InfoCompletedEventHandler InfoCompleted;
        
        /// <remarks/>
        public event NameGenCompletedEventHandler NameGenCompleted;
        
        /// <remarks/>
        public event NameGenDBCompletedEventHandler NameGenDBCompleted;
        
        /// <remarks/>
        public event PollCompletedEventHandler PollCompleted;
        
        /// <remarks/>
        public event OrderCreditsCompletedEventHandler OrderCreditsCompleted;
        
        /// <remarks/>
        public event OrderDomainsCompletedEventHandler OrderDomainsCompleted;
        
        /// <remarks/>
        public event OrderDomainRenewalsCompletedEventHandler OrderDomainRenewalsCompleted;
        
        /// <remarks/>
        public event OrderPrivateDomainRenewalsCompletedEventHandler OrderPrivateDomainRenewalsCompleted;
        
        /// <remarks/>
        public event OrderDomainTransfersCompletedEventHandler OrderDomainTransfersCompleted;
        
        /// <remarks/>
        public event OrderDomainPrivacyCompletedEventHandler OrderDomainPrivacyCompleted;
        
        /// <remarks/>
        public event OrderResourceRenewalsCompletedEventHandler OrderResourceRenewalsCompleted;
        
        /// <remarks/>
        public event OrderDomainBackOrdersCompletedEventHandler OrderDomainBackOrdersCompleted;
        
        /// <remarks/>
        public event CancelCompletedEventHandler CancelCompleted;
        
        /// <remarks/>
        public event UpdateDomainOwnershipCompletedEventHandler UpdateDomainOwnershipCompleted;
        
        /// <remarks/>
        public event ResetPasswordCompletedEventHandler ResetPasswordCompleted;
        
        /// <remarks/>
        public event SetShopperInfoCompletedEventHandler SetShopperInfoCompleted;
        
        /// <remarks/>
        public event CheckUserCompletedEventHandler CheckUserCompleted;
        
        /// <remarks/>
        public event SetupDomainAlertCompletedEventHandler SetupDomainAlertCompleted;
        
        /// <remarks/>
        public event UpdateDomainAlertCompletedEventHandler UpdateDomainAlertCompleted;
        
        /// <remarks/>
        public event RemoveDomainAlertCompletedEventHandler RemoveDomainAlertCompleted;
        
        /// <remarks/>
        public event GetDomainAlertCreditsCompletedEventHandler GetDomainAlertCreditsCompleted;
        
        /// <remarks/>
        public event GetMonitoredDomainListCompletedEventHandler GetMonitoredDomainListCompleted;
        
        /// <remarks/>
        public event GetExpiringNameListCompletedEventHandler GetExpiringNameListCompleted;
        
        /// <remarks/>
        public event DomainForwardingCompletedEventHandler DomainForwardingCompleted;
        
        /// <remarks/>
        public event UpdateNameServerCompletedEventHandler UpdateNameServerCompleted;
        
        /// <remarks/>
        public event UpdateDomainContactCompletedEventHandler UpdateDomainContactCompleted;
        
        /// <remarks/>
        public event SetDomainLockingCompletedEventHandler SetDomainLockingCompleted;
        
        /// <remarks/>
        public event ManageTransferCompletedEventHandler ManageTransferCompleted;
        
        /// <remarks/>
        public event UpdateDomainForwardingCompletedEventHandler UpdateDomainForwardingCompleted;
        
        /// <remarks/>
        public event ModifyDNSCompletedEventHandler ModifyDNSCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wildwestdomains.com/webservices/ProcessRequest", RequestNamespace="http://wildwestdomains.com/webservices/", ResponseNamespace="http://wildwestdomains.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ProcessRequest(string sRequestXML) {
            object[] results = this.Invoke("ProcessRequest", new object[] {
                        sRequestXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessRequestAsync(string sRequestXML) {
            this.ProcessRequestAsync(sRequestXML, null);
        }
        
        /// <remarks/>
        public void ProcessRequestAsync(string sRequestXML, object userState) {
            if ((this.ProcessRequestOperationCompleted == null)) {
                this.ProcessRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessRequestOperationCompleted);
            }
            this.InvokeAsync("ProcessRequest", new object[] {
                        sRequestXML}, this.ProcessRequestOperationCompleted, userState);
        }
        
        private void OnProcessRequestOperationCompleted(object arg) {
            if ((this.ProcessRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessRequestCompleted(this, new ProcessRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wildwestdomains.com/webservices/Describe", RequestNamespace="http://wildwestdomains.com/webservices/", ResponseNamespace="http://wildwestdomains.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Describe(string sCLTRID, Credential credential) {
            object[] results = this.Invoke("Describe", new object[] {
                        sCLTRID,
                        credential});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DescribeAsync(string sCLTRID, Credential credential) {
            this.DescribeAsync(sCLTRID, credential, null);
        }
        
        /// <remarks/>
        public void DescribeAsync(string sCLTRID, Credential credential, object userState) {
            if ((this.DescribeOperationCompleted == null)) {
                this.DescribeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDescribeOperationCompleted);
            }
            this.InvokeAsync("Describe", new object[] {
                        sCLTRID,
                        credential}, this.DescribeOperationCompleted, userState);
        }
        
        private void OnDescribeOperationCompleted(object arg) {
            if ((this.DescribeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DescribeCompleted(this, new DescribeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wildwestdomains.com/webservices/CheckAvailability", RequestNamespace="http://wildwestdomains.com/webservices/", ResponseNamespace="http://wildwestdomains.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckAvailability(string sCLTRID, Credential credential, string[] sDomainArray, string[] sHostArray, string[] sNSArray) {
            object[] results = this.Invoke("CheckAvailability", new object[] {
                        sCLTRID,
                        credential,
                        sDomainArray,
                        sHostArray,
                        sNSArray});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckAvailabilityAsync(string sCLTRID, Credential credential, string[] sDomainArray, string[] sHostArray, string[] sNSArray) {
            this.CheckAvailabilityAsync(sCLTRID, credential, sDomainArray, sHostArray, sNSArray, null);
        }
        
        /// <remarks/>
        public void CheckAvailabilityAsync(string sCLTRID, Credential credential, string[] sDomainArray, string[] sHostArray, string[] sNSArray, object userState) {
            if ((this.CheckAvailabilityOperationCompleted == null)) {
                this.CheckAvailabilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckAvailabilityOperationCompleted);
            }
            this.InvokeAsync("CheckAvailability", new object[] {
                        sCLTRID,
                        credential,
                        sDomainArray,
                        sHostArray,
                        sNSArray}, this.CheckAvailabilityOperationCompleted, userState);
        }
        
        private void OnCheckAvailabilityOperationCompleted(object arg) {
            if ((this.CheckAvailabilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckAvailabilityCompleted(this, new CheckAvailabilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wildwestdomains.com/webservices/Info", RequestNamespace="http://wildwestdomains.com/webservices/", ResponseNamespace="http://wildwestdomains.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Info(string sCLTRID, Credential credential, string sResourceID, string sType, string sDomain, string sOrderID) {
            object[] results = this.Invoke("Info", new object[] {
                        sCLTRID,
                        credential,
                        sResourceID,
                        sType,
                        sDomain,
                        sOrderID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InfoAsync(string sCLTRID, Credential credential, string sResourceID, string sType, string sDomain, string sOrderID) {
            this.InfoAsync(sCLTRID, credential, sResourceID, sType, sDomain, sOrderID, null);
        }
        
        /// <remarks/>
        public void InfoAsync(string sCLTRID, Credential credential, string sResourceID, string sType, string sDomain, string sOrderID, object userState) {
            if ((this.InfoOperationCompleted == null)) {
                this.InfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInfoOperationCompleted);
            }
            this.InvokeAsync("Info", new object[] {
                        sCLTRID,
                        credential,
                        sResourceID,
                        sType,
                        sDomain,
                        sOrderID}, this.InfoOperationCompleted, userState);
        }
        
        private void OnInfoOperationCompleted(object arg) {
            if ((this.InfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InfoCompleted(this, new InfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wildwestdomains.com/webservices/NameGen", RequestNamespace="http://wildwestdomains.com/webservices/", ResponseNamespace="http://wildwestdomains.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NameGen(string sCLTRID, Credential credential, string sSLD, string sTLD, string sTLDs, ushort nRows, bool bHypens, bool bNumbers, ushort nMaxLen, bool bIntelliSearch, ushort nPage, string sTime) {
            object[] results = this.Invoke("NameGen", new object[] {
                        sCLTRID,
                        credential,
                        sSLD,
                        sTLD,
                        sTLDs,
                        nRows,
                        bHypens,
                        bNumbers,
                        nMaxLen,
                        bIntelliSearch,
                        nPage,
                        sTime});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NameGenAsync(string sCLTRID, Credential credential, string sSLD, string sTLD, string sTLDs, ushort nRows, bool bHypens, bool bNumbers, ushort nMaxLen, bool bIntelliSearch, ushort nPage, string sTime) {
            this.NameGenAsync(sCLTRID, credential, sSLD, sTLD, sTLDs, nRows, bHypens, bNumbers, nMaxLen, bIntelliSearch, nPage, sTime, null);
        }
        
        /// <remarks/>
        public void NameGenAsync(string sCLTRID, Credential credential, string sSLD, string sTLD, string sTLDs, ushort nRows, bool bHypens, bool bNumbers, ushort nMaxLen, bool bIntelliSearch, ushort nPage, string sTime, object userState) {
            if ((this.NameGenOperationCompleted == null)) {
                this.NameGenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNameGenOperationCompleted);
            }
            this.InvokeAsync("NameGen", new object[] {
                        sCLTRID,
                        credential,
                        sSLD,
                        sTLD,
                        sTLDs,
                        nRows,
                        bHypens,
                        bNumbers,
                        nMaxLen,
                        bIntelliSearch,
                        nPage,
                        sTime}, this.NameGenOperationCompleted, userState);
        }
        
        private void OnNameGenOperationCompleted(object arg) {
            if ((this.NameGenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NameGenCompleted(this, new NameGenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wildwestdomains.com/webservices/NameGenDB", RequestNamespace="http://wildwestdomains.com/webservices/", ResponseNamespace="http://wildwestdomains.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NameGenDB(string sCLTRID, Credential credential, string sKey, int nMaxResults, bool bExcludeTaken, string sTLDs, bool bAddPrefix, bool bAddSuffix, bool bAddDashes, bool bAddRelated, bool bAdvancedSplit, bool bBaseOnTop) {
            object[] results = this.Invoke("NameGenDB", new object[] {
                        sCLTRID,
                        credential,
                        sKey,
                        nMaxResults,
                        bExcludeTaken,
                        sTLDs,
                        bAddPrefix,
                        bAddSuffix,
                        bAddDashes,
                        bAddRelated,
                        bAdvancedSplit,
                        bBaseOnTop});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NameGenDBAsync(string sCLTRID, Credential credential, string sKey, int nMaxResults, bool bExcludeTaken, string sTLDs, bool bAddPrefix, bool bAddSuffix, bool bAddDashes, bool bAddRelated, bool bAdvancedSplit, bool bBaseOnTop) {
            this.NameGenDBAsync(sCLTRID, credential, sKey, nMaxResults, bExcludeTaken, sTLDs, bAddPrefix, bAddSuffix, bAddDashes, bAddRelated, bAdvancedSplit, bBaseOnTop, null);
        }
        
        /// <remarks/>
        public void NameGenDBAsync(string sCLTRID, Credential credential, string sKey, int nMaxResults, bool bExcludeTaken, string sTLDs, bool bAddPrefix, bool bAddSuffix, bool bAddDashes, bool bAddRelated, bool bAdvancedSplit, bool bBaseOnTop, object userState) {
            if ((this.NameGenDBOperationCompleted == null)) {
                this.NameGenDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNameGenDBOperationCompleted);
            }
            this.InvokeAsync("NameGenDB", new object[] {
                        sCLTRID,
                        credential,
                        sKey,
                        nMaxResults,
                        bExcludeTaken,
                        sTLDs,
                        bAddPrefix,
                        bAddSuffix,
                        bAddDashes,
                        bAddRelated,
                        bAdvancedSplit,
                        bBaseOnTop}, this.NameGenDBOperationCompleted, userState);
        }
        
        private void OnNameGenDBOperationCompleted(object arg) {
            if ((this.NameGenDBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NameGenDBCompleted(this, new NameGenDBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wildwestdomains.com/webservices/Poll", RequestNamespace="http://wildwestdomains.com/webservices/", ResponseNamespace="http://wildwestdomains.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Poll(string sCLTRID, Credential credential, string sOp) {
            object[] results = this.Invoke("Poll", new object[] {
                        sCLTRID,
                        credential,
                        sOp});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PollAsync(string sCLTRID, Credential credential, string sOp) {
            this.PollAsync(sCLTRID, credential, sOp, null);
        }
        
        /// <remarks/>
        public void PollAsync(string sCLTRID, Credential credential, string sOp, object userState) {
            if ((this.PollOperationCompleted == null)) {
                this.PollOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPollOperationCompleted);
            }
            this.InvokeAsync("Poll", new object[] {
                        sCLTRID,
                        credential,
                        sOp}, this.PollOperationCompleted, userState);
        }
        
        private void OnPollOperationCompleted(object arg) {
            if ((this.PollCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PollCompleted(this, new PollCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wildwestdomains.com/webservices/OrderCredits", RequestNamespace="http://wildwestdomains.com/webservices/", ResponseNamespace="http://wildwestdomains.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string OrderCredits(string sCLTRID, Credential credential, Shopper shopper, OrderItem[] items, string sROID) {
            object[] results = this.Invoke("OrderCredits", new object[] {
                        sCLTRID,
                        credential,
                        shopper,
                        items,
                        sROID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OrderCreditsAsync(string sCLTRID, Credential credential, Shopper shopper, OrderItem[] items, string sROID) {
            this.OrderCreditsAsync(sCLTRID, credential, shopper, items, sROID, null);
        }
        
        /// <remarks/>
        public void OrderCreditsAsync(string sCLTRID, Credential credential, Shopper shopper, OrderItem[] items, string sROID, object userState) {
            if ((this.OrderCreditsOperationCompleted == null)) {
                this.OrderCreditsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOrderCreditsOperationCompleted);
            }
            this.InvokeAsync("OrderCredits", new object[] {
                        sCLTRID,
                        credential,
                        shopper,
                        items,
                        sROID}, this.OrderCreditsOperationCompleted, userState);
        }
        
        private void OnOrderCreditsOperationCompleted(object arg) {
            if ((this.OrderCreditsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OrderCreditsCompleted(this, new OrderCreditsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wildwestdomains.com/webservices/OrderDomains", RequestNamespace="http://wildwestdomains.com/webservices/", ResponseNamespace="http://wildwestdomains.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string OrderDomains(string sCLTRID, Credential credential, Shopper shopper, DomainRegistration[] items, DomainByProxy[] dbpItems, string sROID) {
            object[] results = this.Invoke("OrderDomains", new object[] {
                        sCLTRID,
                        credential,
                        shopper,
                        items,
                        dbpItems,
                        sROID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OrderDomainsAsync(string sCLTRID, Credential credential, Shopper shopper, DomainRegistration[] items, DomainByProxy[] dbpItems, string sROID) {
            this.OrderDomainsAsync(sCLTRID, credential, shopper, items, dbpItems, sROID, null);
        }
        
        /// <remarks/>
        public void OrderDomainsAsync(string sCLTRID, Credential credential, Shopper shopper, DomainRegistration[] items, DomainByProxy[] dbpItems, string sROID, object userState) {
            if ((this.OrderDomainsOperationCompleted == null)) {
                this.OrderDomainsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOrderDomainsOperationCompleted);
            }
            this.InvokeAsync("OrderDomains", new object[] {
                        sCLTRID,
                        credential,
                        shopper,
                        items,
                        dbpItems,
                        sROID}, this.OrderDomainsOperationCompleted, userState);
        }
        
        private void OnOrderDomainsOperationCompleted(object arg) {
            if ((this.OrderDomainsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OrderDomainsCompleted(this, new OrderDomainsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wildwestdomains.com/webservices/OrderDomainRenewals", RequestNamespace="http://wildwestdomains.com/webservices/", ResponseNamespace="http://wildwestdomains.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string OrderDomainRenewals(string sCLTRID, Credential credential, Shopper shopper, DomainRenewal[] items, string sROID) {
            object[] results = this.Invoke("OrderDomainRenewals", new object[] {
                        sCLTRID,
                        credential,
                        shopper,
                        items,
                        sROID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OrderDomainRenewalsAsync(string sCLTRID, Credential credential, Shopper shopper, DomainRenewal[] items, string sROID) {
            this.OrderDomainRenewalsAsync(sCLTRID, credential, shopper, items, sROID, null);
        }
        
        /// <remarks/>
        public void OrderDomainRenewalsAsync(string sCLTRID, Credential credential, Shopper shopper, DomainRenewal[] items, string sROID, object userState) {
            if ((this.OrderDomainRenewalsOperationCompleted == null)) {
                this.OrderDomainRenewalsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOrderDomainRenewalsOperationCompleted);
            }
            this.InvokeAsync("OrderDomainRenewals", new object[] {
                        sCLTRID,
                        credential,
                        shopper,
                        items,
                        sROID}, this.OrderDomainRenewalsOperationCompleted, userState);
        }
        
        private void OnOrderDomainRenewalsOperationCompleted(object arg) {
            if ((this.OrderDomainRenewalsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OrderDomainRenewalsCompleted(this, new OrderDomainRenewalsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wildwestdomains.com/webservices/OrderPrivateDomainRenewals", RequestNamespace="http://wildwestdomains.com/webservices/", ResponseNamespace="http://wildwestdomains.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string OrderPrivateDomainRenewals(string sCLTRID, Credential credential, Shopper shopper, DomainRenewal[] items, ResourceRenewal[] dbpItems, string sROID) {
            object[] results = this.Invoke("OrderPrivateDomainRenewals", new object[] {
                        sCLTRID,
                        credential,
                        shopper,
                        items,
                        dbpItems,
                        sROID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OrderPrivateDomainRenewalsAsync(string sCLTRID, Credential credential, Shopper shopper, DomainRenewal[] items, ResourceRenewal[] dbpItems, string sROID) {
            this.OrderPrivateDomainRenewalsAsync(sCLTRID, credential, shopper, items, dbpItems, sROID, null);
        }
        
        /// <remarks/>
        public void OrderPrivateDomainRenewalsAsync(string sCLTRID, Credential credential, Shopper shopper, DomainRenewal[] items, ResourceRenewal[] dbpItems, string sROID, object userState) {
            if ((this.OrderPrivateDomainRenewalsOperationCompleted == null)) {
                this.OrderPrivateDomainRenewalsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOrderPrivateDomainRenewalsOperationCompleted);
            }
            this.InvokeAsync("OrderPrivateDomainRenewals", new object[] {
                        sCLTRID,
                        credential,
                        shopper,
                        items,
                        dbpItems,
                        sROID}, this.OrderPrivateDomainRenewalsOperationCompleted, userState);
        }
        
        private void OnOrderPrivateDomainRenewalsOperationCompleted(object arg) {
            if ((this.OrderPrivateDomainRenewalsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OrderPrivateDomainRenewalsCompleted(this, new OrderPrivateDomainRenewalsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wildwestdomains.com/webservices/OrderDomainTransfers", RequestNamespace="http://wildwestdomains.com/webservices/", ResponseNamespace="http://wildwestdomains.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string OrderDomainTransfers(string sCLTRID, Credential credential, Shopper shopper, DomainTransfer[] items, string sROID) {
            object[] results = this.Invoke("OrderDomainTransfers", new object[] {
                        sCLTRID,
                        credential,
                        shopper,
                        items,
                        sROID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OrderDomainTransfersAsync(string sCLTRID, Credential credential, Shopper shopper, DomainTransfer[] items, string sROID) {
            this.OrderDomainTransfersAsync(sCLTRID, credential, shopper, items, sROID, null);
        }
        
        /// <remarks/>
        public void OrderDomainTransfersAsync(string sCLTRID, Credential credential, Shopper shopper, DomainTransfer[] items, string sROID, object userState) {
            if ((this.OrderDomainTransfersOperationCompleted == null)) {
                this.OrderDomainTransfersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOrderDomainTransfersOperationCompleted);
            }
            this.InvokeAsync("OrderDomainTransfers", new object[] {
                        sCLTRID,
                        credential,
                        shopper,
                        items,
                        sROID}, this.OrderDomainTransfersOperationCompleted, userState);
        }
        
        private void OnOrderDomainTransfersOperationCompleted(object arg) {
            if ((this.OrderDomainTransfersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OrderDomainTransfersCompleted(this, new OrderDomainTransfersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wildwestdomains.com/webservices/OrderDomainPrivacy", RequestNamespace="http://wildwestdomains.com/webservices/", ResponseNamespace="http://wildwestdomains.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string OrderDomainPrivacy(string sCLTRID, Credential credential, Shopper shopper, DomainByProxy[] items, string sROID) {
            object[] results = this.Invoke("OrderDomainPrivacy", new object[] {
                        sCLTRID,
                        credential,
                        shopper,
                        items,
                        sROID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OrderDomainPrivacyAsync(string sCLTRID, Credential credential, Shopper shopper, DomainByProxy[] items, string sROID) {
            this.OrderDomainPrivacyAsync(sCLTRID, credential, shopper, items, sROID, null);
        }
        
        /// <remarks/>
        public void OrderDomainPrivacyAsync(string sCLTRID, Credential credential, Shopper shopper, DomainByProxy[] items, string sROID, object userState) {
            if ((this.OrderDomainPrivacyOperationCompleted == null)) {
                this.OrderDomainPrivacyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOrderDomainPrivacyOperationCompleted);
            }
            this.InvokeAsync("OrderDomainPrivacy", new object[] {
                        sCLTRID,
                        credential,
                        shopper,
                        items,
                        sROID}, this.OrderDomainPrivacyOperationCompleted, userState);
        }
        
        private void OnOrderDomainPrivacyOperationCompleted(object arg) {
            if ((this.OrderDomainPrivacyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OrderDomainPrivacyCompleted(this, new OrderDomainPrivacyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wildwestdomains.com/webservices/OrderResourceRenewals", RequestNamespace="http://wildwestdomains.com/webservices/", ResponseNamespace="http://wildwestdomains.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string OrderResourceRenewals(string sCLTRID, Credential credential, Shopper shopper, ResourceRenewal[] items, string sROID) {
            object[] results = this.Invoke("OrderResourceRenewals", new object[] {
                        sCLTRID,
                        credential,
                        shopper,
                        items,
                        sROID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OrderResourceRenewalsAsync(string sCLTRID, Credential credential, Shopper shopper, ResourceRenewal[] items, string sROID) {
            this.OrderResourceRenewalsAsync(sCLTRID, credential, shopper, items, sROID, null);
        }
        
        /// <remarks/>
        public void OrderResourceRenewalsAsync(string sCLTRID, Credential credential, Shopper shopper, ResourceRenewal[] items, string sROID, object userState) {
            if ((this.OrderResourceRenewalsOperationCompleted == null)) {
                this.OrderResourceRenewalsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOrderResourceRenewalsOperationCompleted);
            }
            this.InvokeAsync("OrderResourceRenewals", new object[] {
                        sCLTRID,
                        credential,
                        shopper,
                        items,
                        sROID}, this.OrderResourceRenewalsOperationCompleted, userState);
        }
        
        private void OnOrderResourceRenewalsOperationCompleted(object arg) {
            if ((this.OrderResourceRenewalsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OrderResourceRenewalsCompleted(this, new OrderResourceRenewalsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wildwestdomains.com/webservices/OrderDomainBackOrders", RequestNamespace="http://wildwestdomains.com/webservices/", ResponseNamespace="http://wildwestdomains.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string OrderDomainBackOrders(string sCLTRID, Credential credential, Shopper shopper, DomainBackOrder[] items, string sROID) {
            object[] results = this.Invoke("OrderDomainBackOrders", new object[] {
                        sCLTRID,
                        credential,
                        shopper,
                        items,
                        sROID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OrderDomainBackOrdersAsync(string sCLTRID, Credential credential, Shopper shopper, DomainBackOrder[] items, string sROID) {
            this.OrderDomainBackOrdersAsync(sCLTRID, credential, shopper, items, sROID, null);
        }
        
        /// <remarks/>
        public void OrderDomainBackOrdersAsync(string sCLTRID, Credential credential, Shopper shopper, DomainBackOrder[] items, string sROID, object userState) {
            if ((this.OrderDomainBackOrdersOperationCompleted == null)) {
                this.OrderDomainBackOrdersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOrderDomainBackOrdersOperationCompleted);
            }
            this.InvokeAsync("OrderDomainBackOrders", new object[] {
                        sCLTRID,
                        credential,
                        shopper,
                        items,
                        sROID}, this.OrderDomainBackOrdersOperationCompleted, userState);
        }
        
        private void OnOrderDomainBackOrdersOperationCompleted(object arg) {
            if ((this.OrderDomainBackOrdersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OrderDomainBackOrdersCompleted(this, new OrderDomainBackOrdersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wildwestdomains.com/webservices/Cancel", RequestNamespace="http://wildwestdomains.com/webservices/", ResponseNamespace="http://wildwestdomains.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Cancel(string sCLTRID, Credential credential, string sType, string[] sIDArray) {
            object[] results = this.Invoke("Cancel", new object[] {
                        sCLTRID,
                        credential,
                        sType,
                        sIDArray});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelAsync(string sCLTRID, Credential credential, string sType, string[] sIDArray) {
            this.CancelAsync(sCLTRID, credential, sType, sIDArray, null);
        }
        
        /// <remarks/>
        public void CancelAsync(string sCLTRID, Credential credential, string sType, string[] sIDArray, object userState) {
            if ((this.CancelOperationCompleted == null)) {
                this.CancelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelOperationCompleted);
            }
            this.InvokeAsync("Cancel", new object[] {
                        sCLTRID,
                        credential,
                        sType,
                        sIDArray}, this.CancelOperationCompleted, userState);
        }
        
        private void OnCancelOperationCompleted(object arg) {
            if ((this.CancelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelCompleted(this, new CancelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wildwestdomains.com/webservices/UpdateDomainOwnership", RequestNamespace="http://wildwestdomains.com/webservices/", ResponseNamespace="http://wildwestdomains.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateDomainOwnership(string sCLTRID, Credential credential, string sResourceID, string sLosingOwner, GainingOwner gaining) {
            object[] results = this.Invoke("UpdateDomainOwnership", new object[] {
                        sCLTRID,
                        credential,
                        sResourceID,
                        sLosingOwner,
                        gaining});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDomainOwnershipAsync(string sCLTRID, Credential credential, string sResourceID, string sLosingOwner, GainingOwner gaining) {
            this.UpdateDomainOwnershipAsync(sCLTRID, credential, sResourceID, sLosingOwner, gaining, null);
        }
        
        /// <remarks/>
        public void UpdateDomainOwnershipAsync(string sCLTRID, Credential credential, string sResourceID, string sLosingOwner, GainingOwner gaining, object userState) {
            if ((this.UpdateDomainOwnershipOperationCompleted == null)) {
                this.UpdateDomainOwnershipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDomainOwnershipOperationCompleted);
            }
            this.InvokeAsync("UpdateDomainOwnership", new object[] {
                        sCLTRID,
                        credential,
                        sResourceID,
                        sLosingOwner,
                        gaining}, this.UpdateDomainOwnershipOperationCompleted, userState);
        }
        
        private void OnUpdateDomainOwnershipOperationCompleted(object arg) {
            if ((this.UpdateDomainOwnershipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDomainOwnershipCompleted(this, new UpdateDomainOwnershipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wildwestdomains.com/webservices/ResetPassword", RequestNamespace="http://wildwestdomains.com/webservices/", ResponseNamespace="http://wildwestdomains.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ResetPassword(string sCLTRID, Credential credential, string sUser, string sPwd, string sEmail, string sPwdHint) {
            object[] results = this.Invoke("ResetPassword", new object[] {
                        sCLTRID,
                        credential,
                        sUser,
                        sPwd,
                        sEmail,
                        sPwdHint});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ResetPasswordAsync(string sCLTRID, Credential credential, string sUser, string sPwd, string sEmail, string sPwdHint) {
            this.ResetPasswordAsync(sCLTRID, credential, sUser, sPwd, sEmail, sPwdHint, null);
        }
        
        /// <remarks/>
        public void ResetPasswordAsync(string sCLTRID, Credential credential, string sUser, string sPwd, string sEmail, string sPwdHint, object userState) {
            if ((this.ResetPasswordOperationCompleted == null)) {
                this.ResetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetPasswordOperationCompleted);
            }
            this.InvokeAsync("ResetPassword", new object[] {
                        sCLTRID,
                        credential,
                        sUser,
                        sPwd,
                        sEmail,
                        sPwdHint}, this.ResetPasswordOperationCompleted, userState);
        }
        
        private void OnResetPasswordOperationCompleted(object arg) {
            if ((this.ResetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetPasswordCompleted(this, new ResetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wildwestdomains.com/webservices/SetShopperInfo", RequestNamespace="http://wildwestdomains.com/webservices/", ResponseNamespace="http://wildwestdomains.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetShopperInfo(string sCLTRID, Credential credential, string sUser, string sEmail, string sFirstName, string sLastName, string sPhone, string sFax, string sCompany, string sAddress, string sCity, string sState, string sZip, string sCountry, string sShopperPin) {
            object[] results = this.Invoke("SetShopperInfo", new object[] {
                        sCLTRID,
                        credential,
                        sUser,
                        sEmail,
                        sFirstName,
                        sLastName,
                        sPhone,
                        sFax,
                        sCompany,
                        sAddress,
                        sCity,
                        sState,
                        sZip,
                        sCountry,
                        sShopperPin});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetShopperInfoAsync(string sCLTRID, Credential credential, string sUser, string sEmail, string sFirstName, string sLastName, string sPhone, string sFax, string sCompany, string sAddress, string sCity, string sState, string sZip, string sCountry, string sShopperPin) {
            this.SetShopperInfoAsync(sCLTRID, credential, sUser, sEmail, sFirstName, sLastName, sPhone, sFax, sCompany, sAddress, sCity, sState, sZip, sCountry, sShopperPin, null);
        }
        
        /// <remarks/>
        public void SetShopperInfoAsync(
                    string sCLTRID, 
                    Credential credential, 
                    string sUser, 
                    string sEmail, 
                    string sFirstName, 
                    string sLastName, 
                    string sPhone, 
                    string sFax, 
                    string sCompany, 
                    string sAddress, 
                    string sCity, 
                    string sState, 
                    string sZip, 
                    string sCountry, 
                    string sShopperPin, 
                    object userState) {
            if ((this.SetShopperInfoOperationCompleted == null)) {
                this.SetShopperInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetShopperInfoOperationCompleted);
            }
            this.InvokeAsync("SetShopperInfo", new object[] {
                        sCLTRID,
                        credential,
                        sUser,
                        sEmail,
                        sFirstName,
                        sLastName,
                        sPhone,
                        sFax,
                        sCompany,
                        sAddress,
                        sCity,
                        sState,
                        sZip,
                        sCountry,
                        sShopperPin}, this.SetShopperInfoOperationCompleted, userState);
        }
        
        private void OnSetShopperInfoOperationCompleted(object arg) {
            if ((this.SetShopperInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetShopperInfoCompleted(this, new SetShopperInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wildwestdomains.com/webservices/CheckUser", RequestNamespace="http://wildwestdomains.com/webservices/", ResponseNamespace="http://wildwestdomains.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckUser(string sCLTRID, Credential credential, string sType, string sUser, string sPwd) {
            object[] results = this.Invoke("CheckUser", new object[] {
                        sCLTRID,
                        credential,
                        sType,
                        sUser,
                        sPwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckUserAsync(string sCLTRID, Credential credential, string sType, string sUser, string sPwd) {
            this.CheckUserAsync(sCLTRID, credential, sType, sUser, sPwd, null);
        }
        
        /// <remarks/>
        public void CheckUserAsync(string sCLTRID, Credential credential, string sType, string sUser, string sPwd, object userState) {
            if ((this.CheckUserOperationCompleted == null)) {
                this.CheckUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckUserOperationCompleted);
            }
            this.InvokeAsync("CheckUser", new object[] {
                        sCLTRID,
                        credential,
                        sType,
                        sUser,
                        sPwd}, this.CheckUserOperationCompleted, userState);
        }
        
        private void OnCheckUserOperationCompleted(object arg) {
            if ((this.CheckUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckUserCompleted(this, new CheckUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wildwestdomains.com/webservices/SetupDomainAlert", RequestNamespace="http://wildwestdomains.com/webservices/", ResponseNamespace="http://wildwestdomains.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetupDomainAlert(string sCLTRID, Credential credential, DomainAlert domainAlert, ContactInfo registrant) {
            object[] results = this.Invoke("SetupDomainAlert", new object[] {
                        sCLTRID,
                        credential,
                        domainAlert,
                        registrant});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetupDomainAlertAsync(string sCLTRID, Credential credential, DomainAlert domainAlert, ContactInfo registrant) {
            this.SetupDomainAlertAsync(sCLTRID, credential, domainAlert, registrant, null);
        }
        
        /// <remarks/>
        public void SetupDomainAlertAsync(string sCLTRID, Credential credential, DomainAlert domainAlert, ContactInfo registrant, object userState) {
            if ((this.SetupDomainAlertOperationCompleted == null)) {
                this.SetupDomainAlertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetupDomainAlertOperationCompleted);
            }
            this.InvokeAsync("SetupDomainAlert", new object[] {
                        sCLTRID,
                        credential,
                        domainAlert,
                        registrant}, this.SetupDomainAlertOperationCompleted, userState);
        }
        
        private void OnSetupDomainAlertOperationCompleted(object arg) {
            if ((this.SetupDomainAlertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetupDomainAlertCompleted(this, new SetupDomainAlertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wildwestdomains.com/webservices/UpdateDomainAlert", RequestNamespace="http://wildwestdomains.com/webservices/", ResponseNamespace="http://wildwestdomains.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateDomainAlert(string sCLTRID, Credential credential, DomainAlert domainAlert, string sDomainMonitorID, ContactInfo registrant) {
            object[] results = this.Invoke("UpdateDomainAlert", new object[] {
                        sCLTRID,
                        credential,
                        domainAlert,
                        sDomainMonitorID,
                        registrant});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDomainAlertAsync(string sCLTRID, Credential credential, DomainAlert domainAlert, string sDomainMonitorID, ContactInfo registrant) {
            this.UpdateDomainAlertAsync(sCLTRID, credential, domainAlert, sDomainMonitorID, registrant, null);
        }
        
        /// <remarks/>
        public void UpdateDomainAlertAsync(string sCLTRID, Credential credential, DomainAlert domainAlert, string sDomainMonitorID, ContactInfo registrant, object userState) {
            if ((this.UpdateDomainAlertOperationCompleted == null)) {
                this.UpdateDomainAlertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDomainAlertOperationCompleted);
            }
            this.InvokeAsync("UpdateDomainAlert", new object[] {
                        sCLTRID,
                        credential,
                        domainAlert,
                        sDomainMonitorID,
                        registrant}, this.UpdateDomainAlertOperationCompleted, userState);
        }
        
        private void OnUpdateDomainAlertOperationCompleted(object arg) {
            if ((this.UpdateDomainAlertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDomainAlertCompleted(this, new UpdateDomainAlertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wildwestdomains.com/webservices/RemoveDomainAlert", RequestNamespace="http://wildwestdomains.com/webservices/", ResponseNamespace="http://wildwestdomains.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RemoveDomainAlert(string sCLTRID, Credential credential, string sDomainMonitorID, string sUser) {
            object[] results = this.Invoke("RemoveDomainAlert", new object[] {
                        sCLTRID,
                        credential,
                        sDomainMonitorID,
                        sUser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveDomainAlertAsync(string sCLTRID, Credential credential, string sDomainMonitorID, string sUser) {
            this.RemoveDomainAlertAsync(sCLTRID, credential, sDomainMonitorID, sUser, null);
        }
        
        /// <remarks/>
        public void RemoveDomainAlertAsync(string sCLTRID, Credential credential, string sDomainMonitorID, string sUser, object userState) {
            if ((this.RemoveDomainAlertOperationCompleted == null)) {
                this.RemoveDomainAlertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveDomainAlertOperationCompleted);
            }
            this.InvokeAsync("RemoveDomainAlert", new object[] {
                        sCLTRID,
                        credential,
                        sDomainMonitorID,
                        sUser}, this.RemoveDomainAlertOperationCompleted, userState);
        }
        
        private void OnRemoveDomainAlertOperationCompleted(object arg) {
            if ((this.RemoveDomainAlertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveDomainAlertCompleted(this, new RemoveDomainAlertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wildwestdomains.com/webservices/GetDomainAlertCredits", RequestNamespace="http://wildwestdomains.com/webservices/", ResponseNamespace="http://wildwestdomains.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDomainAlertCredits(string sCLTRID, Credential credential, string sUser) {
            object[] results = this.Invoke("GetDomainAlertCredits", new object[] {
                        sCLTRID,
                        credential,
                        sUser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDomainAlertCreditsAsync(string sCLTRID, Credential credential, string sUser) {
            this.GetDomainAlertCreditsAsync(sCLTRID, credential, sUser, null);
        }
        
        /// <remarks/>
        public void GetDomainAlertCreditsAsync(string sCLTRID, Credential credential, string sUser, object userState) {
            if ((this.GetDomainAlertCreditsOperationCompleted == null)) {
                this.GetDomainAlertCreditsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDomainAlertCreditsOperationCompleted);
            }
            this.InvokeAsync("GetDomainAlertCredits", new object[] {
                        sCLTRID,
                        credential,
                        sUser}, this.GetDomainAlertCreditsOperationCompleted, userState);
        }
        
        private void OnGetDomainAlertCreditsOperationCompleted(object arg) {
            if ((this.GetDomainAlertCreditsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDomainAlertCreditsCompleted(this, new GetDomainAlertCreditsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wildwestdomains.com/webservices/GetMonitoredDomainList", RequestNamespace="http://wildwestdomains.com/webservices/", ResponseNamespace="http://wildwestdomains.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMonitoredDomainList(string sCLTRID, Credential credential, string sUser, int nPage, int nRowsPerPage) {
            object[] results = this.Invoke("GetMonitoredDomainList", new object[] {
                        sCLTRID,
                        credential,
                        sUser,
                        nPage,
                        nRowsPerPage});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMonitoredDomainListAsync(string sCLTRID, Credential credential, string sUser, int nPage, int nRowsPerPage) {
            this.GetMonitoredDomainListAsync(sCLTRID, credential, sUser, nPage, nRowsPerPage, null);
        }
        
        /// <remarks/>
        public void GetMonitoredDomainListAsync(string sCLTRID, Credential credential, string sUser, int nPage, int nRowsPerPage, object userState) {
            if ((this.GetMonitoredDomainListOperationCompleted == null)) {
                this.GetMonitoredDomainListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMonitoredDomainListOperationCompleted);
            }
            this.InvokeAsync("GetMonitoredDomainList", new object[] {
                        sCLTRID,
                        credential,
                        sUser,
                        nPage,
                        nRowsPerPage}, this.GetMonitoredDomainListOperationCompleted, userState);
        }
        
        private void OnGetMonitoredDomainListOperationCompleted(object arg) {
            if ((this.GetMonitoredDomainListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMonitoredDomainListCompleted(this, new GetMonitoredDomainListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wildwestdomains.com/webservices/GetExpiringNameList", RequestNamespace="http://wildwestdomains.com/webservices/", ResponseNamespace="http://wildwestdomains.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetExpiringNameList(string sCLTRID, Credential credential, string sUser, int nLength, string sDashes, string sNumbers, string sWildCardSearch, string sSearchCriteria, string sTLDs, int nPage, int nRowsPerPage) {
            object[] results = this.Invoke("GetExpiringNameList", new object[] {
                        sCLTRID,
                        credential,
                        sUser,
                        nLength,
                        sDashes,
                        sNumbers,
                        sWildCardSearch,
                        sSearchCriteria,
                        sTLDs,
                        nPage,
                        nRowsPerPage});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetExpiringNameListAsync(string sCLTRID, Credential credential, string sUser, int nLength, string sDashes, string sNumbers, string sWildCardSearch, string sSearchCriteria, string sTLDs, int nPage, int nRowsPerPage) {
            this.GetExpiringNameListAsync(sCLTRID, credential, sUser, nLength, sDashes, sNumbers, sWildCardSearch, sSearchCriteria, sTLDs, nPage, nRowsPerPage, null);
        }
        
        /// <remarks/>
        public void GetExpiringNameListAsync(string sCLTRID, Credential credential, string sUser, int nLength, string sDashes, string sNumbers, string sWildCardSearch, string sSearchCriteria, string sTLDs, int nPage, int nRowsPerPage, object userState) {
            if ((this.GetExpiringNameListOperationCompleted == null)) {
                this.GetExpiringNameListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExpiringNameListOperationCompleted);
            }
            this.InvokeAsync("GetExpiringNameList", new object[] {
                        sCLTRID,
                        credential,
                        sUser,
                        nLength,
                        sDashes,
                        sNumbers,
                        sWildCardSearch,
                        sSearchCriteria,
                        sTLDs,
                        nPage,
                        nRowsPerPage}, this.GetExpiringNameListOperationCompleted, userState);
        }
        
        private void OnGetExpiringNameListOperationCompleted(object arg) {
            if ((this.GetExpiringNameListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExpiringNameListCompleted(this, new GetExpiringNameListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wildwestdomains.com/webservices/DomainForwarding", RequestNamespace="http://wildwestdomains.com/webservices/", ResponseNamespace="http://wildwestdomains.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DomainForwarding(string sCLTRID, Credential credential, string sUser, int nDomainID, string sForwardingURL, string sMngTRID) {
            object[] results = this.Invoke("DomainForwarding", new object[] {
                        sCLTRID,
                        credential,
                        sUser,
                        nDomainID,
                        sForwardingURL,
                        sMngTRID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DomainForwardingAsync(string sCLTRID, Credential credential, string sUser, int nDomainID, string sForwardingURL, string sMngTRID) {
            this.DomainForwardingAsync(sCLTRID, credential, sUser, nDomainID, sForwardingURL, sMngTRID, null);
        }
        
        /// <remarks/>
        public void DomainForwardingAsync(string sCLTRID, Credential credential, string sUser, int nDomainID, string sForwardingURL, string sMngTRID, object userState) {
            if ((this.DomainForwardingOperationCompleted == null)) {
                this.DomainForwardingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDomainForwardingOperationCompleted);
            }
            this.InvokeAsync("DomainForwarding", new object[] {
                        sCLTRID,
                        credential,
                        sUser,
                        nDomainID,
                        sForwardingURL,
                        sMngTRID}, this.DomainForwardingOperationCompleted, userState);
        }
        
        private void OnDomainForwardingOperationCompleted(object arg) {
            if ((this.DomainForwardingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DomainForwardingCompleted(this, new DomainForwardingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wildwestdomains.com/webservices/UpdateNameServer", RequestNamespace="http://wildwestdomains.com/webservices/", ResponseNamespace="http://wildwestdomains.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateNameServer(string sCLTRID, Credential credential, Domain[] domainArray, NS[] nsArray) {
            object[] results = this.Invoke("UpdateNameServer", new object[] {
                        sCLTRID,
                        credential,
                        domainArray,
                        nsArray});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateNameServerAsync(string sCLTRID, Credential credential, Domain[] domainArray, NS[] nsArray) {
            this.UpdateNameServerAsync(sCLTRID, credential, domainArray, nsArray, null);
        }
        
        /// <remarks/>
        public void UpdateNameServerAsync(string sCLTRID, Credential credential, Domain[] domainArray, NS[] nsArray, object userState) {
            if ((this.UpdateNameServerOperationCompleted == null)) {
                this.UpdateNameServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateNameServerOperationCompleted);
            }
            this.InvokeAsync("UpdateNameServer", new object[] {
                        sCLTRID,
                        credential,
                        domainArray,
                        nsArray}, this.UpdateNameServerOperationCompleted, userState);
        }
        
        private void OnUpdateNameServerOperationCompleted(object arg) {
            if ((this.UpdateNameServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateNameServerCompleted(this, new UpdateNameServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wildwestdomains.com/webservices/UpdateDomainContact", RequestNamespace="http://wildwestdomains.com/webservices/", ResponseNamespace="http://wildwestdomains.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateDomainContact(string sCLTRID, Credential credential, Domain[] domainArray, ContactInfo registrant, ContactInfo admin, ContactInfo billing, ContactInfo tech) {
            object[] results = this.Invoke("UpdateDomainContact", new object[] {
                        sCLTRID,
                        credential,
                        domainArray,
                        registrant,
                        admin,
                        billing,
                        tech});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDomainContactAsync(string sCLTRID, Credential credential, Domain[] domainArray, ContactInfo registrant, ContactInfo admin, ContactInfo billing, ContactInfo tech) {
            this.UpdateDomainContactAsync(sCLTRID, credential, domainArray, registrant, admin, billing, tech, null);
        }
        
        /// <remarks/>
        public void UpdateDomainContactAsync(string sCLTRID, Credential credential, Domain[] domainArray, ContactInfo registrant, ContactInfo admin, ContactInfo billing, ContactInfo tech, object userState) {
            if ((this.UpdateDomainContactOperationCompleted == null)) {
                this.UpdateDomainContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDomainContactOperationCompleted);
            }
            this.InvokeAsync("UpdateDomainContact", new object[] {
                        sCLTRID,
                        credential,
                        domainArray,
                        registrant,
                        admin,
                        billing,
                        tech}, this.UpdateDomainContactOperationCompleted, userState);
        }
        
        private void OnUpdateDomainContactOperationCompleted(object arg) {
            if ((this.UpdateDomainContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDomainContactCompleted(this, new UpdateDomainContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wildwestdomains.com/webservices/SetDomainLocking", RequestNamespace="http://wildwestdomains.com/webservices/", ResponseNamespace="http://wildwestdomains.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetDomainLocking(string sCLTRID, Credential credential, Domain[] domainArray, string sLock) {
            object[] results = this.Invoke("SetDomainLocking", new object[] {
                        sCLTRID,
                        credential,
                        domainArray,
                        sLock});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetDomainLockingAsync(string sCLTRID, Credential credential, Domain[] domainArray, string sLock) {
            this.SetDomainLockingAsync(sCLTRID, credential, domainArray, sLock, null);
        }
        
        /// <remarks/>
        public void SetDomainLockingAsync(string sCLTRID, Credential credential, Domain[] domainArray, string sLock, object userState) {
            if ((this.SetDomainLockingOperationCompleted == null)) {
                this.SetDomainLockingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetDomainLockingOperationCompleted);
            }
            this.InvokeAsync("SetDomainLocking", new object[] {
                        sCLTRID,
                        credential,
                        domainArray,
                        sLock}, this.SetDomainLockingOperationCompleted, userState);
        }
        
        private void OnSetDomainLockingOperationCompleted(object arg) {
            if ((this.SetDomainLockingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetDomainLockingCompleted(this, new SetDomainLockingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wildwestdomains.com/webservices/ManageTransfer", RequestNamespace="http://wildwestdomains.com/webservices/", ResponseNamespace="http://wildwestdomains.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ManageTransfer(string sCLTRID, Credential credential, Domain[] domainArray, string sAction) {
            object[] results = this.Invoke("ManageTransfer", new object[] {
                        sCLTRID,
                        credential,
                        domainArray,
                        sAction});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ManageTransferAsync(string sCLTRID, Credential credential, Domain[] domainArray, string sAction) {
            this.ManageTransferAsync(sCLTRID, credential, domainArray, sAction, null);
        }
        
        /// <remarks/>
        public void ManageTransferAsync(string sCLTRID, Credential credential, Domain[] domainArray, string sAction, object userState) {
            if ((this.ManageTransferOperationCompleted == null)) {
                this.ManageTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnManageTransferOperationCompleted);
            }
            this.InvokeAsync("ManageTransfer", new object[] {
                        sCLTRID,
                        credential,
                        domainArray,
                        sAction}, this.ManageTransferOperationCompleted, userState);
        }
        
        private void OnManageTransferOperationCompleted(object arg) {
            if ((this.ManageTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ManageTransferCompleted(this, new ManageTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wildwestdomains.com/webservices/UpdateDomainForwarding", RequestNamespace="http://wildwestdomains.com/webservices/", ResponseNamespace="http://wildwestdomains.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateDomainForwarding(string sCLTRID, Credential credential, Domain[] domainArray, string sAction, string sForwardingURL) {
            object[] results = this.Invoke("UpdateDomainForwarding", new object[] {
                        sCLTRID,
                        credential,
                        domainArray,
                        sAction,
                        sForwardingURL});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDomainForwardingAsync(string sCLTRID, Credential credential, Domain[] domainArray, string sAction, string sForwardingURL) {
            this.UpdateDomainForwardingAsync(sCLTRID, credential, domainArray, sAction, sForwardingURL, null);
        }
        
        /// <remarks/>
        public void UpdateDomainForwardingAsync(string sCLTRID, Credential credential, Domain[] domainArray, string sAction, string sForwardingURL, object userState) {
            if ((this.UpdateDomainForwardingOperationCompleted == null)) {
                this.UpdateDomainForwardingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDomainForwardingOperationCompleted);
            }
            this.InvokeAsync("UpdateDomainForwarding", new object[] {
                        sCLTRID,
                        credential,
                        domainArray,
                        sAction,
                        sForwardingURL}, this.UpdateDomainForwardingOperationCompleted, userState);
        }
        
        private void OnUpdateDomainForwardingOperationCompleted(object arg) {
            if ((this.UpdateDomainForwardingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDomainForwardingCompleted(this, new UpdateDomainForwardingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wildwestdomains.com/webservices/ModifyDNS", RequestNamespace="http://wildwestdomains.com/webservices/", ResponseNamespace="http://wildwestdomains.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ModifyDNS(string sCLTRID, Credential credential, DNSRequest[] dnsRequestArray, string sDomain) {
            object[] results = this.Invoke("ModifyDNS", new object[] {
                        sCLTRID,
                        credential,
                        dnsRequestArray,
                        sDomain});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyDNSAsync(string sCLTRID, Credential credential, DNSRequest[] dnsRequestArray, string sDomain) {
            this.ModifyDNSAsync(sCLTRID, credential, dnsRequestArray, sDomain, null);
        }
        
        /// <remarks/>
        public void ModifyDNSAsync(string sCLTRID, Credential credential, DNSRequest[] dnsRequestArray, string sDomain, object userState) {
            if ((this.ModifyDNSOperationCompleted == null)) {
                this.ModifyDNSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyDNSOperationCompleted);
            }
            this.InvokeAsync("ModifyDNS", new object[] {
                        sCLTRID,
                        credential,
                        dnsRequestArray,
                        sDomain}, this.ModifyDNSOperationCompleted, userState);
        }
        
        private void OnModifyDNSOperationCompleted(object arg) {
            if ((this.ModifyDNSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyDNSCompleted(this, new ModifyDNSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public void CancelAsync1(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wildwestdomains.com/webservices/")]
    public partial class Credential {
        
        private string accountField;
        
        private string passwordField;
        
        /// <remarks/>
        public string Account {
            get {
                return this.accountField;
            }
            set {
                this.accountField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wildwestdomains.com/webservices/")]
    public partial class DNSRequest {
        
        private string recTypeField;
        
        private string actionField;
        
        private string keyField;
        
        private int ttlField;
        
        private string recValueField;
        
        /// <remarks/>
        public string recType {
            get {
                return this.recTypeField;
            }
            set {
                this.recTypeField = value;
            }
        }
        
        /// <remarks/>
        public string action {
            get {
                return this.actionField;
            }
            set {
                this.actionField = value;
            }
        }
        
        /// <remarks/>
        public string key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public int ttl {
            get {
                return this.ttlField;
            }
            set {
                this.ttlField = value;
            }
        }
        
        /// <remarks/>
        public string recValue {
            get {
                return this.recValueField;
            }
            set {
                this.recValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wildwestdomains.com/webservices/")]
    public partial class Domain {
        
        private string resourceidField;
        
        private string mngTRIDField;
        
        private string transferKeyField;
        
        private string newAuthInfoField;
        
        /// <remarks/>
        public string resourceid {
            get {
                return this.resourceidField;
            }
            set {
                this.resourceidField = value;
            }
        }
        
        /// <remarks/>
        public string mngTRID {
            get {
                return this.mngTRIDField;
            }
            set {
                this.mngTRIDField = value;
            }
        }
        
        /// <remarks/>
        public string transferKey {
            get {
                return this.transferKeyField;
            }
            set {
                this.transferKeyField = value;
            }
        }
        
        /// <remarks/>
        public string newAuthInfo {
            get {
                return this.newAuthInfoField;
            }
            set {
                this.newAuthInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wildwestdomains.com/webservices/")]
    public partial class DomainAlert {
        
        private string userField;
        
        private string domainField;
        
        private string emailField;
        
        private string tldField;
        
        private int privateRegField;
        
        private int backorderField;
        
        /// <remarks/>
        public string user {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <remarks/>
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string tld {
            get {
                return this.tldField;
            }
            set {
                this.tldField = value;
            }
        }
        
        /// <remarks/>
        public int privateReg {
            get {
                return this.privateRegField;
            }
            set {
                this.privateRegField = value;
            }
        }
        
        /// <remarks/>
        public int backorder {
            get {
                return this.backorderField;
            }
            set {
                this.backorderField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wildwestdomains.com/webservices/")]
    public partial class ShopperNoDBP {
        
        private string userField;
        
        private string pwdField;
        
        private string pwdhintField;
        
        private string emailField;
        
        private string firstnameField;
        
        private string lastnameField;
        
        private string phoneField;
        
        /// <remarks/>
        public string user {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <remarks/>
        public string pwd {
            get {
                return this.pwdField;
            }
            set {
                this.pwdField = value;
            }
        }
        
        /// <remarks/>
        public string pwdhint {
            get {
                return this.pwdhintField;
            }
            set {
                this.pwdhintField = value;
            }
        }
        
        /// <remarks/>
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string firstname {
            get {
                return this.firstnameField;
            }
            set {
                this.firstnameField = value;
            }
        }
        
        /// <remarks/>
        public string lastname {
            get {
                return this.lastnameField;
            }
            set {
                this.lastnameField = value;
            }
        }
        
        /// <remarks/>
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wildwestdomains.com/webservices/")]
    public partial class GainingOwner {
        
        private ShopperNoDBP shopperNoDBPField;
        
        private ContactInfo registrantField;
        
        private ContactInfo adminField;
        
        private ContactInfo billingField;
        
        private ContactInfo techField;
        
        /// <remarks/>
        public ShopperNoDBP shopperNoDBP {
            get {
                return this.shopperNoDBPField;
            }
            set {
                this.shopperNoDBPField = value;
            }
        }
        
        /// <remarks/>
        public ContactInfo registrant {
            get {
                return this.registrantField;
            }
            set {
                this.registrantField = value;
            }
        }
        
        /// <remarks/>
        public ContactInfo admin {
            get {
                return this.adminField;
            }
            set {
                this.adminField = value;
            }
        }
        
        /// <remarks/>
        public ContactInfo billing {
            get {
                return this.billingField;
            }
            set {
                this.billingField = value;
            }
        }
        
        /// <remarks/>
        public ContactInfo tech {
            get {
                return this.techField;
            }
            set {
                this.techField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wildwestdomains.com/webservices/")]
    public partial class ContactInfo {
        
        private string fnameField;
        
        private string lnameField;
        
        private string orgField;
        
        private string emailField;
        
        private string sa1Field;
        
        private string sa2Field;
        
        private string cityField;
        
        private string spField;
        
        private string pcField;
        
        private string ccField;
        
        private string phoneField;
        
        private string faxField;
        
        /// <remarks/>
        public string fname {
            get {
                return this.fnameField;
            }
            set {
                this.fnameField = value;
            }
        }
        
        /// <remarks/>
        public string lname {
            get {
                return this.lnameField;
            }
            set {
                this.lnameField = value;
            }
        }
        
        /// <remarks/>
        public string org {
            get {
                return this.orgField;
            }
            set {
                this.orgField = value;
            }
        }
        
        /// <remarks/>
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string sa1 {
            get {
                return this.sa1Field;
            }
            set {
                this.sa1Field = value;
            }
        }
        
        /// <remarks/>
        public string sa2 {
            get {
                return this.sa2Field;
            }
            set {
                this.sa2Field = value;
            }
        }
        
        /// <remarks/>
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string sp {
            get {
                return this.spField;
            }
            set {
                this.spField = value;
            }
        }
        
        /// <remarks/>
        public string pc {
            get {
                return this.pcField;
            }
            set {
                this.pcField = value;
            }
        }
        
        /// <remarks/>
        public string cc {
            get {
                return this.ccField;
            }
            set {
                this.ccField = value;
            }
        }
        
        /// <remarks/>
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wildwestdomains.com/webservices/")]
    public partial class NS {
        
        private string nameField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wildwestdomains.com/webservices/")]
    public partial class Nexus {
        
        private string categoryField;
        
        private string useField;
        
        private string countryField;
        
        /// <remarks/>
        public string category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        public string use {
            get {
                return this.useField;
            }
            set {
                this.useField = value;
            }
        }
        
        /// <remarks/>
        public string country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DomainBackOrder))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DomainTransfer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ResourceRenewal))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DomainRenewal))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DomainByProxy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DomainRegistration))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OrderItem))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wildwestdomains.com/webservices/")]
    public abstract partial class Order {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wildwestdomains.com/webservices/")]
    public partial class DomainBackOrder : Order {
        
        private OrderItem orderField;
        
        private bool privateBackOrderField;
        
        private string sldField;
        
        private string tldField;
        
        private ContactInfo registrantField;
        
        private Nexus nexusField;
        
        private ContactInfo adminField;
        
        private ContactInfo billingField;
        
        private ContactInfo techField;
        
        /// <remarks/>
        public OrderItem order {
            get {
                return this.orderField;
            }
            set {
                this.orderField = value;
            }
        }
        
        /// <remarks/>
        public bool privateBackOrder {
            get {
                return this.privateBackOrderField;
            }
            set {
                this.privateBackOrderField = value;
            }
        }
        
        /// <remarks/>
        public string sld {
            get {
                return this.sldField;
            }
            set {
                this.sldField = value;
            }
        }
        
        /// <remarks/>
        public string tld {
            get {
                return this.tldField;
            }
            set {
                this.tldField = value;
            }
        }
        
        /// <remarks/>
        public ContactInfo registrant {
            get {
                return this.registrantField;
            }
            set {
                this.registrantField = value;
            }
        }
        
        /// <remarks/>
        public Nexus nexus {
            get {
                return this.nexusField;
            }
            set {
                this.nexusField = value;
            }
        }
        
        /// <remarks/>
        public ContactInfo admin {
            get {
                return this.adminField;
            }
            set {
                this.adminField = value;
            }
        }
        
        /// <remarks/>
        public ContactInfo billing {
            get {
                return this.billingField;
            }
            set {
                this.billingField = value;
            }
        }
        
        /// <remarks/>
        public ContactInfo tech {
            get {
                return this.techField;
            }
            set {
                this.techField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wildwestdomains.com/webservices/")]
    public partial class OrderItem : Order {
        
        private int productidField;
        
        private uint quantityField;
        
        private string riidField;
        
        private double durationField;
        
        /// <remarks/>
        public int productid {
            get {
                return this.productidField;
            }
            set {
                this.productidField = value;
            }
        }
        
        /// <remarks/>
        public uint quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public string riid {
            get {
                return this.riidField;
            }
            set {
                this.riidField = value;
            }
        }
        
        /// <remarks/>
        public double duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wildwestdomains.com/webservices/")]
    public partial class DomainTransfer : Order {
        
        private OrderItem orderField;
        
        private string sldField;
        
        private string tldField;
        
        private string authInfoField;
        
        /// <remarks/>
        public OrderItem order {
            get {
                return this.orderField;
            }
            set {
                this.orderField = value;
            }
        }
        
        /// <remarks/>
        public string sld {
            get {
                return this.sldField;
            }
            set {
                this.sldField = value;
            }
        }
        
        /// <remarks/>
        public string tld {
            get {
                return this.tldField;
            }
            set {
                this.tldField = value;
            }
        }
        
        /// <remarks/>
        public string authInfo {
            get {
                return this.authInfoField;
            }
            set {
                this.authInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wildwestdomains.com/webservices/")]
    public partial class ResourceRenewal : Order {
        
        private OrderItem orderField;
        
        private string resourceidField;
        
        /// <remarks/>
        public OrderItem order {
            get {
                return this.orderField;
            }
            set {
                this.orderField = value;
            }
        }
        
        /// <remarks/>
        public string resourceid {
            get {
                return this.resourceidField;
            }
            set {
                this.resourceidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wildwestdomains.com/webservices/")]
    public partial class DomainRenewal : Order {
        
        private OrderItem orderField;
        
        private string resourceidField;
        
        private string sldField;
        
        private string tldField;
        
        private int periodField;
        
        /// <remarks/>
        public OrderItem order {
            get {
                return this.orderField;
            }
            set {
                this.orderField = value;
            }
        }
        
        /// <remarks/>
        public string resourceid {
            get {
                return this.resourceidField;
            }
            set {
                this.resourceidField = value;
            }
        }
        
        /// <remarks/>
        public string sld {
            get {
                return this.sldField;
            }
            set {
                this.sldField = value;
            }
        }
        
        /// <remarks/>
        public string tld {
            get {
                return this.tldField;
            }
            set {
                this.tldField = value;
            }
        }
        
        /// <remarks/>
        public int period {
            get {
                return this.periodField;
            }
            set {
                this.periodField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wildwestdomains.com/webservices/")]
    public partial class DomainByProxy : Order {
        
        private OrderItem orderField;
        
        private string sldField;
        
        private string tldField;
        
        private string resourceidField;
        
        /// <remarks/>
        public OrderItem order {
            get {
                return this.orderField;
            }
            set {
                this.orderField = value;
            }
        }
        
        /// <remarks/>
        public string sld {
            get {
                return this.sldField;
            }
            set {
                this.sldField = value;
            }
        }
        
        /// <remarks/>
        public string tld {
            get {
                return this.tldField;
            }
            set {
                this.tldField = value;
            }
        }
        
        /// <remarks/>
        public string resourceid {
            get {
                return this.resourceidField;
            }
            set {
                this.resourceidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wildwestdomains.com/webservices/")]
    public partial class DomainRegistration : Order {
        
        private OrderItem orderField;
        
        private string sldField;
        
        private string tldField;
        
        private int periodField;
        
        private ContactInfo registrantField;
        
        private Nexus nexusField;
        
        private NS[] nsArrayField;
        
        private ContactInfo adminField;
        
        private ContactInfo billingField;
        
        private ContactInfo techField;
        
        private int autorenewflagField;
        
        /// <remarks/>
        public OrderItem order {
            get {
                return this.orderField;
            }
            set {
                this.orderField = value;
            }
        }
        
        /// <remarks/>
        public string sld {
            get {
                return this.sldField;
            }
            set {
                this.sldField = value;
            }
        }
        
        /// <remarks/>
        public string tld {
            get {
                return this.tldField;
            }
            set {
                this.tldField = value;
            }
        }
        
        /// <remarks/>
        public int period {
            get {
                return this.periodField;
            }
            set {
                this.periodField = value;
            }
        }
        
        /// <remarks/>
        public ContactInfo registrant {
            get {
                return this.registrantField;
            }
            set {
                this.registrantField = value;
            }
        }
        
        /// <remarks/>
        public Nexus nexus {
            get {
                return this.nexusField;
            }
            set {
                this.nexusField = value;
            }
        }
        
        /// <remarks/>
        public NS[] nsArray {
            get {
                return this.nsArrayField;
            }
            set {
                this.nsArrayField = value;
            }
        }
        
        /// <remarks/>
        public ContactInfo admin {
            get {
                return this.adminField;
            }
            set {
                this.adminField = value;
            }
        }
        
        /// <remarks/>
        public ContactInfo billing {
            get {
                return this.billingField;
            }
            set {
                this.billingField = value;
            }
        }
        
        /// <remarks/>
        public ContactInfo tech {
            get {
                return this.techField;
            }
            set {
                this.techField = value;
            }
        }
        
        /// <remarks/>
        public int autorenewflag {
            get {
                return this.autorenewflagField;
            }
            set {
                this.autorenewflagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wildwestdomains.com/webservices/")]
    public partial class Shopper {
        
        private string userField;
        
        private string pwdField;
        
        private string pwdhintField;
        
        private string emailField;
        
        private string firstnameField;
        
        private string lastnameField;
        
        private string phoneField;
        
        private string dbpuserField;
        
        private string dbppwdField;
        
        private string dbppwdhintField;
        
        private string dbpemailField;
        
        /// <remarks/>
        public string user {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <remarks/>
        public string pwd {
            get {
                return this.pwdField;
            }
            set {
                this.pwdField = value;
            }
        }
        
        /// <remarks/>
        public string pwdhint {
            get {
                return this.pwdhintField;
            }
            set {
                this.pwdhintField = value;
            }
        }
        
        /// <remarks/>
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string firstname {
            get {
                return this.firstnameField;
            }
            set {
                this.firstnameField = value;
            }
        }
        
        /// <remarks/>
        public string lastname {
            get {
                return this.lastnameField;
            }
            set {
                this.lastnameField = value;
            }
        }
        
        /// <remarks/>
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string dbpuser {
            get {
                return this.dbpuserField;
            }
            set {
                this.dbpuserField = value;
            }
        }
        
        /// <remarks/>
        public string dbppwd {
            get {
                return this.dbppwdField;
            }
            set {
                this.dbppwdField = value;
            }
        }
        
        /// <remarks/>
        public string dbppwdhint {
            get {
                return this.dbppwdhintField;
            }
            set {
                this.dbppwdhintField = value;
            }
        }
        
        /// <remarks/>
        public string dbpemail {
            get {
                return this.dbpemailField;
            }
            set {
                this.dbpemailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ProcessRequestCompletedEventHandler(object sender, ProcessRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DescribeCompletedEventHandler(object sender, DescribeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DescribeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DescribeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CheckAvailabilityCompletedEventHandler(object sender, CheckAvailabilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckAvailabilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckAvailabilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void InfoCompletedEventHandler(object sender, InfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void NameGenCompletedEventHandler(object sender, NameGenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NameGenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NameGenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void NameGenDBCompletedEventHandler(object sender, NameGenDBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NameGenDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NameGenDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PollCompletedEventHandler(object sender, PollCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PollCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PollCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void OrderCreditsCompletedEventHandler(object sender, OrderCreditsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OrderCreditsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OrderCreditsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void OrderDomainsCompletedEventHandler(object sender, OrderDomainsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OrderDomainsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OrderDomainsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void OrderDomainRenewalsCompletedEventHandler(object sender, OrderDomainRenewalsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OrderDomainRenewalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OrderDomainRenewalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void OrderPrivateDomainRenewalsCompletedEventHandler(object sender, OrderPrivateDomainRenewalsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OrderPrivateDomainRenewalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OrderPrivateDomainRenewalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void OrderDomainTransfersCompletedEventHandler(object sender, OrderDomainTransfersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OrderDomainTransfersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OrderDomainTransfersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void OrderDomainPrivacyCompletedEventHandler(object sender, OrderDomainPrivacyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OrderDomainPrivacyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OrderDomainPrivacyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void OrderResourceRenewalsCompletedEventHandler(object sender, OrderResourceRenewalsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OrderResourceRenewalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OrderResourceRenewalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void OrderDomainBackOrdersCompletedEventHandler(object sender, OrderDomainBackOrdersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OrderDomainBackOrdersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OrderDomainBackOrdersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CancelCompletedEventHandler(object sender, CancelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateDomainOwnershipCompletedEventHandler(object sender, UpdateDomainOwnershipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDomainOwnershipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDomainOwnershipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ResetPasswordCompletedEventHandler(object sender, ResetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetShopperInfoCompletedEventHandler(object sender, SetShopperInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetShopperInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetShopperInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CheckUserCompletedEventHandler(object sender, CheckUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetupDomainAlertCompletedEventHandler(object sender, SetupDomainAlertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetupDomainAlertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetupDomainAlertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateDomainAlertCompletedEventHandler(object sender, UpdateDomainAlertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDomainAlertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDomainAlertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RemoveDomainAlertCompletedEventHandler(object sender, RemoveDomainAlertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveDomainAlertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveDomainAlertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDomainAlertCreditsCompletedEventHandler(object sender, GetDomainAlertCreditsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDomainAlertCreditsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDomainAlertCreditsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMonitoredDomainListCompletedEventHandler(object sender, GetMonitoredDomainListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMonitoredDomainListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMonitoredDomainListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetExpiringNameListCompletedEventHandler(object sender, GetExpiringNameListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExpiringNameListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExpiringNameListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DomainForwardingCompletedEventHandler(object sender, DomainForwardingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DomainForwardingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DomainForwardingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateNameServerCompletedEventHandler(object sender, UpdateNameServerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateNameServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateNameServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateDomainContactCompletedEventHandler(object sender, UpdateDomainContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDomainContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDomainContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetDomainLockingCompletedEventHandler(object sender, SetDomainLockingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetDomainLockingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetDomainLockingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ManageTransferCompletedEventHandler(object sender, ManageTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ManageTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ManageTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateDomainForwardingCompletedEventHandler(object sender, UpdateDomainForwardingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDomainForwardingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDomainForwardingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ModifyDNSCompletedEventHandler(object sender, ModifyDNSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyDNSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyDNSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591
