//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// ------------------------------------------------------------------------------
// <auto-generated>
//     This API code was generated by the DanDoes.NET Facebook API Generator.
//     Facebook.Api.Generator v1.0.3412.20062
//     
//     The following documents were used to generate this code:
//		Facebook API Object Schema:	http://api.facebook.com/1.0/facebook.xsd
//		Facebook API Wiki:			http://wiki.developers.facebook.com/index.php/API
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Facebook.Api.Controllers {
    using System;
    using System.Collections.Generic;
    using System.Xml.Linq;
    using Facebook;
    
    
    public partial class AdminController : FacebookApiController {
        
        public AdminController(IFacebookContext facebookContext) : 
                base(facebookContext) {
        }
        
        /// <summary>Returns values of properties for your applications from the Facebook Developer application.</summary>
        /// <param name="properties">A list of property names that you want to view. This list is described on <a href="/index.php/ApplicationProperties" title="ApplicationProperties">ApplicationProperties</a>.</param>
        public FacebookResponse<String> GetAppProperties(String[] properties) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("properties", properties);
            var response = this.ExecuteRequest<String>("Admin.getAppProperties", args);
            return response;
        }
        
        /// <summary>Sets values for properties for your applications in the Facebook Developer application.</summary>
        /// <param name="properties">A JSON encoded map of property names to new values. This call will fail if values have the wrong type. The full list is described on <a href="/index.php/ApplicationProperties" title="ApplicationProperties">ApplicationProperties</a>.</param>
        public FacebookResponse<Boolean> SetAppProperties(Dictionary<String, String> properties) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("properties", properties);
            var response = this.ExecuteRequest<Boolean>("Admin.setAppProperties", args);
            return response;
        }
        
        /// <summary>Returns the current allocation limit for your application for the specified integration point.</summary>
        /// <param name="integrationPointName">The name of the integration point. Integration points include <code>notifications_per_day</code>, <code>announcement_notifications_per_week</code>, <code>requests_per_day</code>, <code>emails_per_day</code>, and <code>email_disable_message_location</code>.</param>
        public FacebookResponse<Int64> GetAllocation(String integrationPointName) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("integration_point_name", integrationPointName);
            var response = this.ExecuteRequest<Int64>("Admin.getAllocation", args);
            return response;
        }
        
        /// <summary>Returns the current allocation limit for your application for the specified integration point.</summary>
        /// <param name="user">The <a href="/index.php/User_ID" title="User ID">user ID</a> for the specific user whose allocations you want to to check. Specifying a user ID is relevant only with respect to the emails_per_day integration point for users who granted the email permission prior to the 2008 profile design update, per the note on <a href="/index.php/Notifications.sendEmail" title="Notifications.sendEmail">notifications.sendEmail</a>.</param>
        /// <param name="integrationPointName">The name of the integration point. Integration points include <code>notifications_per_day</code>, <code>announcement_notifications_per_week</code>, <code>requests_per_day</code>, <code>emails_per_day</code>, and <code>email_disable_message_location</code>.</param>
        public FacebookResponse<Int64> GetAllocation(Int64 user, String integrationPointName) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("user", user);
            args.Add("integration_point_name", integrationPointName);
            var response = this.ExecuteRequest<Int64>("Admin.getAllocation", args);
            return response;
        }
        
        /// <summary>Prevents users from accessing an application's canvas page and its forums.</summary>
        public FacebookResponse<Boolean> BanUsers() {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            var response = this.ExecuteRequest<Boolean>("Admin.banUsers", args);
            return response;
        }
        
        /// <summary>Prevents users from accessing an application's canvas page and its forums.</summary>
        /// <param name="uids">A JSON-encoded array of <a href="/index.php/User_ID" title="User ID">user IDs</a> to ban.</param>
        public FacebookResponse<Boolean> BanUsers(String uids) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("uids", uids);
            var response = this.ExecuteRequest<Boolean>("Admin.banUsers", args);
            return response;
        }
        
        /// <summary>Unbans users previously banned with admin.banUsers.</summary>
        public FacebookResponse<Boolean> UnbanUsers() {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            var response = this.ExecuteRequest<Boolean>("Admin.unbanUsers", args);
            return response;
        }
        
        /// <summary>Unbans users previously banned with admin.banUsers.</summary>
        /// <param name="uids">A JSON-encoded array of <a href="/index.php/User_ID" title="User ID">user IDs</a> to unban.</param>
        public FacebookResponse<Boolean> UnbanUsers(String uids) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("uids", uids);
            var response = this.ExecuteRequest<Boolean>("Admin.unbanUsers", args);
            return response;
        }
        
        /// <summary>Returns the list of users who have been banned from the application.</summary>
        public FacebookResponse<List<Int64>> GetBannedUsers() {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            var response = this.ExecuteRequest<List<Int64>>("Admin.getBannedUsers", args);
            return response;
        }
        
        /// <summary>Returns the list of users who have been banned from the application.</summary>
        /// <param name="uids">A JSON-encoded array of <a href="/index.php/User_ID" title="User ID">user IDs</a> used to filter the result. The only user IDs that are returned in uids are those of banned users.</param>
        public FacebookResponse<List<Int64>> GetBannedUsers(String uids) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("uids", uids);
            var response = this.ExecuteRequest<List<Int64>>("Admin.getBannedUsers", args);
            return response;
        }
        
        /// <summary>Returns specified metrics for your application, given a time period.</summary>
        /// <param name="startTime">A Unix time for the start of the range (inclusive).</param>
        /// <param name="endTime">A Unix time for the end of the range (inclusive). The <code>end_time</code> cannot be more than 30 days after the <code>start_time</code>.</param>
        /// <param name="period">The length of the period, in seconds, during which the metrics were collected. Currently, the only supported periods are 86400 (1 day), 604800 (7-days), and 2592000 (30 days).</param>
        /// <param name="metrics">A JSON-encoded list of metrics to retrieve (e.g. <code>["active_users", "canvas_page_views"]</code>).</param>
        public FacebookResponse<FacebookList<Metrics>> GetMetrics(Int64 startTime, Int64 endTime, Int64 period, String metrics) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("start_time", startTime);
            args.Add("end_time", endTime);
            args.Add("period", period);
            args.Add("metrics", metrics);
            var response = this.ExecuteRequest<FacebookList<Metrics>>("Admin.getMetrics", args);
            return response;
        }
        
        /// <summary>Sets the <a href="/index.php/Demographic_Restrictions" title="Demographic Restrictions">demographic restrictions</a> for the application.</summary>
        public FacebookResponse<Boolean> SetRestrictionInfo() {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            var response = this.ExecuteRequest<Boolean>("Admin.setRestrictionInfo", args);
            return response;
        }
        
        /// <summary>Sets the <a href="/index.php/Demographic_Restrictions" title="Demographic Restrictions">demographic restrictions</a> for the application.</summary>
        /// <param name="restrictionStr">A JSON-encoded string of the restricting attributes. Restrictions include <code>age</code>, <code>location</code>, <code>age_distribution</code>, and <code>type</code>. If you use the Facebook PHP client library, you can actually pass an associative array and Facebook automatically handles the JSON encoding. For example: <code>{&quot;age_distribution&quot;:&quot;{\&quot;CA,US\&quot;:\&quot;16-25\&quot;,\&quot;IN\&quot;:\&quot;15-20,30+\&quot;}&quot;}</code>.<br/><br/>When specifying the <code>age</code> or <code>age_distribution</code>, you can use plus (+) and minus (-) to restrict content to that age or older/younger (like 21+ for 21 and older or 18- for younger than 19). You can also specify a range of ages, like 18-35 so anyone between the ages of 18 and 35 (inclusive) can see the content. You can also specify multiple age ranges (like 19-,30+ -- if you want to exclude people in their 20s, for example). Every specified age must be an integer.<br/><br/>When specifying the <code>location</code>, specify the country or countries (using a comma-separated list) from the <a href="http://www.iso.org/iso/country_codes/iso_3166_code_lists/english_country_names_and_code_elements.htm" class="external text" title="http://www.iso.org/iso/country_codes/iso_3166_code_lists/english_country_names_and_code_elements.htm" rel="nofollow">ISO 3166 alpha 2 code list</a>. This list is not necessarily the same as the IANA ccTLD (country code top level domain) list. For example, the ISO 3166 entry for England is <code>.gb</code>, while the IANA entry is <code>.uk</code>.<br/><br/>Specifying a <code>type</code> allows you to target users based on age and location for custom made categories like <code>alcohol</code> (currently the only type available). Before rendering your FBML, we run a check against the <code>type</code> on Facebook, and if the user meets the <a href="/index.php/Alcohol_Age_Requirements" title="Alcohol Age Requirements">age and location requirements</a>, we'll render the content.</param>
        public FacebookResponse<Boolean> SetRestrictionInfo(String restrictionStr) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("restriction_str", restrictionStr);
            var response = this.ExecuteRequest<Boolean>("Admin.setRestrictionInfo", args);
            return response;
        }
        
        /// <summary>Returns the <a href="/index.php/Demographic_Restrictions" title="Demographic Restrictions">demographic restrictions</a> for the application.</summary>
        public FacebookResponse<String> GetRestrictionInfo() {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            var response = this.ExecuteRequest<String>("Admin.getRestrictionInfo", args);
            return response;
        }
    }
}
