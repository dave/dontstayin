//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// ------------------------------------------------------------------------------
// <auto-generated>
//     This API code was generated by the DanDoes.NET Facebook API Generator.
//     Facebook.Api.Generator v1.0.3412.20062
//     
//     The following documents were used to generate this code:
//		Facebook API Object Schema:	http://api.facebook.com/1.0/facebook.xsd
//		Facebook API Wiki:			http://wiki.developers.facebook.com/index.php/API
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Facebook.Api.Controllers {
    using System;
    using System.Collections.Generic;
    using System.Xml.Linq;
    using Facebook;
    
    
    public class ConnectController : FacebookApiController {
        
        public ConnectController(IFacebookContext facebookContext) : 
                base(facebookContext) {
        }
        
        /// <summary>This method returns the number of friends of the current user who have accounts on your site, but have not yet connected their accounts.</summary>
        public FacebookResponse<Int64> GetUnconnectedFriendsCount() {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            var response = this.ExecuteRequest<Int64>("Connect.getUnconnectedFriendsCount", args);
            return response;
        }
        
        /// <summary>This method is used to create an association between an external user account and a Facebook user account.</summary>
        /// <param name="accounts">An array of up to 1,000 arrays, or "maps," where each map represent a connected account. Each map can have the following properties:
        ///<ul><li> <code>email_hash</code>: The public email hash of remote account. This property is <b>required</b>. Compute the <code>email_hash</code> property as follows:
        ///</li></ul>
        ///<ol><li> Normalize the email address. Trim leading and trailing whitespace, and convert all characters to lowercase.
        ///</li><li> Compute the CRC32 value for the normalized email address and use the unsigned integer representation of this value.  (Note that some implementations return signed integers, in which case you will need to convert that result to an unsigned integer.)
        ///</li><li> Compute the MD5 value for the normalized email address and use the hex representation of this value (using lowercase for <code>A</code> through <code>F</code>).
        ///</li><li> Combine these two value with an underscore.<br/>For example, the address <code>mary@example.com</code> converts to <code>4228600737_c96da02bba97aedfd26136e980ae3761</code>.
        ///</li></ol>
        ///<ul><li> <code>account_id</code>: The user's account ID on the <a href="/index.php/Facebook_Connect" title="Facebook Connect">Facebook Connect</a> site. This property is <b>optional</b>. If you specify the <code>account_id</code> property, then you must also set a Connect Preview URL in your application's settings in order to generate a full user URL.  The Connect Preview URL  contains an <code>account_id</code> parameter, such as http://www.example.com/profile.php?user=<code>account_id</code>.
        ///</li><li> <code>account_url</code>: The URL to the user's account on the Facebook Connect site. This property is <b>optional</b>. If you specify the <code>account_url</code> property, that URL will be used directly.
        ///</li></ul>
        ///Facebook recommends that you specify at least one of either the <code>account_id</code> or the <code>account_url</code> properties.</param>
        public FacebookResponse<List<String>> RegisterUsers(String[] accounts) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("accounts", accounts);
            var response = this.ExecuteRequest<List<String>>("Connect.registerUsers", args);
            return response;
        }
        
        /// <summary>This method allows a site to unregister a previously registered account (using <a href="/index.php/Connect.registerUsers" title="Connect.registerUsers">connect.registerUsers</a>).</summary>
        /// <param name="emailHashes">An array of email_hashes to unregister.</param>
        public FacebookResponse<List<String>> UnregisterUsers(String[] emailHashes) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("email_hashes", emailHashes);
            var response = this.ExecuteRequest<List<String>>("Connect.unregisterUsers", args);
            return response;
        }
    }
}
