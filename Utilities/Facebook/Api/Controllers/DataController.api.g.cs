//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// ------------------------------------------------------------------------------
// <auto-generated>
//     This API code was generated by the DanDoes.NET Facebook API Generator.
//     Facebook.Api.Generator v1.0.3412.20062
//     
//     The following documents were used to generate this code:
//		Facebook API Object Schema:	http://api.facebook.com/1.0/facebook.xsd
//		Facebook API Wiki:			http://wiki.developers.facebook.com/index.php/API
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Facebook.Api.Controllers {
    using System;
    using System.Collections.Generic;
    using System.Xml.Linq;
    using Facebook;
    
    
    public class DataController : FacebookApiController {
        
        public DataController(IFacebookContext facebookContext) : 
                base(facebookContext) {
        }
        
        /// <summary>Returns all cookies for a given user and application.</summary>
        /// <param name="uid">The user from whom to get the cookies.</param>
        public FacebookResponse<FacebookList<Cookie>> GetCookies(Int64 uid) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("uid", uid);
            var response = this.ExecuteRequest<FacebookList<Cookie>>("Data.getCookies", args);
            return response;
        }
        
        /// <summary>Returns all cookies for a given user and application.</summary>
        /// <param name="name">The name of the cookie. If not specified, all the cookies for the given user get returned.</param>
        /// <param name="uid">The user from whom to get the cookies.</param>
        public FacebookResponse<FacebookList<Cookie>> GetCookies(String name, Int64 uid) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("name", name);
            args.Add("uid", uid);
            var response = this.ExecuteRequest<FacebookList<Cookie>>("Data.getCookies", args);
            return response;
        }
        
        /// <summary>Sets a cookie for a given user and application.</summary>
        /// <param name="uid">The user for whom this cookie needs to be set.</param>
        /// <param name="name">Name of the cookie.</param>
        /// <param name="value">Value of the cookie.</param>
        public FacebookResponse<Boolean> SetCookie(Int64 uid, String name, String value) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("uid", uid);
            args.Add("name", name);
            args.Add("value", value);
            var response = this.ExecuteRequest<Boolean>("Data.setCookie", args);
            return response;
        }
        
        /// <summary>Sets a cookie for a given user and application.</summary>
        /// <param name="expires">Time stamp when the cookie should expire. If not specified, the cookie expires after 24 hours. (The time stamp can be longer than 24 hours and currently has no limit)</param>
        /// <param name="uid">The user for whom this cookie needs to be set.</param>
        /// <param name="name">Name of the cookie.</param>
        /// <param name="value">Value of the cookie.</param>
        public FacebookResponse<Boolean> SetCookie(Int64 expires, Int64 uid, String name, String value) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("expires", expires);
            args.Add("uid", uid);
            args.Add("name", name);
            args.Add("value", value);
            var response = this.ExecuteRequest<Boolean>("Data.setCookie", args);
            return response;
        }
        
        /// <summary>Sets a cookie for a given user and application.</summary>
        /// <param name="path">Path relative to the application's callback URL, with which the cookie should be associated. <i>(Default value is /.)</i></param>
        /// <param name="expires">Time stamp when the cookie should expire. If not specified, the cookie expires after 24 hours. (The time stamp can be longer than 24 hours and currently has no limit)</param>
        /// <param name="uid">The user for whom this cookie needs to be set.</param>
        /// <param name="name">Name of the cookie.</param>
        /// <param name="value">Value of the cookie.</param>
        public FacebookResponse<Boolean> SetCookie(String path, Int64 expires, Int64 uid, String name, String value) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("path", path);
            args.Add("expires", expires);
            args.Add("uid", uid);
            args.Add("name", name);
            args.Add("value", value);
            var response = this.ExecuteRequest<Boolean>("Data.setCookie", args);
            return response;
        }
        
        /// <summary>Sets a cookie for a given user and application.</summary>
        /// <param name="path">Path relative to the application's callback URL, with which the cookie should be associated. <i>(Default value is /.)</i></param>
        /// <param name="uid">The user for whom this cookie needs to be set.</param>
        /// <param name="name">Name of the cookie.</param>
        /// <param name="value">Value of the cookie.</param>
        public FacebookResponse<Boolean> SetCookie(String path, Int64 uid, String name, String value) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("path", path);
            args.Add("uid", uid);
            args.Add("name", name);
            args.Add("value", value);
            var response = this.ExecuteRequest<Boolean>("Data.setCookie", args);
            return response;
        }
    }
}
