//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// ------------------------------------------------------------------------------
// <auto-generated>
//     This API code was generated by the DanDoes.NET Facebook API Generator.
//     Facebook.Api.Generator v1.0.3412.20062
//     
//     The following documents were used to generate this code:
//		Facebook API Object Schema:	http://api.facebook.com/1.0/facebook.xsd
//		Facebook API Wiki:			http://wiki.developers.facebook.com/index.php/API
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Facebook.Api.Controllers {
    using System;
    using System.Collections.Generic;
    using System.Xml.Linq;
    using Facebook;
    
    
    public class EventsController : FacebookApiController {
        
        public EventsController(IFacebookContext facebookContext) : 
                base(facebookContext) {
        }
        
        /// <summary>Returns all visible events according to the filters specified.</summary>
        /// <param name="uid">Filter by events associated with a user with this <code>uid</code>.</param>
        public FacebookResponse<FacebookList<Event>> Get(Int64 uid) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("uid", uid);
            var response = this.ExecuteRequest<FacebookList<Event>>("Events.get", args);
            return response;
        }
        
        /// <summary>Returns all visible events according to the filters specified.</summary>
        /// <param name="uid">Filter by events associated with a user with this <code>uid</code>.</param>
        /// <param name="rsvpStatus">Filter by this RSVP status. The RSVP status should be one of the following strings:
        ///<ul><li> attending
        ///</li><li> unsure
        ///</li><li> declined
        ///</li><li> not_replied</param>
        public FacebookResponse<FacebookList<Event>> Get(Int64 uid, String rsvpStatus) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("uid", uid);
            args.Add("rsvp_status", rsvpStatus);
            var response = this.ExecuteRequest<FacebookList<Event>>("Events.get", args);
            return response;
        }
        
        /// <summary>Returns all visible events according to the filters specified.</summary>
        /// <param name="uid">Filter by events associated with a user with this <code>uid</code>.</param>
        /// <param name="startTime">Filter with this UTC as lower bound. A missing or zero parameter indicates no lower bound.</param>
        /// <param name="endTime">Filter with this UTC as upper bound. A missing or zero parameter indicates no upper bound.</param>
        public FacebookResponse<FacebookList<Event>> Get(Int64 uid, Int64 startTime, Int64 endTime) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("uid", uid);
            args.Add("start_time", startTime);
            args.Add("end_time", endTime);
            var response = this.ExecuteRequest<FacebookList<Event>>("Events.get", args);
            return response;
        }
        
        /// <summary>Returns all visible events according to the filters specified.</summary>
        /// <param name="uid">Filter by events associated with a user with this <code>uid</code>.</param>
        /// <param name="rsvpStatus">Filter by this RSVP status. The RSVP status should be one of the following strings:
        ///<ul><li> attending
        ///</li><li> unsure
        ///</li><li> declined
        ///</li><li> not_replied</param>
        /// <param name="startTime">Filter with this UTC as lower bound. A missing or zero parameter indicates no lower bound.</param>
        /// <param name="endTime">Filter with this UTC as upper bound. A missing or zero parameter indicates no upper bound.</param>
        public FacebookResponse<FacebookList<Event>> Get(Int64 uid, String rsvpStatus, Int64 startTime, Int64 endTime) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("uid", uid);
            args.Add("rsvp_status", rsvpStatus);
            args.Add("start_time", startTime);
            args.Add("end_time", endTime);
            var response = this.ExecuteRequest<FacebookList<Event>>("Events.get", args);
            return response;
        }
        
        /// <summary>Returns all visible events according to the filters specified.</summary>
        /// <param name="uid">Filter by events associated with a user with this <code>uid</code>.</param>
        /// <param name="eids">Filter by this list of event IDs. This is a comma-separated list of event IDs.</param>
        public FacebookResponse<FacebookList<Event>> Get(Int64 uid, String[] eids) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("uid", uid);
            args.Add("eids", eids);
            var response = this.ExecuteRequest<FacebookList<Event>>("Events.get", args);
            return response;
        }
        
        /// <summary>Returns all visible events according to the filters specified.</summary>
        /// <param name="uid">Filter by events associated with a user with this <code>uid</code>.</param>
        /// <param name="eids">Filter by this list of event IDs. This is a comma-separated list of event IDs.</param>
        /// <param name="rsvpStatus">Filter by this RSVP status. The RSVP status should be one of the following strings:
        ///<ul><li> attending
        ///</li><li> unsure
        ///</li><li> declined
        ///</li><li> not_replied</param>
        public FacebookResponse<FacebookList<Event>> Get(Int64 uid, String[] eids, String rsvpStatus) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("uid", uid);
            args.Add("eids", eids);
            args.Add("rsvp_status", rsvpStatus);
            var response = this.ExecuteRequest<FacebookList<Event>>("Events.get", args);
            return response;
        }
        
        /// <summary>Returns all visible events according to the filters specified.</summary>
        /// <param name="uid">Filter by events associated with a user with this <code>uid</code>.</param>
        /// <param name="eids">Filter by this list of event IDs. This is a comma-separated list of event IDs.</param>
        /// <param name="startTime">Filter with this UTC as lower bound. A missing or zero parameter indicates no lower bound.</param>
        /// <param name="endTime">Filter with this UTC as upper bound. A missing or zero parameter indicates no upper bound.</param>
        public FacebookResponse<FacebookList<Event>> Get(Int64 uid, String[] eids, Int64 startTime, Int64 endTime) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("uid", uid);
            args.Add("eids", eids);
            args.Add("start_time", startTime);
            args.Add("end_time", endTime);
            var response = this.ExecuteRequest<FacebookList<Event>>("Events.get", args);
            return response;
        }
        
        /// <summary>Returns all visible events according to the filters specified.</summary>
        /// <param name="uid">Filter by events associated with a user with this <code>uid</code>.</param>
        /// <param name="eids">Filter by this list of event IDs. This is a comma-separated list of event IDs.</param>
        /// <param name="rsvpStatus">Filter by this RSVP status. The RSVP status should be one of the following strings:
        ///<ul><li> attending
        ///</li><li> unsure
        ///</li><li> declined
        ///</li><li> not_replied</param>
        /// <param name="startTime">Filter with this UTC as lower bound. A missing or zero parameter indicates no lower bound.</param>
        /// <param name="endTime">Filter with this UTC as upper bound. A missing or zero parameter indicates no upper bound.</param>
        public FacebookResponse<FacebookList<Event>> Get(Int64 uid, String[] eids, String rsvpStatus, Int64 startTime, Int64 endTime) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("uid", uid);
            args.Add("eids", eids);
            args.Add("rsvp_status", rsvpStatus);
            args.Add("start_time", startTime);
            args.Add("end_time", endTime);
            var response = this.ExecuteRequest<FacebookList<Event>>("Events.get", args);
            return response;
        }
        
        /// <summary>Returns all visible events according to the filters specified.</summary>
        /// <param name="eids">Filter by this list of event IDs. This is a comma-separated list of event IDs.</param>
        public FacebookResponse<FacebookList<Event>> Get(String[] eids) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("eids", eids);
            var response = this.ExecuteRequest<FacebookList<Event>>("Events.get", args);
            return response;
        }
        
        /// <summary>Returns all visible events according to the filters specified.</summary>
        /// <param name="eids">Filter by this list of event IDs. This is a comma-separated list of event IDs.</param>
        /// <param name="rsvpStatus">Filter by this RSVP status. The RSVP status should be one of the following strings:
        ///<ul><li> attending
        ///</li><li> unsure
        ///</li><li> declined
        ///</li><li> not_replied</param>
        public FacebookResponse<FacebookList<Event>> Get(String[] eids, String rsvpStatus) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("eids", eids);
            args.Add("rsvp_status", rsvpStatus);
            var response = this.ExecuteRequest<FacebookList<Event>>("Events.get", args);
            return response;
        }
        
        /// <summary>Returns all visible events according to the filters specified.</summary>
        /// <param name="eids">Filter by this list of event IDs. This is a comma-separated list of event IDs.</param>
        /// <param name="startTime">Filter with this UTC as lower bound. A missing or zero parameter indicates no lower bound.</param>
        /// <param name="endTime">Filter with this UTC as upper bound. A missing or zero parameter indicates no upper bound.</param>
        public FacebookResponse<FacebookList<Event>> Get(String[] eids, Int64 startTime, Int64 endTime) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("eids", eids);
            args.Add("start_time", startTime);
            args.Add("end_time", endTime);
            var response = this.ExecuteRequest<FacebookList<Event>>("Events.get", args);
            return response;
        }
        
        /// <summary>Returns all visible events according to the filters specified.</summary>
        /// <param name="eids">Filter by this list of event IDs. This is a comma-separated list of event IDs.</param>
        /// <param name="rsvpStatus">Filter by this RSVP status. The RSVP status should be one of the following strings:
        ///<ul><li> attending
        ///</li><li> unsure
        ///</li><li> declined
        ///</li><li> not_replied</param>
        /// <param name="startTime">Filter with this UTC as lower bound. A missing or zero parameter indicates no lower bound.</param>
        /// <param name="endTime">Filter with this UTC as upper bound. A missing or zero parameter indicates no upper bound.</param>
        public FacebookResponse<FacebookList<Event>> Get(String[] eids, String rsvpStatus, Int64 startTime, Int64 endTime) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("eids", eids);
            args.Add("rsvp_status", rsvpStatus);
            args.Add("start_time", startTime);
            args.Add("end_time", endTime);
            var response = this.ExecuteRequest<FacebookList<Event>>("Events.get", args);
            return response;
        }
        
        /// <summary>Returns membership list data associated with an event.</summary>
        /// <param name="eid">The event ID.</param>
        public FacebookResponse<EventMembers> GetMembers(Int64 eid) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("eid", eid);
            var response = this.ExecuteRequest<EventMembers>("Events.getMembers", args);
            return response;
        }
        
        /// <summary>Sets the attendance option for the current user.</summary>
        /// <param name="eid">The event ID.</param>
        /// <param name="rsvpStatus">The user's RSVP status. Specify <code>attending</code>, <code>unsure</code>, or <code>declined</code>.</param>
        public FacebookResponse<Boolean> Rsvp(Int64 eid, String rsvpStatus) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("eid", eid);
            args.Add("rsvp_status", rsvpStatus);
            var response = this.ExecuteRequest<Boolean>("Events.rsvp", args);
            return response;
        }
        
        /// <summary>Creates an event on behalf of the user if the application has an active session; otherwise it creates an event on behalf of the application.</summary>
        /// <param name="eventInfo">The event information, passed as a JSON-encoded object literal. See the Notes below for information on what parameters to include in the object.</param>
        public FacebookResponse<Int64> Create(Dictionary<String, String> eventInfo) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("event_info", eventInfo);
            var response = this.ExecuteRequest<Int64>("Events.create", args);
            return response;
        }
        
        /// <summary>Edits an existing event. The application must be an admin of the event.</summary>
        /// <param name="eid">The event ID.</param>
        /// <param name="eventInfo">The event information, passed as a JSON-encoded object. See the Notes below for information on what parameters you can change in the object.</param>
        public FacebookResponse<Boolean> Edit(Int64 eid, Dictionary<String, String> eventInfo) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("eid", eid);
            args.Add("event_info", eventInfo);
            var response = this.ExecuteRequest<Boolean>("Events.edit", args);
            return response;
        }
        
        /// <summary>Cancels an event. The application must be an admin of the event.</summary>
        /// <param name="eid">The event ID.</param>
        public FacebookResponse<Boolean> Cancel(Int64 eid) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("eid", eid);
            var response = this.ExecuteRequest<Boolean>("Events.cancel", args);
            return response;
        }
        
        /// <summary>Cancels an event. The application must be an admin of the event.</summary>
        /// <param name="cancelMessage">The message sent explaining why the event was canceled. You can pass an empty string if you don't want to provide an explanation.</param>
        /// <param name="eid">The event ID.</param>
        public FacebookResponse<Boolean> Cancel(String cancelMessage, Int64 eid) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("cancel_message", cancelMessage);
            args.Add("eid", eid);
            var response = this.ExecuteRequest<Boolean>("Events.cancel", args);
            return response;
        }
    }
}
