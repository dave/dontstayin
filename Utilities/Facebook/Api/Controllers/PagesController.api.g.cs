//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// ------------------------------------------------------------------------------
// <auto-generated>
//     This API code was generated by the DanDoes.NET Facebook API Generator.
//     Facebook.Api.Generator v1.0.3412.20062
//     
//     The following documents were used to generate this code:
//		Facebook API Object Schema:	http://api.facebook.com/1.0/facebook.xsd
//		Facebook API Wiki:			http://wiki.developers.facebook.com/index.php/API
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Facebook.Api.Controllers {
    using System;
    using System.Collections.Generic;
    using System.Xml.Linq;
    using Facebook;
    
    
    public class PagesController : FacebookApiController {
        
        public PagesController(IFacebookContext facebookContext) : 
                base(facebookContext) {
        }
        
        /// <summary>Returns all visible pages to the filters specified.</summary>
        /// <param name="fields">List of desired fields in return.  This is a comma-separated list of field strings.</param>
        public FacebookResponse<FacebookList<Page>> GetInfo(String[] fields) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("fields", fields);
            var response = this.ExecuteRequest<FacebookList<Page>>("Pages.getInfo", args);
            return response;
        }
        
        /// <summary>Returns all visible pages to the filters specified.</summary>
        /// <param name="pageIds">List of page IDs.  This is a comma-separated list of page IDs.</param>
        /// <param name="fields">List of desired fields in return.  This is a comma-separated list of field strings.</param>
        public FacebookResponse<FacebookList<Page>> GetInfo(String[] pageIds, String[] fields) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("page_ids", pageIds);
            args.Add("fields", fields);
            var response = this.ExecuteRequest<FacebookList<Page>>("Pages.getInfo", args);
            return response;
        }
        
        /// <summary>Returns all visible pages to the filters specified.</summary>
        /// <param name="uid">The ID of the user.  Defaults to the logged in user if the session_key is valid, and no page_ids are passed.  Used to get the pages a given user is a fan of.</param>
        /// <param name="pageIds">List of page IDs.  This is a comma-separated list of page IDs.</param>
        /// <param name="fields">List of desired fields in return.  This is a comma-separated list of field strings.</param>
        public FacebookResponse<FacebookList<Page>> GetInfo(Int64 uid, String[] pageIds, String[] fields) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("uid", uid);
            args.Add("page_ids", pageIds);
            args.Add("fields", fields);
            var response = this.ExecuteRequest<FacebookList<Page>>("Pages.getInfo", args);
            return response;
        }
        
        /// <summary>Returns all visible pages to the filters specified.</summary>
        /// <param name="uid">The ID of the user.  Defaults to the logged in user if the session_key is valid, and no page_ids are passed.  Used to get the pages a given user is a fan of.</param>
        /// <param name="fields">List of desired fields in return.  This is a comma-separated list of field strings.</param>
        public FacebookResponse<FacebookList<Page>> GetInfo(Int64 uid, String[] fields) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("uid", uid);
            args.Add("fields", fields);
            var response = this.ExecuteRequest<FacebookList<Page>>("Pages.getInfo", args);
            return response;
        }
        
        /// <summary>Checks whether the logged-in user is the admin for a given Page.</summary>
        /// <param name="pageId">The ID of the <a href="http://www.facebook.com/pages/#/business/?pages" class="external text" title="http://www.facebook.com/pages/#/business/?pages" rel="nofollow">Facebook Page</a>.</param>
        public FacebookResponse<Boolean> IsAdmin(Int64 pageId) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("page_id", pageId);
            var response = this.ExecuteRequest<Boolean>("Pages.isAdmin", args);
            return response;
        }
        
        /// <summary>Checks whether the logged-in user is the admin for a given Page.</summary>
        /// <param name="uid">The ID of the user. <i>(Default value is the ID of the logged-in user.)</i></param>
        /// <param name="pageId">The ID of the <a href="http://www.facebook.com/pages/#/business/?pages" class="external text" title="http://www.facebook.com/pages/#/business/?pages" rel="nofollow">Facebook Page</a>.</param>
        public FacebookResponse<Boolean> IsAdmin(Int64 uid, Int64 pageId) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("uid", uid);
            args.Add("page_id", pageId);
            var response = this.ExecuteRequest<Boolean>("Pages.isAdmin", args);
            return response;
        }
        
        /// <summary>Checks whether a user is a fan of a given Page.</summary>
        /// <param name="pageId">The ID of the page.</param>
        public FacebookResponse<Boolean> IsFan(Int64 pageId) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("page_id", pageId);
            var response = this.ExecuteRequest<Boolean>("Pages.isFan", args);
            return response;
        }
        
        /// <summary>Checks whether a user is a fan of a given Page.</summary>
        /// <param name="uid">The ID of the user. Defaults to the logged-in user if not set.</param>
        /// <param name="pageId">The ID of the page.</param>
        public FacebookResponse<Boolean> IsFan(Int64 uid, Int64 pageId) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("uid", uid);
            args.Add("page_id", pageId);
            var response = this.ExecuteRequest<Boolean>("Pages.isFan", args);
            return response;
        }
        
        /// <summary>Checks whether the Page has added the application.</summary>
        public FacebookResponse<Boolean> IsAppAdded() {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            var response = this.ExecuteRequest<Boolean>("Pages.isAppAdded", args);
            return response;
        }
        
        /// <summary>Checks whether the Page has added the application.</summary>
        /// <param name="pageId">The ID of the <a href="http://www.facebook.com/pages/#/business/?pages" class="external text" title="http://www.facebook.com/pages/#/business/?pages" rel="nofollow">Facebook Page</a>.</param>
        public FacebookResponse<Boolean> IsAppAdded(Int64 pageId) {
            System.Collections.Generic.Dictionary<string, object> args = new System.Collections.Generic.Dictionary<string, object>();
            args.Add("page_id", pageId);
            var response = this.ExecuteRequest<Boolean>("Pages.isAppAdded", args);
            return response;
        }
    }
}
