//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// ------------------------------------------------------------------------------
// <auto-generated>
//     This API code was generated by the DanDoes.NET Facebook API Generator.
//     Facebook.Api.Generator v1.0.3412.20062
//     
//     The following documents were used to generate this code:
//		Facebook API Object Schema:	http://api.facebook.com/1.0/facebook.xsd
//		Facebook API Wiki:			http://wiki.developers.facebook.com/index.php/API
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Facebook.Api {
    using System;
    using System.Collections.Generic;
    using System.Xml.Linq;
    using Facebook;
    
    
    [FacebookObjectAttribute("stream_post")]
    public class StreamPost : Facebook.Api.FacebookObjectBase {
        
        /// <summary>Intializes an instance of <see cref="StreamPost" /> using the specified xml document or snippet as the data source.</summary>
        /// <param name="content">An <see cref="XElement" /> object containing xml data for the object.</param>
        public StreamPost(System.Xml.Linq.XElement content) : 
                base(content) {
        }
        
        /// <summary>Intializes an instance of <see cref="StreamPost" />, prefilling the internal dictionary with the specified values.</summary>
        /// <param name="dict">An <see cref="IDictionary{String, Object}" /> object containing property names and values.</param>
        public StreamPost(System.Collections.Generic.IDictionary<string, object> dict) : 
                base(dict) {
        }
        
        /// <summary>Intializes an instance of <see cref="StreamPost" />.</summary>
        public StreamPost() {
        }
        
        public String PostId {
            get {
                return this.GetString("post_id");
            }
            set {
                this.InnerDictionary["post_id"] = value;
            }
        }
        
        public Int64 ViewerId {
            get {
                return this.GetValueType<Int64>("viewer_id");
            }
            set {
                this.InnerDictionary["viewer_id"] = value;
            }
        }
        
        public String View {
            get {
                return this.GetString("view");
            }
            set {
                this.InnerDictionary["view"] = value;
            }
        }
        
        public Int64 SourceId {
            get {
                return this.GetValueType<Int64>("source_id");
            }
            set {
                this.InnerDictionary["source_id"] = value;
            }
        }
        
        public String Type {
            get {
                return this.GetString("type");
            }
            set {
                this.InnerDictionary["type"] = value;
            }
        }
        
        public Int64 AppId {
            get {
                return this.GetValueType<Int64>("app_id");
            }
            set {
                this.InnerDictionary["app_id"] = value;
            }
        }
        
        public String Attribution {
            get {
                return this.GetString("attribution");
            }
            set {
                this.InnerDictionary["attribution"] = value;
            }
        }
        
        public Int64 ActorId {
            get {
                return this.GetValueType<Int64>("actor_id");
            }
            set {
                this.InnerDictionary["actor_id"] = value;
            }
        }
        
        public Int64 TargetId {
            get {
                return this.GetValueType<Int64>("target_id");
            }
            set {
                this.InnerDictionary["target_id"] = value;
            }
        }
        
        public String Message {
            get {
                return this.GetString("message");
            }
            set {
                this.InnerDictionary["message"] = value;
            }
        }
        
        public StreamAttachment Attachment {
            get {
                return this.GetFacebookObject<StreamAttachment>("attachment");
            }
            set {
                this.InnerDictionary["attachment"] = value;
            }
        }
        
        public StreamAppData AppData {
            get {
                return this.GetFacebookObject<StreamAppData>("app_data");
            }
            set {
                this.InnerDictionary["app_data"] = value;
            }
        }
        
        public FacebookList<StreamActionLink> ActionLinks {
            get {
                return this.GetFacebookObjectCollection<StreamActionLink>("action_links");
            }
            set {
                this.InnerDictionary["action_links"] = value;
            }
        }
        
        public StreamComments Comments {
            get {
                return this.GetFacebookObject<StreamComments>("comments");
            }
            set {
                this.InnerDictionary["comments"] = value;
            }
        }
        
        public StreamLikes Likes {
            get {
                return this.GetFacebookObject<StreamLikes>("likes");
            }
            set {
                this.InnerDictionary["likes"] = value;
            }
        }
        
        public String Privacy {
            get {
                return this.GetString("privacy");
            }
            set {
                this.InnerDictionary["privacy"] = value;
            }
        }
        
        public DateTime UpdatedTime {
            get {
                return this.GetValueType<DateTime>("updated_time");
            }
            set {
                this.InnerDictionary["updated_time"] = value;
            }
        }
        
        public DateTime CreatedTime {
            get {
                return this.GetValueType<DateTime>("created_time");
            }
            set {
                this.InnerDictionary["created_time"] = value;
            }
        }
    }
}
